//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Tutorial.LinqToEntities.FullWithViews.FullAdventureWorksWithViews),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets78bfc4cb21b549d62e98e01a8cb974d8950d45d66bbf9110c0cbbaaecff8e744))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets78bfc4cb21b549d62e98e01a8cb974d8950d45d66bbf9110c0cbbaaecff8e744 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "78bfc4cb21b549d62e98e01a8cb974d8950d45d66bbf9110c0cbbaaecff8e744"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.AwBuildVersion")
            {
                return GetView0();
            }

            if (extentName == "FullAdventureWorksWithViews.AwBuildVersions")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.DatabaseLog")
            {
                return GetView2();
            }

            if (extentName == "FullAdventureWorksWithViews.DatabaseLogs")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.ErrorLog")
            {
                return GetView4();
            }

            if (extentName == "FullAdventureWorksWithViews.ErrorLogs")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_Department")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_EmployeeDepartmentHistory")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_Employee")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_EmployeePayHistory")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_JobCandidate")
            {
                return GetView10();
            }

            if (extentName == "CodeFirstDatabase.Person_Person")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.Person_BusinessEntity")
            {
                return GetView12();
            }

            if (extentName == "CodeFirstDatabase.Person_BusinessEntityAddress")
            {
                return GetView13();
            }

            if (extentName == "CodeFirstDatabase.Person_Address")
            {
                return GetView14();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesOrderHeader")
            {
                return GetView15();
            }

            if (extentName == "CodeFirstDatabase.Purchasing_ShipMethod")
            {
                return GetView16();
            }

            if (extentName == "CodeFirstDatabase.Purchasing_PurchaseOrderHeader")
            {
                return GetView17();
            }

            if (extentName == "CodeFirstDatabase.Purchasing_PurchaseOrderDetail")
            {
                return GetView18();
            }

            if (extentName == "CodeFirstDatabase.Production_Product")
            {
                return GetView19();
            }

            if (extentName == "CodeFirstDatabase.Production_BillOfMaterial")
            {
                return GetView20();
            }

            if (extentName == "CodeFirstDatabase.Production_UnitMeasure")
            {
                return GetView21();
            }

            if (extentName == "CodeFirstDatabase.Purchasing_ProductVendor")
            {
                return GetView22();
            }

            if (extentName == "CodeFirstDatabase.Purchasing_Vendor")
            {
                return GetView23();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductCostHistory")
            {
                return GetView24();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductInventory")
            {
                return GetView25();
            }

            if (extentName == "CodeFirstDatabase.Production_Location")
            {
                return GetView26();
            }

            if (extentName == "CodeFirstDatabase.Production_WorkOrderRouting")
            {
                return GetView27();
            }

            if (extentName == "CodeFirstDatabase.Production_WorkOrder")
            {
                return GetView28();
            }

            if (extentName == "CodeFirstDatabase.Production_ScrapReason")
            {
                return GetView29();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductListPriceHistory")
            {
                return GetView30();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductModel")
            {
                return GetView31();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductModelIllustration")
            {
                return GetView32();
            }

            if (extentName == "CodeFirstDatabase.Production_Illustration")
            {
                return GetView33();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductModelProductDescriptionCulture")
            {
                return GetView34();
            }

            if (extentName == "CodeFirstDatabase.Production_Culture")
            {
                return GetView35();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductDescription")
            {
                return GetView36();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductProductPhoto")
            {
                return GetView37();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductPhoto")
            {
                return GetView38();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductReview")
            {
                return GetView39();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductSubcategory")
            {
                return GetView40();
            }

            if (extentName == "CodeFirstDatabase.Production_ProductCategory")
            {
                return GetView41();
            }

            if (extentName == "CodeFirstDatabase.Production_TransactionHistory")
            {
                return GetView42();
            }

            if (extentName == "CodeFirstDatabase.Sales_ShoppingCartItem")
            {
                return GetView43();
            }

            if (extentName == "CodeFirstDatabase.Sales_SpecialOfferProduct")
            {
                return GetView44();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesOrderDetail")
            {
                return GetView45();
            }

            if (extentName == "CodeFirstDatabase.Sales_SpecialOffer")
            {
                return GetView46();
            }

            if (extentName == "CodeFirstDatabase.Sales_CreditCard")
            {
                return GetView47();
            }

            if (extentName == "CodeFirstDatabase.Sales_PersonCreditCard")
            {
                return GetView48();
            }

            if (extentName == "CodeFirstDatabase.Sales_CurrencyRate")
            {
                return GetView49();
            }

            if (extentName == "CodeFirstDatabase.Sales_Currency")
            {
                return GetView50();
            }

            if (extentName == "CodeFirstDatabase.Sales_CountryRegionCurrency")
            {
                return GetView51();
            }

            if (extentName == "CodeFirstDatabase.Person_CountryRegion")
            {
                return GetView52();
            }

            if (extentName == "CodeFirstDatabase.Person_StateProvince")
            {
                return GetView53();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesTaxRate")
            {
                return GetView54();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesTerritory")
            {
                return GetView55();
            }

            if (extentName == "CodeFirstDatabase.Sales_Customer")
            {
                return GetView56();
            }

            if (extentName == "CodeFirstDatabase.Sales_Store")
            {
                return GetView57();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesPerson")
            {
                return GetView58();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesPersonQuotaHistory")
            {
                return GetView59();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesTerritoryHistory")
            {
                return GetView60();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesOrderHeaderSalesReason")
            {
                return GetView61();
            }

            if (extentName == "CodeFirstDatabase.Sales_SalesReason")
            {
                return GetView62();
            }

            if (extentName == "CodeFirstDatabase.Person_AddressType")
            {
                return GetView63();
            }

            if (extentName == "CodeFirstDatabase.Person_BusinessEntityContact")
            {
                return GetView64();
            }

            if (extentName == "CodeFirstDatabase.Person_ContactType")
            {
                return GetView65();
            }

            if (extentName == "CodeFirstDatabase.Person_EmailAddress")
            {
                return GetView66();
            }

            if (extentName == "CodeFirstDatabase.Person_Password")
            {
                return GetView67();
            }

            if (extentName == "CodeFirstDatabase.Person_PersonPhone")
            {
                return GetView68();
            }

            if (extentName == "CodeFirstDatabase.Person_PhoneNumberType")
            {
                return GetView69();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_Shift")
            {
                return GetView70();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_Departments")
            {
                return GetView71();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_EmployeeDepartmentHistories")
            {
                return GetView72();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_Employees")
            {
                return GetView73();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_EmployeePayHistories")
            {
                return GetView74();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_JobCandidates")
            {
                return GetView75();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_People")
            {
                return GetView76();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_BusinessEntities")
            {
                return GetView77();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_BusinessEntityAddresses")
            {
                return GetView78();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_Addresses")
            {
                return GetView79();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesOrderHeaders")
            {
                return GetView80();
            }

            if (extentName == "FullAdventureWorksWithViews.Purchasing_ShipMethods")
            {
                return GetView81();
            }

            if (extentName == "FullAdventureWorksWithViews.Purchasing_PurchaseOrderHeaders")
            {
                return GetView82();
            }

            if (extentName == "FullAdventureWorksWithViews.Purchasing_PurchaseOrderDetails")
            {
                return GetView83();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_Products")
            {
                return GetView84();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_BillOfMaterials")
            {
                return GetView85();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_UnitMeasures")
            {
                return GetView86();
            }

            if (extentName == "FullAdventureWorksWithViews.Purchasing_ProductVendors")
            {
                return GetView87();
            }

            if (extentName == "FullAdventureWorksWithViews.Purchasing_Vendors")
            {
                return GetView88();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductCostHistories")
            {
                return GetView89();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductInventories")
            {
                return GetView90();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_Locations")
            {
                return GetView91();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_WorkOrderRoutings")
            {
                return GetView92();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_WorkOrders")
            {
                return GetView93();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ScrapReasons")
            {
                return GetView94();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductListPriceHistories")
            {
                return GetView95();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductModels")
            {
                return GetView96();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductModelIllustrations")
            {
                return GetView97();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_Illustrations")
            {
                return GetView98();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductModelProductDescriptionCultures")
            {
                return GetView99();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_Cultures")
            {
                return GetView100();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductDescriptions")
            {
                return GetView101();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductProductPhotoes")
            {
                return GetView102();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductPhotoes")
            {
                return GetView103();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductReviews")
            {
                return GetView104();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductSubcategories")
            {
                return GetView105();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_ProductCategories")
            {
                return GetView106();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_TransactionHistories")
            {
                return GetView107();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_ShoppingCartItems")
            {
                return GetView108();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SpecialOfferProducts")
            {
                return GetView109();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesOrderDetails")
            {
                return GetView110();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SpecialOffers")
            {
                return GetView111();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_CreditCards")
            {
                return GetView112();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_PersonCreditCards")
            {
                return GetView113();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_CurrencyRates")
            {
                return GetView114();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_Currencies")
            {
                return GetView115();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_CountryRegionCurrencies")
            {
                return GetView116();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_CountryRegions")
            {
                return GetView117();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_StateProvinces")
            {
                return GetView118();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesTaxRates")
            {
                return GetView119();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesTerritories")
            {
                return GetView120();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_Customers")
            {
                return GetView121();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_Stores")
            {
                return GetView122();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesPersons")
            {
                return GetView123();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesPersonQuotaHistories")
            {
                return GetView124();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesTerritoryHistories")
            {
                return GetView125();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesOrderHeaderSalesReasons")
            {
                return GetView126();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_SalesReasons")
            {
                return GetView127();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_AddressTypes")
            {
                return GetView128();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_BusinessEntityContacts")
            {
                return GetView129();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_ContactTypes")
            {
                return GetView130();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_EmailAddresses")
            {
                return GetView131();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_Passwords")
            {
                return GetView132();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_PersonPhones")
            {
                return GetView133();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_PhoneNumberTypes")
            {
                return GetView134();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_Shifts")
            {
                return GetView135();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_VEmployeeDepartmentHistory")
            {
                return GetView136();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_VEmployeeDepartmentHistories")
            {
                return GetView137();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_VEmployeeDepartment")
            {
                return GetView138();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_VEmployeeDepartments")
            {
                return GetView139();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_VEmployee")
            {
                return GetView140();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_VEmployees")
            {
                return GetView141();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_VJobCandidateEducation")
            {
                return GetView142();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_VJobCandidateEducations")
            {
                return GetView143();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_VJobCandidateEmployment")
            {
                return GetView144();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_VJobCandidateEmployments")
            {
                return GetView145();
            }

            if (extentName == "CodeFirstDatabase.HumanResources_VJobCandidate")
            {
                return GetView146();
            }

            if (extentName == "FullAdventureWorksWithViews.HumanResources_VJobCandidates")
            {
                return GetView147();
            }

            if (extentName == "CodeFirstDatabase.Person_VAdditionalContactInfo")
            {
                return GetView148();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_VAdditionalContactInfoes")
            {
                return GetView149();
            }

            if (extentName == "CodeFirstDatabase.Person_VStateProvinceCountryRegion")
            {
                return GetView150();
            }

            if (extentName == "FullAdventureWorksWithViews.Person_VStateProvinceCountryRegions")
            {
                return GetView151();
            }

            if (extentName == "CodeFirstDatabase.Production_TransactionHistoryArchive")
            {
                return GetView152();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_TransactionHistoryArchives")
            {
                return GetView153();
            }

            if (extentName == "CodeFirstDatabase.Production_VProductAndDescription")
            {
                return GetView154();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_VProductAndDescriptions")
            {
                return GetView155();
            }

            if (extentName == "CodeFirstDatabase.Production_VProductModelCatalogDescription")
            {
                return GetView156();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_VProductModelCatalogDescriptions")
            {
                return GetView157();
            }

            if (extentName == "CodeFirstDatabase.Production_VProductModelInstruction")
            {
                return GetView158();
            }

            if (extentName == "FullAdventureWorksWithViews.Production_VProductModelInstructions")
            {
                return GetView159();
            }

            if (extentName == "CodeFirstDatabase.Purchasing_VVendorWithAddress")
            {
                return GetView160();
            }

            if (extentName == "FullAdventureWorksWithViews.Purchasing_VVendorWithAddresses")
            {
                return GetView161();
            }

            if (extentName == "CodeFirstDatabase.Purchasing_VVendorWithContact")
            {
                return GetView162();
            }

            if (extentName == "FullAdventureWorksWithViews.Purchasing_VVendorWithContacts")
            {
                return GetView163();
            }

            if (extentName == "CodeFirstDatabase.Sales_VIndividualCustomer")
            {
                return GetView164();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_VIndividualCustomers")
            {
                return GetView165();
            }

            if (extentName == "CodeFirstDatabase.Sales_VPersonDemographic")
            {
                return GetView166();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_VPersonDemographics")
            {
                return GetView167();
            }

            if (extentName == "CodeFirstDatabase.Sales_VSalesPerson")
            {
                return GetView168();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_VSalesPersons")
            {
                return GetView169();
            }

            if (extentName == "CodeFirstDatabase.Sales_VSalesPersonSalesByFiscalYear")
            {
                return GetView170();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_VSalesPersonSalesByFiscalYears")
            {
                return GetView171();
            }

            if (extentName == "CodeFirstDatabase.Sales_VStoreWithAddress")
            {
                return GetView172();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_VStoreWithAddresses")
            {
                return GetView173();
            }

            if (extentName == "CodeFirstDatabase.Sales_VStoreWithContact")
            {
                return GetView174();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_VStoreWithContacts")
            {
                return GetView175();
            }

            if (extentName == "CodeFirstDatabase.Sales_VStoreWithDemographic")
            {
                return GetView176();
            }

            if (extentName == "FullAdventureWorksWithViews.Sales_VStoreWithDemographics")
            {
                return GetView177();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.AwBuildVersion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AwBuildVersion
        [CodeFirstDatabaseSchema.AwBuildVersion](T1.AwBuildVersion_SystemInformationID, T1.[AwBuildVersion_Database Version], T1.AwBuildVersion_VersionDate, T1.AwBuildVersion_ModifiedDate)
    FROM (
        SELECT 
            T.SystemInformationId AS AwBuildVersion_SystemInformationID, 
            T.DatabaseVersion AS [AwBuildVersion_Database Version], 
            T.VersionDate AS AwBuildVersion_VersionDate, 
            T.ModifiedDate AS AwBuildVersion_ModifiedDate, 
            True AS _from0
        FROM FullAdventureWorksWithViews.AwBuildVersions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.AwBuildVersions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing AwBuildVersions
        [Tutorial.LinqToEntities.FullWithViews.AwBuildVersion](T1.AwBuildVersion_SystemInformationId, T1.AwBuildVersion_DatabaseVersion, T1.AwBuildVersion_VersionDate, T1.AwBuildVersion_ModifiedDate)
    FROM (
        SELECT 
            T.SystemInformationID AS AwBuildVersion_SystemInformationId, 
            T.[Database Version] AS AwBuildVersion_DatabaseVersion, 
            T.VersionDate AS AwBuildVersion_VersionDate, 
            T.ModifiedDate AS AwBuildVersion_ModifiedDate, 
            True AS _from0
        FROM CodeFirstDatabase.AwBuildVersion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DatabaseLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DatabaseLog
        [CodeFirstDatabaseSchema.DatabaseLog](T1.DatabaseLog_DatabaseLogID, T1.DatabaseLog_PostTime, T1.DatabaseLog_DatabaseUser, T1.DatabaseLog_Event, T1.DatabaseLog_Schema, T1.DatabaseLog_Object, T1.DatabaseLog_TSQL, T1.DatabaseLog_XmlEvent)
    FROM (
        SELECT 
            T.DatabaseLogId AS DatabaseLog_DatabaseLogID, 
            T.PostTime AS DatabaseLog_PostTime, 
            T.DatabaseUser AS DatabaseLog_DatabaseUser, 
            T.Event AS DatabaseLog_Event, 
            T.Schema AS DatabaseLog_Schema, 
            T.Object AS DatabaseLog_Object, 
            T.Tsql AS DatabaseLog_TSQL, 
            T.XmlEvent AS DatabaseLog_XmlEvent, 
            True AS _from0
        FROM FullAdventureWorksWithViews.DatabaseLogs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.DatabaseLogs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DatabaseLogs
        [Tutorial.LinqToEntities.FullWithViews.DatabaseLog](T1.DatabaseLog_DatabaseLogId, T1.DatabaseLog_PostTime, T1.DatabaseLog_DatabaseUser, T1.DatabaseLog_Event, T1.DatabaseLog_Schema, T1.DatabaseLog_Object, T1.DatabaseLog_Tsql, T1.DatabaseLog_XmlEvent)
    FROM (
        SELECT 
            T.DatabaseLogID AS DatabaseLog_DatabaseLogId, 
            T.PostTime AS DatabaseLog_PostTime, 
            T.DatabaseUser AS DatabaseLog_DatabaseUser, 
            T.Event AS DatabaseLog_Event, 
            T.Schema AS DatabaseLog_Schema, 
            T.Object AS DatabaseLog_Object, 
            T.TSQL AS DatabaseLog_Tsql, 
            T.XmlEvent AS DatabaseLog_XmlEvent, 
            True AS _from0
        FROM CodeFirstDatabase.DatabaseLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ErrorLog.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ErrorLog
        [CodeFirstDatabaseSchema.ErrorLog](T1.ErrorLog_ErrorLogID, T1.ErrorLog_ErrorTime, T1.ErrorLog_UserName, T1.ErrorLog_ErrorNumber, T1.ErrorLog_ErrorSeverity, T1.ErrorLog_ErrorState, T1.ErrorLog_ErrorProcedure, T1.ErrorLog_ErrorLine, T1.ErrorLog_ErrorMessage)
    FROM (
        SELECT 
            T.ErrorLogId AS ErrorLog_ErrorLogID, 
            T.ErrorTime AS ErrorLog_ErrorTime, 
            T.UserName AS ErrorLog_UserName, 
            T.ErrorNumber AS ErrorLog_ErrorNumber, 
            T.ErrorSeverity AS ErrorLog_ErrorSeverity, 
            T.ErrorState AS ErrorLog_ErrorState, 
            T.ErrorProcedure AS ErrorLog_ErrorProcedure, 
            T.ErrorLine AS ErrorLog_ErrorLine, 
            T.ErrorMessage AS ErrorLog_ErrorMessage, 
            True AS _from0
        FROM FullAdventureWorksWithViews.ErrorLogs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.ErrorLogs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ErrorLogs
        [Tutorial.LinqToEntities.FullWithViews.ErrorLog](T1.ErrorLog_ErrorLogId, T1.ErrorLog_ErrorTime, T1.ErrorLog_UserName, T1.ErrorLog_ErrorNumber, T1.ErrorLog_ErrorSeverity, T1.ErrorLog_ErrorState, T1.ErrorLog_ErrorProcedure, T1.ErrorLog_ErrorLine, T1.ErrorLog_ErrorMessage)
    FROM (
        SELECT 
            T.ErrorLogID AS ErrorLog_ErrorLogId, 
            T.ErrorTime AS ErrorLog_ErrorTime, 
            T.UserName AS ErrorLog_UserName, 
            T.ErrorNumber AS ErrorLog_ErrorNumber, 
            T.ErrorSeverity AS ErrorLog_ErrorSeverity, 
            T.ErrorState AS ErrorLog_ErrorState, 
            T.ErrorProcedure AS ErrorLog_ErrorProcedure, 
            T.ErrorLine AS ErrorLog_ErrorLine, 
            T.ErrorMessage AS ErrorLog_ErrorMessage, 
            True AS _from0
        FROM CodeFirstDatabase.ErrorLog AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_Department.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_Department
        [CodeFirstDatabaseSchema.HumanResources_Department](T1.[HumanResources_Department.DepartmentID], T1.[HumanResources_Department.Name], T1.[HumanResources_Department.GroupName], T1.[HumanResources_Department.ModifiedDate])
    FROM (
        SELECT 
            T.DepartmentId AS [HumanResources_Department.DepartmentID], 
            T.Name AS [HumanResources_Department.Name], 
            T.GroupName AS [HumanResources_Department.GroupName], 
            T.ModifiedDate AS [HumanResources_Department.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_Departments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_EmployeeDepartmentHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_EmployeeDepartmentHistory
        [CodeFirstDatabaseSchema.HumanResources_EmployeeDepartmentHistory](T1.[HumanResources_EmployeeDepartmentHistory.BusinessEntityID], T1.[HumanResources_EmployeeDepartmentHistory.StartDate], T1.[HumanResources_EmployeeDepartmentHistory.DepartmentID], T1.[HumanResources_EmployeeDepartmentHistory.ShiftID], T1.[HumanResources_EmployeeDepartmentHistory.EndDate], T1.[HumanResources_EmployeeDepartmentHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [HumanResources_EmployeeDepartmentHistory.BusinessEntityID], 
            T.StartDate AS [HumanResources_EmployeeDepartmentHistory.StartDate], 
            T.DepartmentId AS [HumanResources_EmployeeDepartmentHistory.DepartmentID], 
            T.ShiftId AS [HumanResources_EmployeeDepartmentHistory.ShiftID], 
            T.EndDate AS [HumanResources_EmployeeDepartmentHistory.EndDate], 
            T.ModifiedDate AS [HumanResources_EmployeeDepartmentHistory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_EmployeeDepartmentHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_Employee.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_Employee
        [CodeFirstDatabaseSchema.HumanResources_Employee](T1.[HumanResources_Employee.BusinessEntityID], T1.[HumanResources_Employee.NationalIDNumber], T1.[HumanResources_Employee.LoginID], T1.[HumanResources_Employee.OrganizationLevel], T1.[HumanResources_Employee.JobTitle], T1.[HumanResources_Employee.BirthDate], T1.[HumanResources_Employee.MaritalStatus], T1.[HumanResources_Employee.Gender], T1.[HumanResources_Employee.HireDate], T1.[HumanResources_Employee.SalariedFlag], T1.[HumanResources_Employee.VacationHours], T1.[HumanResources_Employee.SickLeaveHours], T1.[HumanResources_Employee.CurrentFlag], T1.[HumanResources_Employee.rowguid], T1.[HumanResources_Employee.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [HumanResources_Employee.BusinessEntityID], 
            T.NationalIdNumber AS [HumanResources_Employee.NationalIDNumber], 
            T.LoginId AS [HumanResources_Employee.LoginID], 
            T.OrganizationLevel AS [HumanResources_Employee.OrganizationLevel], 
            T.JobTitle AS [HumanResources_Employee.JobTitle], 
            T.BirthDate AS [HumanResources_Employee.BirthDate], 
            T.MaritalStatus AS [HumanResources_Employee.MaritalStatus], 
            T.Gender AS [HumanResources_Employee.Gender], 
            T.HireDate AS [HumanResources_Employee.HireDate], 
            T.SalariedFlag AS [HumanResources_Employee.SalariedFlag], 
            T.VacationHours AS [HumanResources_Employee.VacationHours], 
            T.SickLeaveHours AS [HumanResources_Employee.SickLeaveHours], 
            T.CurrentFlag AS [HumanResources_Employee.CurrentFlag], 
            T.Rowguid AS [HumanResources_Employee.rowguid], 
            T.ModifiedDate AS [HumanResources_Employee.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_Employees AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_EmployeePayHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_EmployeePayHistory
        [CodeFirstDatabaseSchema.HumanResources_EmployeePayHistory](T1.[HumanResources_EmployeePayHistory.BusinessEntityID], T1.[HumanResources_EmployeePayHistory.RateChangeDate], T1.[HumanResources_EmployeePayHistory.Rate], T1.[HumanResources_EmployeePayHistory.PayFrequency], T1.[HumanResources_EmployeePayHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [HumanResources_EmployeePayHistory.BusinessEntityID], 
            T.RateChangeDate AS [HumanResources_EmployeePayHistory.RateChangeDate], 
            T.Rate AS [HumanResources_EmployeePayHistory.Rate], 
            T.PayFrequency AS [HumanResources_EmployeePayHistory.PayFrequency], 
            T.ModifiedDate AS [HumanResources_EmployeePayHistory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_EmployeePayHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_JobCandidate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_JobCandidate
        [CodeFirstDatabaseSchema.HumanResources_JobCandidate](T1.[HumanResources_JobCandidate.JobCandidateID], T1.[HumanResources_JobCandidate.BusinessEntityID], T1.[HumanResources_JobCandidate.Resume], T1.[HumanResources_JobCandidate.ModifiedDate])
    FROM (
        SELECT 
            T.JobCandidateId AS [HumanResources_JobCandidate.JobCandidateID], 
            T.BusinessEntityId AS [HumanResources_JobCandidate.BusinessEntityID], 
            T.Resume AS [HumanResources_JobCandidate.Resume], 
            T.ModifiedDate AS [HumanResources_JobCandidate.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_JobCandidates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_Person.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_Person
        [CodeFirstDatabaseSchema.Person_Person](T1.[Person_Person.BusinessEntityID], T1.[Person_Person.PersonType], T1.[Person_Person.NameStyle], T1.[Person_Person.Title], T1.[Person_Person.FirstName], T1.[Person_Person.MiddleName], T1.[Person_Person.LastName], T1.[Person_Person.Suffix], T1.[Person_Person.EmailPromotion], T1.[Person_Person.AdditionalContactInfo], T1.[Person_Person.Demographics], T1.[Person_Person.rowguid], T1.[Person_Person.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_Person.BusinessEntityID], 
            T.PersonType AS [Person_Person.PersonType], 
            T.NameStyle AS [Person_Person.NameStyle], 
            T.Title AS [Person_Person.Title], 
            T.FirstName AS [Person_Person.FirstName], 
            T.MiddleName AS [Person_Person.MiddleName], 
            T.LastName AS [Person_Person.LastName], 
            T.Suffix AS [Person_Person.Suffix], 
            T.EmailPromotion AS [Person_Person.EmailPromotion], 
            T.AdditionalContactInfo AS [Person_Person.AdditionalContactInfo], 
            T.Demographics AS [Person_Person.Demographics], 
            T.Rowguid AS [Person_Person.rowguid], 
            T.ModifiedDate AS [Person_Person.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_People AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_BusinessEntity.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_BusinessEntity
        [CodeFirstDatabaseSchema.Person_BusinessEntity](T1.[Person_BusinessEntity.BusinessEntityID], T1.[Person_BusinessEntity.rowguid], T1.[Person_BusinessEntity.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_BusinessEntity.BusinessEntityID], 
            T.Rowguid AS [Person_BusinessEntity.rowguid], 
            T.ModifiedDate AS [Person_BusinessEntity.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_BusinessEntities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_BusinessEntityAddress.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_BusinessEntityAddress
        [CodeFirstDatabaseSchema.Person_BusinessEntityAddress](T1.[Person_BusinessEntityAddress.BusinessEntityID], T1.[Person_BusinessEntityAddress.AddressID], T1.[Person_BusinessEntityAddress.AddressTypeID], T1.[Person_BusinessEntityAddress.rowguid], T1.[Person_BusinessEntityAddress.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_BusinessEntityAddress.BusinessEntityID], 
            T.AddressId AS [Person_BusinessEntityAddress.AddressID], 
            T.AddressTypeId AS [Person_BusinessEntityAddress.AddressTypeID], 
            T.Rowguid AS [Person_BusinessEntityAddress.rowguid], 
            T.ModifiedDate AS [Person_BusinessEntityAddress.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_BusinessEntityAddresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_Address.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_Address
        [CodeFirstDatabaseSchema.Person_Address](T1.[Person_Address.AddressID], T1.[Person_Address.AddressLine1], T1.[Person_Address.AddressLine2], T1.[Person_Address.City], T1.[Person_Address.StateProvinceID], T1.[Person_Address.PostalCode], T1.[Person_Address.SpatialLocation], T1.[Person_Address.rowguid], T1.[Person_Address.ModifiedDate])
    FROM (
        SELECT 
            T.AddressId AS [Person_Address.AddressID], 
            T.AddressLine1 AS [Person_Address.AddressLine1], 
            T.AddressLine2 AS [Person_Address.AddressLine2], 
            T.City AS [Person_Address.City], 
            T.StateProvinceId AS [Person_Address.StateProvinceID], 
            T.PostalCode AS [Person_Address.PostalCode], 
            T.SpatialLocation AS [Person_Address.SpatialLocation], 
            T.Rowguid AS [Person_Address.rowguid], 
            T.ModifiedDate AS [Person_Address.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_Addresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesOrderHeader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesOrderHeader
        [CodeFirstDatabaseSchema.Sales_SalesOrderHeader](T1.[Sales_SalesOrderHeader.SalesOrderID], T1.[Sales_SalesOrderHeader.RevisionNumber], T1.[Sales_SalesOrderHeader.OrderDate], T1.[Sales_SalesOrderHeader.DueDate], T1.[Sales_SalesOrderHeader.ShipDate], T1.[Sales_SalesOrderHeader.Status], T1.[Sales_SalesOrderHeader.OnlineOrderFlag], T1.[Sales_SalesOrderHeader.SalesOrderNumber], T1.[Sales_SalesOrderHeader.PurchaseOrderNumber], T1.[Sales_SalesOrderHeader.AccountNumber], T1.[Sales_SalesOrderHeader.CustomerID], T1.[Sales_SalesOrderHeader.SalesPersonID], T1.[Sales_SalesOrderHeader.TerritoryID], T1.[Sales_SalesOrderHeader.BillToAddressID], T1.[Sales_SalesOrderHeader.ShipToAddressID], T1.[Sales_SalesOrderHeader.ShipMethodID], T1.[Sales_SalesOrderHeader.CreditCardID], T1.[Sales_SalesOrderHeader.CreditCardApprovalCode], T1.[Sales_SalesOrderHeader.CurrencyRateID], T1.[Sales_SalesOrderHeader.SubTotal], T1.[Sales_SalesOrderHeader.TaxAmt], T1.[Sales_SalesOrderHeader.Freight], T1.[Sales_SalesOrderHeader.TotalDue], T1.[Sales_SalesOrderHeader.Comment], T1.[Sales_SalesOrderHeader.rowguid], T1.[Sales_SalesOrderHeader.ModifiedDate])
    FROM (
        SELECT 
            T.SalesOrderId AS [Sales_SalesOrderHeader.SalesOrderID], 
            T.RevisionNumber AS [Sales_SalesOrderHeader.RevisionNumber], 
            T.OrderDate AS [Sales_SalesOrderHeader.OrderDate], 
            T.DueDate AS [Sales_SalesOrderHeader.DueDate], 
            T.ShipDate AS [Sales_SalesOrderHeader.ShipDate], 
            T.Status AS [Sales_SalesOrderHeader.Status], 
            T.OnlineOrderFlag AS [Sales_SalesOrderHeader.OnlineOrderFlag], 
            T.SalesOrderNumber AS [Sales_SalesOrderHeader.SalesOrderNumber], 
            T.PurchaseOrderNumber AS [Sales_SalesOrderHeader.PurchaseOrderNumber], 
            T.AccountNumber AS [Sales_SalesOrderHeader.AccountNumber], 
            T.CustomerId AS [Sales_SalesOrderHeader.CustomerID], 
            T.SalesPersonId AS [Sales_SalesOrderHeader.SalesPersonID], 
            T.TerritoryId AS [Sales_SalesOrderHeader.TerritoryID], 
            T.BillToAddressId AS [Sales_SalesOrderHeader.BillToAddressID], 
            T.ShipToAddressId AS [Sales_SalesOrderHeader.ShipToAddressID], 
            T.ShipMethodId AS [Sales_SalesOrderHeader.ShipMethodID], 
            T.CreditCardId AS [Sales_SalesOrderHeader.CreditCardID], 
            T.CreditCardApprovalCode AS [Sales_SalesOrderHeader.CreditCardApprovalCode], 
            T.CurrencyRateId AS [Sales_SalesOrderHeader.CurrencyRateID], 
            T.SubTotal AS [Sales_SalesOrderHeader.SubTotal], 
            T.TaxAmt AS [Sales_SalesOrderHeader.TaxAmt], 
            T.Freight AS [Sales_SalesOrderHeader.Freight], 
            T.TotalDue AS [Sales_SalesOrderHeader.TotalDue], 
            T.Comment AS [Sales_SalesOrderHeader.Comment], 
            T.Rowguid AS [Sales_SalesOrderHeader.rowguid], 
            T.ModifiedDate AS [Sales_SalesOrderHeader.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesOrderHeaders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Purchasing_ShipMethod.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_ShipMethod
        [CodeFirstDatabaseSchema.Purchasing_ShipMethod](T1.[Purchasing_ShipMethod.ShipMethodID], T1.[Purchasing_ShipMethod.Name], T1.[Purchasing_ShipMethod.ShipBase], T1.[Purchasing_ShipMethod.ShipRate], T1.[Purchasing_ShipMethod.rowguid], T1.[Purchasing_ShipMethod.ModifiedDate])
    FROM (
        SELECT 
            T.ShipMethodId AS [Purchasing_ShipMethod.ShipMethodID], 
            T.Name AS [Purchasing_ShipMethod.Name], 
            T.ShipBase AS [Purchasing_ShipMethod.ShipBase], 
            T.ShipRate AS [Purchasing_ShipMethod.ShipRate], 
            T.Rowguid AS [Purchasing_ShipMethod.rowguid], 
            T.ModifiedDate AS [Purchasing_ShipMethod.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Purchasing_ShipMethods AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Purchasing_PurchaseOrderHeader.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_PurchaseOrderHeader
        [CodeFirstDatabaseSchema.Purchasing_PurchaseOrderHeader](T1.[Purchasing_PurchaseOrderHeader.PurchaseOrderID], T1.[Purchasing_PurchaseOrderHeader.RevisionNumber], T1.[Purchasing_PurchaseOrderHeader.Status], T1.[Purchasing_PurchaseOrderHeader.EmployeeID], T1.[Purchasing_PurchaseOrderHeader.VendorID], T1.[Purchasing_PurchaseOrderHeader.ShipMethodID], T1.[Purchasing_PurchaseOrderHeader.OrderDate], T1.[Purchasing_PurchaseOrderHeader.ShipDate], T1.[Purchasing_PurchaseOrderHeader.SubTotal], T1.[Purchasing_PurchaseOrderHeader.TaxAmt], T1.[Purchasing_PurchaseOrderHeader.Freight], T1.[Purchasing_PurchaseOrderHeader.TotalDue], T1.[Purchasing_PurchaseOrderHeader.ModifiedDate])
    FROM (
        SELECT 
            T.PurchaseOrderId AS [Purchasing_PurchaseOrderHeader.PurchaseOrderID], 
            T.RevisionNumber AS [Purchasing_PurchaseOrderHeader.RevisionNumber], 
            T.Status AS [Purchasing_PurchaseOrderHeader.Status], 
            T.EmployeeId AS [Purchasing_PurchaseOrderHeader.EmployeeID], 
            T.VendorId AS [Purchasing_PurchaseOrderHeader.VendorID], 
            T.ShipMethodId AS [Purchasing_PurchaseOrderHeader.ShipMethodID], 
            T.OrderDate AS [Purchasing_PurchaseOrderHeader.OrderDate], 
            T.ShipDate AS [Purchasing_PurchaseOrderHeader.ShipDate], 
            T.SubTotal AS [Purchasing_PurchaseOrderHeader.SubTotal], 
            T.TaxAmt AS [Purchasing_PurchaseOrderHeader.TaxAmt], 
            T.Freight AS [Purchasing_PurchaseOrderHeader.Freight], 
            T.TotalDue AS [Purchasing_PurchaseOrderHeader.TotalDue], 
            T.ModifiedDate AS [Purchasing_PurchaseOrderHeader.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Purchasing_PurchaseOrderHeaders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Purchasing_PurchaseOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_PurchaseOrderDetail
        [CodeFirstDatabaseSchema.Purchasing_PurchaseOrderDetail](T1.[Purchasing_PurchaseOrderDetail.PurchaseOrderID], T1.[Purchasing_PurchaseOrderDetail.PurchaseOrderDetailID], T1.[Purchasing_PurchaseOrderDetail.DueDate], T1.[Purchasing_PurchaseOrderDetail.OrderQty], T1.[Purchasing_PurchaseOrderDetail.ProductID], T1.[Purchasing_PurchaseOrderDetail.UnitPrice], T1.[Purchasing_PurchaseOrderDetail.LineTotal], T1.[Purchasing_PurchaseOrderDetail.ReceivedQty], T1.[Purchasing_PurchaseOrderDetail.RejectedQty], T1.[Purchasing_PurchaseOrderDetail.StockedQty], T1.[Purchasing_PurchaseOrderDetail.ModifiedDate])
    FROM (
        SELECT 
            T.PurchaseOrderId AS [Purchasing_PurchaseOrderDetail.PurchaseOrderID], 
            T.PurchaseOrderDetailId AS [Purchasing_PurchaseOrderDetail.PurchaseOrderDetailID], 
            T.DueDate AS [Purchasing_PurchaseOrderDetail.DueDate], 
            T.OrderQty AS [Purchasing_PurchaseOrderDetail.OrderQty], 
            T.ProductId AS [Purchasing_PurchaseOrderDetail.ProductID], 
            T.UnitPrice AS [Purchasing_PurchaseOrderDetail.UnitPrice], 
            T.LineTotal AS [Purchasing_PurchaseOrderDetail.LineTotal], 
            T.ReceivedQty AS [Purchasing_PurchaseOrderDetail.ReceivedQty], 
            T.RejectedQty AS [Purchasing_PurchaseOrderDetail.RejectedQty], 
            T.StockedQty AS [Purchasing_PurchaseOrderDetail.StockedQty], 
            T.ModifiedDate AS [Purchasing_PurchaseOrderDetail.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Purchasing_PurchaseOrderDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Product
        [CodeFirstDatabaseSchema.Production_Product](T1.[Production_Product.ProductID], T1.[Production_Product.Name], T1.[Production_Product.ProductNumber], T1.[Production_Product.MakeFlag], T1.[Production_Product.FinishedGoodsFlag], T1.[Production_Product.Color], T1.[Production_Product.SafetyStockLevel], T1.[Production_Product.ReorderPoint], T1.[Production_Product.StandardCost], T1.[Production_Product.ListPrice], T1.[Production_Product.Size], T1.[Production_Product.SizeUnitMeasureCode], T1.[Production_Product.WeightUnitMeasureCode], T1.[Production_Product.Weight], T1.[Production_Product.DaysToManufacture], T1.[Production_Product.ProductLine], T1.[Production_Product.Class], T1.[Production_Product.Style], T1.[Production_Product.ProductSubcategoryID], T1.[Production_Product.ProductModelID], T1.[Production_Product.SellStartDate], T1.[Production_Product.SellEndDate], T1.[Production_Product.DiscontinuedDate], T1.[Production_Product.rowguid], T1.[Production_Product.ModifiedDate], T1.[Production_Product.RowVersion])
    FROM (
        SELECT 
            T.ProductId AS [Production_Product.ProductID], 
            T.Name AS [Production_Product.Name], 
            T.ProductNumber AS [Production_Product.ProductNumber], 
            T.MakeFlag AS [Production_Product.MakeFlag], 
            T.FinishedGoodsFlag AS [Production_Product.FinishedGoodsFlag], 
            T.Color AS [Production_Product.Color], 
            T.SafetyStockLevel AS [Production_Product.SafetyStockLevel], 
            T.ReorderPoint AS [Production_Product.ReorderPoint], 
            T.StandardCost AS [Production_Product.StandardCost], 
            T.ListPrice AS [Production_Product.ListPrice], 
            T.Size AS [Production_Product.Size], 
            T.SizeUnitMeasureCode AS [Production_Product.SizeUnitMeasureCode], 
            T.WeightUnitMeasureCode AS [Production_Product.WeightUnitMeasureCode], 
            T.Weight AS [Production_Product.Weight], 
            T.DaysToManufacture AS [Production_Product.DaysToManufacture], 
            T.ProductLine AS [Production_Product.ProductLine], 
            T.Class AS [Production_Product.Class], 
            T.Style AS [Production_Product.Style], 
            T.ProductSubcategoryId AS [Production_Product.ProductSubcategoryID], 
            T.ProductModelId AS [Production_Product.ProductModelID], 
            T.SellStartDate AS [Production_Product.SellStartDate], 
            T.SellEndDate AS [Production_Product.SellEndDate], 
            T.DiscontinuedDate AS [Production_Product.DiscontinuedDate], 
            T.Rowguid AS [Production_Product.rowguid], 
            T.ModifiedDate AS [Production_Product.ModifiedDate], 
            T.RowVersion AS [Production_Product.RowVersion], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_Products AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_BillOfMaterial.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_BillOfMaterial
        [CodeFirstDatabaseSchema.Production_BillOfMaterial](T1.[Production_BillOfMaterial.BillOfMaterialsID], T1.[Production_BillOfMaterial.ProductAssemblyID], T1.[Production_BillOfMaterial.ComponentID], T1.[Production_BillOfMaterial.StartDate], T1.[Production_BillOfMaterial.EndDate], T1.[Production_BillOfMaterial.UnitMeasureCode], T1.[Production_BillOfMaterial.BOMLevel], T1.[Production_BillOfMaterial.PerAssemblyQty], T1.[Production_BillOfMaterial.ModifiedDate])
    FROM (
        SELECT 
            T.BillOfMaterialsId AS [Production_BillOfMaterial.BillOfMaterialsID], 
            T.ProductAssemblyId AS [Production_BillOfMaterial.ProductAssemblyID], 
            T.ComponentId AS [Production_BillOfMaterial.ComponentID], 
            T.StartDate AS [Production_BillOfMaterial.StartDate], 
            T.EndDate AS [Production_BillOfMaterial.EndDate], 
            T.UnitMeasureCode AS [Production_BillOfMaterial.UnitMeasureCode], 
            T.BomLevel AS [Production_BillOfMaterial.BOMLevel], 
            T.PerAssemblyQty AS [Production_BillOfMaterial.PerAssemblyQty], 
            T.ModifiedDate AS [Production_BillOfMaterial.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_BillOfMaterials AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_UnitMeasure.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_UnitMeasure
        [CodeFirstDatabaseSchema.Production_UnitMeasure](T1.[Production_UnitMeasure.UnitMeasureCode], T1.[Production_UnitMeasure.Name], T1.[Production_UnitMeasure.ModifiedDate])
    FROM (
        SELECT 
            T.UnitMeasureCode AS [Production_UnitMeasure.UnitMeasureCode], 
            T.Name AS [Production_UnitMeasure.Name], 
            T.ModifiedDate AS [Production_UnitMeasure.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_UnitMeasures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Purchasing_ProductVendor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_ProductVendor
        [CodeFirstDatabaseSchema.Purchasing_ProductVendor](T1.[Purchasing_ProductVendor.ProductID], T1.[Purchasing_ProductVendor.BusinessEntityID], T1.[Purchasing_ProductVendor.AverageLeadTime], T1.[Purchasing_ProductVendor.StandardPrice], T1.[Purchasing_ProductVendor.LastReceiptCost], T1.[Purchasing_ProductVendor.LastReceiptDate], T1.[Purchasing_ProductVendor.MinOrderQty], T1.[Purchasing_ProductVendor.MaxOrderQty], T1.[Purchasing_ProductVendor.OnOrderQty], T1.[Purchasing_ProductVendor.UnitMeasureCode], T1.[Purchasing_ProductVendor.ModifiedDate])
    FROM (
        SELECT 
            T.ProductId AS [Purchasing_ProductVendor.ProductID], 
            T.BusinessEntityId AS [Purchasing_ProductVendor.BusinessEntityID], 
            T.AverageLeadTime AS [Purchasing_ProductVendor.AverageLeadTime], 
            T.StandardPrice AS [Purchasing_ProductVendor.StandardPrice], 
            T.LastReceiptCost AS [Purchasing_ProductVendor.LastReceiptCost], 
            T.LastReceiptDate AS [Purchasing_ProductVendor.LastReceiptDate], 
            T.MinOrderQty AS [Purchasing_ProductVendor.MinOrderQty], 
            T.MaxOrderQty AS [Purchasing_ProductVendor.MaxOrderQty], 
            T.OnOrderQty AS [Purchasing_ProductVendor.OnOrderQty], 
            T.UnitMeasureCode AS [Purchasing_ProductVendor.UnitMeasureCode], 
            T.ModifiedDate AS [Purchasing_ProductVendor.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Purchasing_ProductVendors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Purchasing_Vendor.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_Vendor
        [CodeFirstDatabaseSchema.Purchasing_Vendor](T1.[Purchasing_Vendor.BusinessEntityID], T1.[Purchasing_Vendor.AccountNumber], T1.[Purchasing_Vendor.Name], T1.[Purchasing_Vendor.CreditRating], T1.[Purchasing_Vendor.PreferredVendorStatus], T1.[Purchasing_Vendor.ActiveFlag], T1.[Purchasing_Vendor.PurchasingWebServiceURL], T1.[Purchasing_Vendor.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Purchasing_Vendor.BusinessEntityID], 
            T.AccountNumber AS [Purchasing_Vendor.AccountNumber], 
            T.Name AS [Purchasing_Vendor.Name], 
            T.CreditRating AS [Purchasing_Vendor.CreditRating], 
            T.PreferredVendorStatus AS [Purchasing_Vendor.PreferredVendorStatus], 
            T.ActiveFlag AS [Purchasing_Vendor.ActiveFlag], 
            T.PurchasingWebServiceUrl AS [Purchasing_Vendor.PurchasingWebServiceURL], 
            T.ModifiedDate AS [Purchasing_Vendor.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Purchasing_Vendors AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductCostHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductCostHistory
        [CodeFirstDatabaseSchema.Production_ProductCostHistory](T1.[Production_ProductCostHistory.ProductID], T1.[Production_ProductCostHistory.StartDate], T1.[Production_ProductCostHistory.EndDate], T1.[Production_ProductCostHistory.StandardCost], T1.[Production_ProductCostHistory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductId AS [Production_ProductCostHistory.ProductID], 
            T.StartDate AS [Production_ProductCostHistory.StartDate], 
            T.EndDate AS [Production_ProductCostHistory.EndDate], 
            T.StandardCost AS [Production_ProductCostHistory.StandardCost], 
            T.ModifiedDate AS [Production_ProductCostHistory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductCostHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductInventory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductInventory
        [CodeFirstDatabaseSchema.Production_ProductInventory](T1.[Production_ProductInventory.ProductID], T1.[Production_ProductInventory.LocationID], T1.[Production_ProductInventory.Shelf], T1.[Production_ProductInventory.Bin], T1.[Production_ProductInventory.Quantity], T1.[Production_ProductInventory.rowguid], T1.[Production_ProductInventory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductId AS [Production_ProductInventory.ProductID], 
            T.LocationId AS [Production_ProductInventory.LocationID], 
            T.Shelf AS [Production_ProductInventory.Shelf], 
            T.Bin AS [Production_ProductInventory.Bin], 
            T.Quantity AS [Production_ProductInventory.Quantity], 
            T.Rowguid AS [Production_ProductInventory.rowguid], 
            T.ModifiedDate AS [Production_ProductInventory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductInventories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Location
        [CodeFirstDatabaseSchema.Production_Location](T1.[Production_Location.LocationID], T1.[Production_Location.Name], T1.[Production_Location.CostRate], T1.[Production_Location.Availability], T1.[Production_Location.ModifiedDate])
    FROM (
        SELECT 
            T.LocationId AS [Production_Location.LocationID], 
            T.Name AS [Production_Location.Name], 
            T.CostRate AS [Production_Location.CostRate], 
            T.Availability AS [Production_Location.Availability], 
            T.ModifiedDate AS [Production_Location.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_Locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_WorkOrderRouting.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_WorkOrderRouting
        [CodeFirstDatabaseSchema.Production_WorkOrderRouting](T1.[Production_WorkOrderRouting.WorkOrderID], T1.[Production_WorkOrderRouting.ProductID], T1.[Production_WorkOrderRouting.OperationSequence], T1.[Production_WorkOrderRouting.LocationID], T1.[Production_WorkOrderRouting.ScheduledStartDate], T1.[Production_WorkOrderRouting.ScheduledEndDate], T1.[Production_WorkOrderRouting.ActualStartDate], T1.[Production_WorkOrderRouting.ActualEndDate], T1.[Production_WorkOrderRouting.ActualResourceHrs], T1.[Production_WorkOrderRouting.PlannedCost], T1.[Production_WorkOrderRouting.ActualCost], T1.[Production_WorkOrderRouting.ModifiedDate])
    FROM (
        SELECT 
            T.WorkOrderId AS [Production_WorkOrderRouting.WorkOrderID], 
            T.ProductId AS [Production_WorkOrderRouting.ProductID], 
            T.OperationSequence AS [Production_WorkOrderRouting.OperationSequence], 
            T.LocationId AS [Production_WorkOrderRouting.LocationID], 
            T.ScheduledStartDate AS [Production_WorkOrderRouting.ScheduledStartDate], 
            T.ScheduledEndDate AS [Production_WorkOrderRouting.ScheduledEndDate], 
            T.ActualStartDate AS [Production_WorkOrderRouting.ActualStartDate], 
            T.ActualEndDate AS [Production_WorkOrderRouting.ActualEndDate], 
            T.ActualResourceHrs AS [Production_WorkOrderRouting.ActualResourceHrs], 
            T.PlannedCost AS [Production_WorkOrderRouting.PlannedCost], 
            T.ActualCost AS [Production_WorkOrderRouting.ActualCost], 
            T.ModifiedDate AS [Production_WorkOrderRouting.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_WorkOrderRoutings AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_WorkOrder.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_WorkOrder
        [CodeFirstDatabaseSchema.Production_WorkOrder](T1.[Production_WorkOrder.WorkOrderID], T1.[Production_WorkOrder.ProductID], T1.[Production_WorkOrder.OrderQty], T1.[Production_WorkOrder.StockedQty], T1.[Production_WorkOrder.ScrappedQty], T1.[Production_WorkOrder.StartDate], T1.[Production_WorkOrder.EndDate], T1.[Production_WorkOrder.DueDate], T1.[Production_WorkOrder.ScrapReasonID], T1.[Production_WorkOrder.ModifiedDate])
    FROM (
        SELECT 
            T.WorkOrderId AS [Production_WorkOrder.WorkOrderID], 
            T.ProductId AS [Production_WorkOrder.ProductID], 
            T.OrderQty AS [Production_WorkOrder.OrderQty], 
            T.StockedQty AS [Production_WorkOrder.StockedQty], 
            T.ScrappedQty AS [Production_WorkOrder.ScrappedQty], 
            T.StartDate AS [Production_WorkOrder.StartDate], 
            T.EndDate AS [Production_WorkOrder.EndDate], 
            T.DueDate AS [Production_WorkOrder.DueDate], 
            T.ScrapReasonId AS [Production_WorkOrder.ScrapReasonID], 
            T.ModifiedDate AS [Production_WorkOrder.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_WorkOrders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ScrapReason.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ScrapReason
        [CodeFirstDatabaseSchema.Production_ScrapReason](T1.[Production_ScrapReason.ScrapReasonID], T1.[Production_ScrapReason.Name], T1.[Production_ScrapReason.ModifiedDate])
    FROM (
        SELECT 
            T.ScrapReasonId AS [Production_ScrapReason.ScrapReasonID], 
            T.Name AS [Production_ScrapReason.Name], 
            T.ModifiedDate AS [Production_ScrapReason.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ScrapReasons AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductListPriceHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductListPriceHistory
        [CodeFirstDatabaseSchema.Production_ProductListPriceHistory](T1.[Production_ProductListPriceHistory.ProductID], T1.[Production_ProductListPriceHistory.StartDate], T1.[Production_ProductListPriceHistory.EndDate], T1.[Production_ProductListPriceHistory.ListPrice], T1.[Production_ProductListPriceHistory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductId AS [Production_ProductListPriceHistory.ProductID], 
            T.StartDate AS [Production_ProductListPriceHistory.StartDate], 
            T.EndDate AS [Production_ProductListPriceHistory.EndDate], 
            T.ListPrice AS [Production_ProductListPriceHistory.ListPrice], 
            T.ModifiedDate AS [Production_ProductListPriceHistory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductListPriceHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductModel.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductModel
        [CodeFirstDatabaseSchema.Production_ProductModel](T1.[Production_ProductModel.ProductModelID], T1.[Production_ProductModel.Name], T1.[Production_ProductModel.CatalogDescription], T1.[Production_ProductModel.Instructions], T1.[Production_ProductModel.rowguid], T1.[Production_ProductModel.ModifiedDate])
    FROM (
        SELECT 
            T.ProductModelId AS [Production_ProductModel.ProductModelID], 
            T.Name AS [Production_ProductModel.Name], 
            T.CatalogDescription AS [Production_ProductModel.CatalogDescription], 
            T.Instructions AS [Production_ProductModel.Instructions], 
            T.Rowguid AS [Production_ProductModel.rowguid], 
            T.ModifiedDate AS [Production_ProductModel.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductModels AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductModelIllustration.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductModelIllustration
        [CodeFirstDatabaseSchema.Production_ProductModelIllustration](T1.[Production_ProductModelIllustration.ProductModelID], T1.[Production_ProductModelIllustration.IllustrationID], T1.[Production_ProductModelIllustration.ModifiedDate])
    FROM (
        SELECT 
            T.ProductModelId AS [Production_ProductModelIllustration.ProductModelID], 
            T.IllustrationId AS [Production_ProductModelIllustration.IllustrationID], 
            T.ModifiedDate AS [Production_ProductModelIllustration.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductModelIllustrations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_Illustration.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Illustration
        [CodeFirstDatabaseSchema.Production_Illustration](T1.[Production_Illustration.IllustrationID], T1.[Production_Illustration.Diagram], T1.[Production_Illustration.ModifiedDate])
    FROM (
        SELECT 
            T.IllustrationId AS [Production_Illustration.IllustrationID], 
            T.Diagram AS [Production_Illustration.Diagram], 
            T.ModifiedDate AS [Production_Illustration.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_Illustrations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductModelProductDescriptionCulture.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductModelProductDescriptionCulture
        [CodeFirstDatabaseSchema.Production_ProductModelProductDescriptionCulture](T1.[Production_ProductModelProductDescriptionCulture.ProductModelID], T1.[Production_ProductModelProductDescriptionCulture.ProductDescriptionID], T1.[Production_ProductModelProductDescriptionCulture.CultureID], T1.[Production_ProductModelProductDescriptionCulture.ModifiedDate])
    FROM (
        SELECT 
            T.ProductModelId AS [Production_ProductModelProductDescriptionCulture.ProductModelID], 
            T.ProductDescriptionId AS [Production_ProductModelProductDescriptionCulture.ProductDescriptionID], 
            T.CultureId AS [Production_ProductModelProductDescriptionCulture.CultureID], 
            T.ModifiedDate AS [Production_ProductModelProductDescriptionCulture.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductModelProductDescriptionCultures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_Culture.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Culture
        [CodeFirstDatabaseSchema.Production_Culture](T1.[Production_Culture.CultureID], T1.[Production_Culture.Name], T1.[Production_Culture.ModifiedDate])
    FROM (
        SELECT 
            T.CultureId AS [Production_Culture.CultureID], 
            T.Name AS [Production_Culture.Name], 
            T.ModifiedDate AS [Production_Culture.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_Cultures AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductDescription.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductDescription
        [CodeFirstDatabaseSchema.Production_ProductDescription](T1.[Production_ProductDescription.ProductDescriptionID], T1.[Production_ProductDescription.Description], T1.[Production_ProductDescription.rowguid], T1.[Production_ProductDescription.ModifiedDate])
    FROM (
        SELECT 
            T.ProductDescriptionId AS [Production_ProductDescription.ProductDescriptionID], 
            T.Description AS [Production_ProductDescription.Description], 
            T.Rowguid AS [Production_ProductDescription.rowguid], 
            T.ModifiedDate AS [Production_ProductDescription.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductProductPhoto.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductProductPhoto
        [CodeFirstDatabaseSchema.Production_ProductProductPhoto](T1.[Production_ProductProductPhoto.ProductID], T1.[Production_ProductProductPhoto.ProductPhotoID], T1.[Production_ProductProductPhoto.Primary], T1.[Production_ProductProductPhoto.ModifiedDate])
    FROM (
        SELECT 
            T.ProductId AS [Production_ProductProductPhoto.ProductID], 
            T.ProductPhotoId AS [Production_ProductProductPhoto.ProductPhotoID], 
            T.Primary AS [Production_ProductProductPhoto.Primary], 
            T.ModifiedDate AS [Production_ProductProductPhoto.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductProductPhotoes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductPhoto.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductPhoto
        [CodeFirstDatabaseSchema.Production_ProductPhoto](T1.[Production_ProductPhoto.ProductPhotoID], T1.[Production_ProductPhoto.ThumbNailPhoto], T1.[Production_ProductPhoto.ThumbnailPhotoFileName], T1.[Production_ProductPhoto.LargePhoto], T1.[Production_ProductPhoto.LargePhotoFileName], T1.[Production_ProductPhoto.ModifiedDate])
    FROM (
        SELECT 
            T.ProductPhotoId AS [Production_ProductPhoto.ProductPhotoID], 
            T.ThumbNailPhoto AS [Production_ProductPhoto.ThumbNailPhoto], 
            T.ThumbnailPhotoFileName AS [Production_ProductPhoto.ThumbnailPhotoFileName], 
            T.LargePhoto AS [Production_ProductPhoto.LargePhoto], 
            T.LargePhotoFileName AS [Production_ProductPhoto.LargePhotoFileName], 
            T.ModifiedDate AS [Production_ProductPhoto.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductPhotoes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductReview.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductReview
        [CodeFirstDatabaseSchema.Production_ProductReview](T1.[Production_ProductReview.ProductReviewID], T1.[Production_ProductReview.ProductID], T1.[Production_ProductReview.ReviewerName], T1.[Production_ProductReview.ReviewDate], T1.[Production_ProductReview.EmailAddress], T1.[Production_ProductReview.Rating], T1.[Production_ProductReview.Comments], T1.[Production_ProductReview.ModifiedDate])
    FROM (
        SELECT 
            T.ProductReviewId AS [Production_ProductReview.ProductReviewID], 
            T.ProductId AS [Production_ProductReview.ProductID], 
            T.ReviewerName AS [Production_ProductReview.ReviewerName], 
            T.ReviewDate AS [Production_ProductReview.ReviewDate], 
            T.EmailAddress AS [Production_ProductReview.EmailAddress], 
            T.Rating AS [Production_ProductReview.Rating], 
            T.Comments AS [Production_ProductReview.Comments], 
            T.ModifiedDate AS [Production_ProductReview.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductReviews AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductSubcategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductSubcategory
        [CodeFirstDatabaseSchema.Production_ProductSubcategory](T1.[Production_ProductSubcategory.ProductSubcategoryID], T1.[Production_ProductSubcategory.ProductCategoryID], T1.[Production_ProductSubcategory.Name], T1.[Production_ProductSubcategory.rowguid], T1.[Production_ProductSubcategory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductSubcategoryId AS [Production_ProductSubcategory.ProductSubcategoryID], 
            T.ProductCategoryId AS [Production_ProductSubcategory.ProductCategoryID], 
            T.Name AS [Production_ProductSubcategory.Name], 
            T.Rowguid AS [Production_ProductSubcategory.rowguid], 
            T.ModifiedDate AS [Production_ProductSubcategory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductSubcategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_ProductCategory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductCategory
        [CodeFirstDatabaseSchema.Production_ProductCategory](T1.[Production_ProductCategory.ProductCategoryID], T1.[Production_ProductCategory.Name], T1.[Production_ProductCategory.rowguid], T1.[Production_ProductCategory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductCategoryId AS [Production_ProductCategory.ProductCategoryID], 
            T.Name AS [Production_ProductCategory.Name], 
            T.Rowguid AS [Production_ProductCategory.rowguid], 
            T.ModifiedDate AS [Production_ProductCategory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_ProductCategories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_TransactionHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_TransactionHistory
        [CodeFirstDatabaseSchema.Production_TransactionHistory](T1.[Production_TransactionHistory.TransactionID], T1.[Production_TransactionHistory.ProductID], T1.[Production_TransactionHistory.ReferenceOrderID], T1.[Production_TransactionHistory.ReferenceOrderLineID], T1.[Production_TransactionHistory.TransactionDate], T1.[Production_TransactionHistory.TransactionType], T1.[Production_TransactionHistory.Quantity], T1.[Production_TransactionHistory.ActualCost], T1.[Production_TransactionHistory.ModifiedDate])
    FROM (
        SELECT 
            T.TransactionId AS [Production_TransactionHistory.TransactionID], 
            T.ProductId AS [Production_TransactionHistory.ProductID], 
            T.ReferenceOrderId AS [Production_TransactionHistory.ReferenceOrderID], 
            T.ReferenceOrderLineId AS [Production_TransactionHistory.ReferenceOrderLineID], 
            T.TransactionDate AS [Production_TransactionHistory.TransactionDate], 
            T.TransactionType AS [Production_TransactionHistory.TransactionType], 
            T.Quantity AS [Production_TransactionHistory.Quantity], 
            T.ActualCost AS [Production_TransactionHistory.ActualCost], 
            T.ModifiedDate AS [Production_TransactionHistory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_TransactionHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_ShoppingCartItem.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_ShoppingCartItem
        [CodeFirstDatabaseSchema.Sales_ShoppingCartItem](T1.[Sales_ShoppingCartItem.ShoppingCartItemID], T1.[Sales_ShoppingCartItem.ShoppingCartID], T1.[Sales_ShoppingCartItem.Quantity], T1.[Sales_ShoppingCartItem.ProductID], T1.[Sales_ShoppingCartItem.DateCreated], T1.[Sales_ShoppingCartItem.ModifiedDate])
    FROM (
        SELECT 
            T.ShoppingCartItemId AS [Sales_ShoppingCartItem.ShoppingCartItemID], 
            T.ShoppingCartId AS [Sales_ShoppingCartItem.ShoppingCartID], 
            T.Quantity AS [Sales_ShoppingCartItem.Quantity], 
            T.ProductId AS [Sales_ShoppingCartItem.ProductID], 
            T.DateCreated AS [Sales_ShoppingCartItem.DateCreated], 
            T.ModifiedDate AS [Sales_ShoppingCartItem.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_ShoppingCartItems AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SpecialOfferProduct.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SpecialOfferProduct
        [CodeFirstDatabaseSchema.Sales_SpecialOfferProduct](T1.[Sales_SpecialOfferProduct.SpecialOfferID], T1.[Sales_SpecialOfferProduct.ProductID], T1.[Sales_SpecialOfferProduct.rowguid], T1.[Sales_SpecialOfferProduct.ModifiedDate])
    FROM (
        SELECT 
            T.SpecialOfferId AS [Sales_SpecialOfferProduct.SpecialOfferID], 
            T.ProductId AS [Sales_SpecialOfferProduct.ProductID], 
            T.Rowguid AS [Sales_SpecialOfferProduct.rowguid], 
            T.ModifiedDate AS [Sales_SpecialOfferProduct.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SpecialOfferProducts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesOrderDetail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesOrderDetail
        [CodeFirstDatabaseSchema.Sales_SalesOrderDetail](T1.[Sales_SalesOrderDetail.SalesOrderID], T1.[Sales_SalesOrderDetail.SalesOrderDetailID], T1.[Sales_SalesOrderDetail.CarrierTrackingNumber], T1.[Sales_SalesOrderDetail.OrderQty], T1.[Sales_SalesOrderDetail.ProductID], T1.[Sales_SalesOrderDetail.SpecialOfferID], T1.[Sales_SalesOrderDetail.UnitPrice], T1.[Sales_SalesOrderDetail.UnitPriceDiscount], T1.[Sales_SalesOrderDetail.LineTotal], T1.[Sales_SalesOrderDetail.rowguid], T1.[Sales_SalesOrderDetail.ModifiedDate])
    FROM (
        SELECT 
            T.SalesOrderId AS [Sales_SalesOrderDetail.SalesOrderID], 
            T.SalesOrderDetailId AS [Sales_SalesOrderDetail.SalesOrderDetailID], 
            T.CarrierTrackingNumber AS [Sales_SalesOrderDetail.CarrierTrackingNumber], 
            T.OrderQty AS [Sales_SalesOrderDetail.OrderQty], 
            T.ProductId AS [Sales_SalesOrderDetail.ProductID], 
            T.SpecialOfferId AS [Sales_SalesOrderDetail.SpecialOfferID], 
            T.UnitPrice AS [Sales_SalesOrderDetail.UnitPrice], 
            T.UnitPriceDiscount AS [Sales_SalesOrderDetail.UnitPriceDiscount], 
            T.LineTotal AS [Sales_SalesOrderDetail.LineTotal], 
            T.Rowguid AS [Sales_SalesOrderDetail.rowguid], 
            T.ModifiedDate AS [Sales_SalesOrderDetail.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesOrderDetails AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SpecialOffer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SpecialOffer
        [CodeFirstDatabaseSchema.Sales_SpecialOffer](T1.[Sales_SpecialOffer.SpecialOfferID], T1.[Sales_SpecialOffer.Description], T1.[Sales_SpecialOffer.DiscountPct], T1.[Sales_SpecialOffer.Type], T1.[Sales_SpecialOffer.Category], T1.[Sales_SpecialOffer.StartDate], T1.[Sales_SpecialOffer.EndDate], T1.[Sales_SpecialOffer.MinQty], T1.[Sales_SpecialOffer.MaxQty], T1.[Sales_SpecialOffer.rowguid], T1.[Sales_SpecialOffer.ModifiedDate])
    FROM (
        SELECT 
            T.SpecialOfferId AS [Sales_SpecialOffer.SpecialOfferID], 
            T.Description AS [Sales_SpecialOffer.Description], 
            T.DiscountPct AS [Sales_SpecialOffer.DiscountPct], 
            T.Type AS [Sales_SpecialOffer.Type], 
            T.Category AS [Sales_SpecialOffer.Category], 
            T.StartDate AS [Sales_SpecialOffer.StartDate], 
            T.EndDate AS [Sales_SpecialOffer.EndDate], 
            T.MinQty AS [Sales_SpecialOffer.MinQty], 
            T.MaxQty AS [Sales_SpecialOffer.MaxQty], 
            T.Rowguid AS [Sales_SpecialOffer.rowguid], 
            T.ModifiedDate AS [Sales_SpecialOffer.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SpecialOffers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_CreditCard.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_CreditCard
        [CodeFirstDatabaseSchema.Sales_CreditCard](T1.[Sales_CreditCard.CreditCardID], T1.[Sales_CreditCard.CardType], T1.[Sales_CreditCard.CardNumber], T1.[Sales_CreditCard.ExpMonth], T1.[Sales_CreditCard.ExpYear], T1.[Sales_CreditCard.ModifiedDate])
    FROM (
        SELECT 
            T.CreditCardId AS [Sales_CreditCard.CreditCardID], 
            T.CardType AS [Sales_CreditCard.CardType], 
            T.CardNumber AS [Sales_CreditCard.CardNumber], 
            T.ExpMonth AS [Sales_CreditCard.ExpMonth], 
            T.ExpYear AS [Sales_CreditCard.ExpYear], 
            T.ModifiedDate AS [Sales_CreditCard.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_CreditCards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_PersonCreditCard.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView48()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_PersonCreditCard
        [CodeFirstDatabaseSchema.Sales_PersonCreditCard](T1.[Sales_PersonCreditCard.BusinessEntityID], T1.[Sales_PersonCreditCard.CreditCardID], T1.[Sales_PersonCreditCard.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_PersonCreditCard.BusinessEntityID], 
            T.CreditCardId AS [Sales_PersonCreditCard.CreditCardID], 
            T.ModifiedDate AS [Sales_PersonCreditCard.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_PersonCreditCards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_CurrencyRate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView49()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_CurrencyRate
        [CodeFirstDatabaseSchema.Sales_CurrencyRate](T1.[Sales_CurrencyRate.CurrencyRateID], T1.[Sales_CurrencyRate.CurrencyRateDate], T1.[Sales_CurrencyRate.FromCurrencyCode], T1.[Sales_CurrencyRate.ToCurrencyCode], T1.[Sales_CurrencyRate.AverageRate], T1.[Sales_CurrencyRate.EndOfDayRate], T1.[Sales_CurrencyRate.ModifiedDate])
    FROM (
        SELECT 
            T.CurrencyRateId AS [Sales_CurrencyRate.CurrencyRateID], 
            T.CurrencyRateDate AS [Sales_CurrencyRate.CurrencyRateDate], 
            T.FromCurrencyCode AS [Sales_CurrencyRate.FromCurrencyCode], 
            T.ToCurrencyCode AS [Sales_CurrencyRate.ToCurrencyCode], 
            T.AverageRate AS [Sales_CurrencyRate.AverageRate], 
            T.EndOfDayRate AS [Sales_CurrencyRate.EndOfDayRate], 
            T.ModifiedDate AS [Sales_CurrencyRate.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_CurrencyRates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_Currency.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView50()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_Currency
        [CodeFirstDatabaseSchema.Sales_Currency](T1.[Sales_Currency.CurrencyCode], T1.[Sales_Currency.Name], T1.[Sales_Currency.ModifiedDate])
    FROM (
        SELECT 
            T.CurrencyCode AS [Sales_Currency.CurrencyCode], 
            T.Name AS [Sales_Currency.Name], 
            T.ModifiedDate AS [Sales_Currency.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_Currencies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_CountryRegionCurrency.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView51()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_CountryRegionCurrency
        [CodeFirstDatabaseSchema.Sales_CountryRegionCurrency](T1.[Sales_CountryRegionCurrency.CountryRegionCode], T1.[Sales_CountryRegionCurrency.CurrencyCode], T1.[Sales_CountryRegionCurrency.ModifiedDate])
    FROM (
        SELECT 
            T.CountryRegionCode AS [Sales_CountryRegionCurrency.CountryRegionCode], 
            T.CurrencyCode AS [Sales_CountryRegionCurrency.CurrencyCode], 
            T.ModifiedDate AS [Sales_CountryRegionCurrency.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_CountryRegionCurrencies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_CountryRegion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView52()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_CountryRegion
        [CodeFirstDatabaseSchema.Person_CountryRegion](T1.[Person_CountryRegion.CountryRegionCode], T1.[Person_CountryRegion.Name], T1.[Person_CountryRegion.ModifiedDate])
    FROM (
        SELECT 
            T.CountryRegionCode AS [Person_CountryRegion.CountryRegionCode], 
            T.Name AS [Person_CountryRegion.Name], 
            T.ModifiedDate AS [Person_CountryRegion.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_CountryRegions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_StateProvince.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView53()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_StateProvince
        [CodeFirstDatabaseSchema.Person_StateProvince](T1.[Person_StateProvince.StateProvinceID], T1.[Person_StateProvince.StateProvinceCode], T1.[Person_StateProvince.CountryRegionCode], T1.[Person_StateProvince.IsOnlyStateProvinceFlag], T1.[Person_StateProvince.Name], T1.[Person_StateProvince.TerritoryID], T1.[Person_StateProvince.rowguid], T1.[Person_StateProvince.ModifiedDate])
    FROM (
        SELECT 
            T.StateProvinceId AS [Person_StateProvince.StateProvinceID], 
            T.StateProvinceCode AS [Person_StateProvince.StateProvinceCode], 
            T.CountryRegionCode AS [Person_StateProvince.CountryRegionCode], 
            T.IsOnlyStateProvinceFlag AS [Person_StateProvince.IsOnlyStateProvinceFlag], 
            T.Name AS [Person_StateProvince.Name], 
            T.TerritoryId AS [Person_StateProvince.TerritoryID], 
            T.Rowguid AS [Person_StateProvince.rowguid], 
            T.ModifiedDate AS [Person_StateProvince.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_StateProvinces AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesTaxRate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView54()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesTaxRate
        [CodeFirstDatabaseSchema.Sales_SalesTaxRate](T1.[Sales_SalesTaxRate.SalesTaxRateID], T1.[Sales_SalesTaxRate.StateProvinceID], T1.[Sales_SalesTaxRate.TaxType], T1.[Sales_SalesTaxRate.TaxRate], T1.[Sales_SalesTaxRate.Name], T1.[Sales_SalesTaxRate.rowguid], T1.[Sales_SalesTaxRate.ModifiedDate])
    FROM (
        SELECT 
            T.SalesTaxRateId AS [Sales_SalesTaxRate.SalesTaxRateID], 
            T.StateProvinceId AS [Sales_SalesTaxRate.StateProvinceID], 
            T.TaxType AS [Sales_SalesTaxRate.TaxType], 
            T.TaxRate AS [Sales_SalesTaxRate.TaxRate], 
            T.Name AS [Sales_SalesTaxRate.Name], 
            T.Rowguid AS [Sales_SalesTaxRate.rowguid], 
            T.ModifiedDate AS [Sales_SalesTaxRate.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesTaxRates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesTerritory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView55()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesTerritory
        [CodeFirstDatabaseSchema.Sales_SalesTerritory](T1.[Sales_SalesTerritory.TerritoryID], T1.[Sales_SalesTerritory.Name], T1.[Sales_SalesTerritory.CountryRegionCode], T1.[Sales_SalesTerritory.Group], T1.[Sales_SalesTerritory.SalesYTD], T1.[Sales_SalesTerritory.SalesLastYear], T1.[Sales_SalesTerritory.CostYTD], T1.[Sales_SalesTerritory.CostLastYear], T1.[Sales_SalesTerritory.rowguid], T1.[Sales_SalesTerritory.ModifiedDate])
    FROM (
        SELECT 
            T.TerritoryId AS [Sales_SalesTerritory.TerritoryID], 
            T.Name AS [Sales_SalesTerritory.Name], 
            T.CountryRegionCode AS [Sales_SalesTerritory.CountryRegionCode], 
            T.[Group] AS [Sales_SalesTerritory.Group], 
            T.SalesYtd AS [Sales_SalesTerritory.SalesYTD], 
            T.SalesLastYear AS [Sales_SalesTerritory.SalesLastYear], 
            T.CostYtd AS [Sales_SalesTerritory.CostYTD], 
            T.CostLastYear AS [Sales_SalesTerritory.CostLastYear], 
            T.Rowguid AS [Sales_SalesTerritory.rowguid], 
            T.ModifiedDate AS [Sales_SalesTerritory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesTerritories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_Customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView56()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_Customer
        [CodeFirstDatabaseSchema.Sales_Customer](T1.[Sales_Customer.CustomerID], T1.[Sales_Customer.PersonID], T1.[Sales_Customer.StoreID], T1.[Sales_Customer.TerritoryID], T1.[Sales_Customer.AccountNumber], T1.[Sales_Customer.rowguid], T1.[Sales_Customer.ModifiedDate])
    FROM (
        SELECT 
            T.CustomerId AS [Sales_Customer.CustomerID], 
            T.PersonId AS [Sales_Customer.PersonID], 
            T.StoreId AS [Sales_Customer.StoreID], 
            T.TerritoryId AS [Sales_Customer.TerritoryID], 
            T.AccountNumber AS [Sales_Customer.AccountNumber], 
            T.Rowguid AS [Sales_Customer.rowguid], 
            T.ModifiedDate AS [Sales_Customer.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_Store.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView57()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_Store
        [CodeFirstDatabaseSchema.Sales_Store](T1.[Sales_Store.BusinessEntityID], T1.[Sales_Store.Name], T1.[Sales_Store.SalesPersonID], T1.[Sales_Store.Demographics], T1.[Sales_Store.rowguid], T1.[Sales_Store.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_Store.BusinessEntityID], 
            T.Name AS [Sales_Store.Name], 
            T.SalesPersonId AS [Sales_Store.SalesPersonID], 
            T.Demographics AS [Sales_Store.Demographics], 
            T.Rowguid AS [Sales_Store.rowguid], 
            T.ModifiedDate AS [Sales_Store.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_Stores AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesPerson.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView58()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesPerson
        [CodeFirstDatabaseSchema.Sales_SalesPerson](T1.[Sales_SalesPerson.BusinessEntityID], T1.[Sales_SalesPerson.TerritoryID], T1.[Sales_SalesPerson.SalesQuota], T1.[Sales_SalesPerson.Bonus], T1.[Sales_SalesPerson.CommissionPct], T1.[Sales_SalesPerson.SalesYTD], T1.[Sales_SalesPerson.SalesLastYear], T1.[Sales_SalesPerson.rowguid], T1.[Sales_SalesPerson.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_SalesPerson.BusinessEntityID], 
            T.TerritoryId AS [Sales_SalesPerson.TerritoryID], 
            T.SalesQuota AS [Sales_SalesPerson.SalesQuota], 
            T.Bonus AS [Sales_SalesPerson.Bonus], 
            T.CommissionPct AS [Sales_SalesPerson.CommissionPct], 
            T.SalesYtd AS [Sales_SalesPerson.SalesYTD], 
            T.SalesLastYear AS [Sales_SalesPerson.SalesLastYear], 
            T.Rowguid AS [Sales_SalesPerson.rowguid], 
            T.ModifiedDate AS [Sales_SalesPerson.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesPersons AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesPersonQuotaHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView59()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesPersonQuotaHistory
        [CodeFirstDatabaseSchema.Sales_SalesPersonQuotaHistory](T1.[Sales_SalesPersonQuotaHistory.BusinessEntityID], T1.[Sales_SalesPersonQuotaHistory.QuotaDate], T1.[Sales_SalesPersonQuotaHistory.SalesQuota], T1.[Sales_SalesPersonQuotaHistory.rowguid], T1.[Sales_SalesPersonQuotaHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_SalesPersonQuotaHistory.BusinessEntityID], 
            T.QuotaDate AS [Sales_SalesPersonQuotaHistory.QuotaDate], 
            T.SalesQuota AS [Sales_SalesPersonQuotaHistory.SalesQuota], 
            T.Rowguid AS [Sales_SalesPersonQuotaHistory.rowguid], 
            T.ModifiedDate AS [Sales_SalesPersonQuotaHistory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesPersonQuotaHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesTerritoryHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView60()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesTerritoryHistory
        [CodeFirstDatabaseSchema.Sales_SalesTerritoryHistory](T1.[Sales_SalesTerritoryHistory.BusinessEntityID], T1.[Sales_SalesTerritoryHistory.StartDate], T1.[Sales_SalesTerritoryHistory.TerritoryID], T1.[Sales_SalesTerritoryHistory.EndDate], T1.[Sales_SalesTerritoryHistory.rowguid], T1.[Sales_SalesTerritoryHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_SalesTerritoryHistory.BusinessEntityID], 
            T.StartDate AS [Sales_SalesTerritoryHistory.StartDate], 
            T.TerritoryId AS [Sales_SalesTerritoryHistory.TerritoryID], 
            T.EndDate AS [Sales_SalesTerritoryHistory.EndDate], 
            T.Rowguid AS [Sales_SalesTerritoryHistory.rowguid], 
            T.ModifiedDate AS [Sales_SalesTerritoryHistory.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesTerritoryHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesOrderHeaderSalesReason.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView61()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesOrderHeaderSalesReason
        [CodeFirstDatabaseSchema.Sales_SalesOrderHeaderSalesReason](T1.[Sales_SalesOrderHeaderSalesReason.SalesOrderID], T1.[Sales_SalesOrderHeaderSalesReason.SalesReasonID], T1.[Sales_SalesOrderHeaderSalesReason.ModifiedDate])
    FROM (
        SELECT 
            T.SalesOrderId AS [Sales_SalesOrderHeaderSalesReason.SalesOrderID], 
            T.SalesReasonId AS [Sales_SalesOrderHeaderSalesReason.SalesReasonID], 
            T.ModifiedDate AS [Sales_SalesOrderHeaderSalesReason.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesOrderHeaderSalesReasons AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_SalesReason.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView62()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesReason
        [CodeFirstDatabaseSchema.Sales_SalesReason](T1.[Sales_SalesReason.SalesReasonID], T1.[Sales_SalesReason.Name], T1.[Sales_SalesReason.ReasonType], T1.[Sales_SalesReason.ModifiedDate])
    FROM (
        SELECT 
            T.SalesReasonId AS [Sales_SalesReason.SalesReasonID], 
            T.Name AS [Sales_SalesReason.Name], 
            T.ReasonType AS [Sales_SalesReason.ReasonType], 
            T.ModifiedDate AS [Sales_SalesReason.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_SalesReasons AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_AddressType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView63()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_AddressType
        [CodeFirstDatabaseSchema.Person_AddressType](T1.[Person_AddressType.AddressTypeID], T1.[Person_AddressType.Name], T1.[Person_AddressType.rowguid], T1.[Person_AddressType.ModifiedDate])
    FROM (
        SELECT 
            T.AddressTypeId AS [Person_AddressType.AddressTypeID], 
            T.Name AS [Person_AddressType.Name], 
            T.Rowguid AS [Person_AddressType.rowguid], 
            T.ModifiedDate AS [Person_AddressType.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_AddressTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_BusinessEntityContact.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView64()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_BusinessEntityContact
        [CodeFirstDatabaseSchema.Person_BusinessEntityContact](T1.[Person_BusinessEntityContact.BusinessEntityID], T1.[Person_BusinessEntityContact.PersonID], T1.[Person_BusinessEntityContact.ContactTypeID], T1.[Person_BusinessEntityContact.rowguid], T1.[Person_BusinessEntityContact.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_BusinessEntityContact.BusinessEntityID], 
            T.PersonId AS [Person_BusinessEntityContact.PersonID], 
            T.ContactTypeId AS [Person_BusinessEntityContact.ContactTypeID], 
            T.Rowguid AS [Person_BusinessEntityContact.rowguid], 
            T.ModifiedDate AS [Person_BusinessEntityContact.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_BusinessEntityContacts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_ContactType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView65()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_ContactType
        [CodeFirstDatabaseSchema.Person_ContactType](T1.[Person_ContactType.ContactTypeID], T1.[Person_ContactType.Name], T1.[Person_ContactType.ModifiedDate])
    FROM (
        SELECT 
            T.ContactTypeId AS [Person_ContactType.ContactTypeID], 
            T.Name AS [Person_ContactType.Name], 
            T.ModifiedDate AS [Person_ContactType.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_ContactTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_EmailAddress.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView66()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_EmailAddress
        [CodeFirstDatabaseSchema.Person_EmailAddress](T1.[Person_EmailAddress.BusinessEntityID], T1.[Person_EmailAddress.EmailAddressID], T1.[Person_EmailAddress.EmailAddress], T1.[Person_EmailAddress.rowguid], T1.[Person_EmailAddress.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_EmailAddress.BusinessEntityID], 
            T.EmailAddressId AS [Person_EmailAddress.EmailAddressID], 
            T.EmailAddress AS [Person_EmailAddress.EmailAddress], 
            T.Rowguid AS [Person_EmailAddress.rowguid], 
            T.ModifiedDate AS [Person_EmailAddress.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_EmailAddresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_Password.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView67()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_Password
        [CodeFirstDatabaseSchema.Person_Password](T1.[Person_Password.BusinessEntityID], T1.[Person_Password.PasswordHash], T1.[Person_Password.PasswordSalt], T1.[Person_Password.rowguid], T1.[Person_Password.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_Password.BusinessEntityID], 
            T.PasswordHash AS [Person_Password.PasswordHash], 
            T.PasswordSalt AS [Person_Password.PasswordSalt], 
            T.Rowguid AS [Person_Password.rowguid], 
            T.ModifiedDate AS [Person_Password.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_Passwords AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_PersonPhone.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView68()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_PersonPhone
        [CodeFirstDatabaseSchema.Person_PersonPhone](T1.[Person_PersonPhone.BusinessEntityID], T1.[Person_PersonPhone.PhoneNumber], T1.[Person_PersonPhone.PhoneNumberTypeID], T1.[Person_PersonPhone.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_PersonPhone.BusinessEntityID], 
            T.PhoneNumber AS [Person_PersonPhone.PhoneNumber], 
            T.PhoneNumberTypeId AS [Person_PersonPhone.PhoneNumberTypeID], 
            T.ModifiedDate AS [Person_PersonPhone.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_PersonPhones AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_PhoneNumberType.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView69()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_PhoneNumberType
        [CodeFirstDatabaseSchema.Person_PhoneNumberType](T1.[Person_PhoneNumberType.PhoneNumberTypeID], T1.[Person_PhoneNumberType.Name], T1.[Person_PhoneNumberType.ModifiedDate])
    FROM (
        SELECT 
            T.PhoneNumberTypeId AS [Person_PhoneNumberType.PhoneNumberTypeID], 
            T.Name AS [Person_PhoneNumberType.Name], 
            T.ModifiedDate AS [Person_PhoneNumberType.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_PhoneNumberTypes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_Shift.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView70()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_Shift
        [CodeFirstDatabaseSchema.HumanResources_Shift](T1.[HumanResources_Shift.ShiftID], T1.[HumanResources_Shift.Name], T1.[HumanResources_Shift.StartTime], T1.[HumanResources_Shift.EndTime], T1.[HumanResources_Shift.ModifiedDate])
    FROM (
        SELECT 
            T.ShiftId AS [HumanResources_Shift.ShiftID], 
            T.Name AS [HumanResources_Shift.Name], 
            T.StartTime AS [HumanResources_Shift.StartTime], 
            T.EndTime AS [HumanResources_Shift.EndTime], 
            T.ModifiedDate AS [HumanResources_Shift.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_Shifts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_Departments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView71()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_Departments
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_Department](T1.[HumanResources_Department.DepartmentId], T1.[HumanResources_Department.Name], T1.[HumanResources_Department.GroupName], T1.[HumanResources_Department.ModifiedDate])
    FROM (
        SELECT 
            T.DepartmentID AS [HumanResources_Department.DepartmentId], 
            T.Name AS [HumanResources_Department.Name], 
            T.GroupName AS [HumanResources_Department.GroupName], 
            T.ModifiedDate AS [HumanResources_Department.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_Department AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_EmployeeDepartmentHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView72()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_EmployeeDepartmentHistories
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_EmployeeDepartmentHistory](T1.[HumanResources_EmployeeDepartmentHistory.BusinessEntityId], T1.[HumanResources_EmployeeDepartmentHistory.StartDate], T1.[HumanResources_EmployeeDepartmentHistory.DepartmentId], T1.[HumanResources_EmployeeDepartmentHistory.ShiftId], T1.[HumanResources_EmployeeDepartmentHistory.EndDate], T1.[HumanResources_EmployeeDepartmentHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [HumanResources_EmployeeDepartmentHistory.BusinessEntityId], 
            T.StartDate AS [HumanResources_EmployeeDepartmentHistory.StartDate], 
            T.DepartmentID AS [HumanResources_EmployeeDepartmentHistory.DepartmentId], 
            T.ShiftID AS [HumanResources_EmployeeDepartmentHistory.ShiftId], 
            T.EndDate AS [HumanResources_EmployeeDepartmentHistory.EndDate], 
            T.ModifiedDate AS [HumanResources_EmployeeDepartmentHistory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_EmployeeDepartmentHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_Employees.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView73()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_Employees
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_Employee](T1.[HumanResources_Employee.BusinessEntityId], T1.[HumanResources_Employee.NationalIdNumber], T1.[HumanResources_Employee.LoginId], T1.[HumanResources_Employee.OrganizationLevel], T1.[HumanResources_Employee.JobTitle], T1.[HumanResources_Employee.BirthDate], T1.[HumanResources_Employee.MaritalStatus], T1.[HumanResources_Employee.Gender], T1.[HumanResources_Employee.HireDate], T1.[HumanResources_Employee.SalariedFlag], T1.[HumanResources_Employee.VacationHours], T1.[HumanResources_Employee.SickLeaveHours], T1.[HumanResources_Employee.CurrentFlag], T1.[HumanResources_Employee.Rowguid], T1.[HumanResources_Employee.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [HumanResources_Employee.BusinessEntityId], 
            T.NationalIDNumber AS [HumanResources_Employee.NationalIdNumber], 
            T.LoginID AS [HumanResources_Employee.LoginId], 
            T.OrganizationLevel AS [HumanResources_Employee.OrganizationLevel], 
            T.JobTitle AS [HumanResources_Employee.JobTitle], 
            T.BirthDate AS [HumanResources_Employee.BirthDate], 
            T.MaritalStatus AS [HumanResources_Employee.MaritalStatus], 
            T.Gender AS [HumanResources_Employee.Gender], 
            T.HireDate AS [HumanResources_Employee.HireDate], 
            T.SalariedFlag AS [HumanResources_Employee.SalariedFlag], 
            T.VacationHours AS [HumanResources_Employee.VacationHours], 
            T.SickLeaveHours AS [HumanResources_Employee.SickLeaveHours], 
            T.CurrentFlag AS [HumanResources_Employee.CurrentFlag], 
            T.rowguid AS [HumanResources_Employee.Rowguid], 
            T.ModifiedDate AS [HumanResources_Employee.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_Employee AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_EmployeePayHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView74()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_EmployeePayHistories
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_EmployeePayHistory](T1.[HumanResources_EmployeePayHistory.BusinessEntityId], T1.[HumanResources_EmployeePayHistory.RateChangeDate], T1.[HumanResources_EmployeePayHistory.Rate], T1.[HumanResources_EmployeePayHistory.PayFrequency], T1.[HumanResources_EmployeePayHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [HumanResources_EmployeePayHistory.BusinessEntityId], 
            T.RateChangeDate AS [HumanResources_EmployeePayHistory.RateChangeDate], 
            T.Rate AS [HumanResources_EmployeePayHistory.Rate], 
            T.PayFrequency AS [HumanResources_EmployeePayHistory.PayFrequency], 
            T.ModifiedDate AS [HumanResources_EmployeePayHistory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_EmployeePayHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_JobCandidates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView75()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_JobCandidates
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_JobCandidate](T1.[HumanResources_JobCandidate.JobCandidateId], T1.[HumanResources_JobCandidate.BusinessEntityId], T1.[HumanResources_JobCandidate.Resume], T1.[HumanResources_JobCandidate.ModifiedDate])
    FROM (
        SELECT 
            T.JobCandidateID AS [HumanResources_JobCandidate.JobCandidateId], 
            T.BusinessEntityID AS [HumanResources_JobCandidate.BusinessEntityId], 
            T.Resume AS [HumanResources_JobCandidate.Resume], 
            T.ModifiedDate AS [HumanResources_JobCandidate.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_JobCandidate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_People.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView76()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_People
        [Tutorial.LinqToEntities.FullWithViews.Person_Person](T1.[Person_Person.BusinessEntityId], T1.[Person_Person.PersonType], T1.[Person_Person.NameStyle], T1.[Person_Person.Title], T1.[Person_Person.FirstName], T1.[Person_Person.MiddleName], T1.[Person_Person.LastName], T1.[Person_Person.Suffix], T1.[Person_Person.EmailPromotion], T1.[Person_Person.AdditionalContactInfo], T1.[Person_Person.Demographics], T1.[Person_Person.Rowguid], T1.[Person_Person.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_Person.BusinessEntityId], 
            T.PersonType AS [Person_Person.PersonType], 
            T.NameStyle AS [Person_Person.NameStyle], 
            T.Title AS [Person_Person.Title], 
            T.FirstName AS [Person_Person.FirstName], 
            T.MiddleName AS [Person_Person.MiddleName], 
            T.LastName AS [Person_Person.LastName], 
            T.Suffix AS [Person_Person.Suffix], 
            T.EmailPromotion AS [Person_Person.EmailPromotion], 
            T.AdditionalContactInfo AS [Person_Person.AdditionalContactInfo], 
            T.Demographics AS [Person_Person.Demographics], 
            T.rowguid AS [Person_Person.Rowguid], 
            T.ModifiedDate AS [Person_Person.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_Person AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_BusinessEntities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView77()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_BusinessEntities
        [Tutorial.LinqToEntities.FullWithViews.Person_BusinessEntity](T1.[Person_BusinessEntity.BusinessEntityId], T1.[Person_BusinessEntity.Rowguid], T1.[Person_BusinessEntity.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_BusinessEntity.BusinessEntityId], 
            T.rowguid AS [Person_BusinessEntity.Rowguid], 
            T.ModifiedDate AS [Person_BusinessEntity.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_BusinessEntity AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_BusinessEntityAddresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView78()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_BusinessEntityAddresses
        [Tutorial.LinqToEntities.FullWithViews.Person_BusinessEntityAddress](T1.[Person_BusinessEntityAddress.BusinessEntityId], T1.[Person_BusinessEntityAddress.AddressId], T1.[Person_BusinessEntityAddress.AddressTypeId], T1.[Person_BusinessEntityAddress.Rowguid], T1.[Person_BusinessEntityAddress.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_BusinessEntityAddress.BusinessEntityId], 
            T.AddressID AS [Person_BusinessEntityAddress.AddressId], 
            T.AddressTypeID AS [Person_BusinessEntityAddress.AddressTypeId], 
            T.rowguid AS [Person_BusinessEntityAddress.Rowguid], 
            T.ModifiedDate AS [Person_BusinessEntityAddress.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_BusinessEntityAddress AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_Addresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView79()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_Addresses
        [Tutorial.LinqToEntities.FullWithViews.Person_Address](T1.[Person_Address.AddressId], T1.[Person_Address.AddressLine1], T1.[Person_Address.AddressLine2], T1.[Person_Address.City], T1.[Person_Address.StateProvinceId], T1.[Person_Address.PostalCode], T1.[Person_Address.SpatialLocation], T1.[Person_Address.Rowguid], T1.[Person_Address.ModifiedDate])
    FROM (
        SELECT 
            T.AddressID AS [Person_Address.AddressId], 
            T.AddressLine1 AS [Person_Address.AddressLine1], 
            T.AddressLine2 AS [Person_Address.AddressLine2], 
            T.City AS [Person_Address.City], 
            T.StateProvinceID AS [Person_Address.StateProvinceId], 
            T.PostalCode AS [Person_Address.PostalCode], 
            T.SpatialLocation AS [Person_Address.SpatialLocation], 
            T.rowguid AS [Person_Address.Rowguid], 
            T.ModifiedDate AS [Person_Address.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_Address AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesOrderHeaders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView80()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesOrderHeaders
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesOrderHeader](T1.[Sales_SalesOrderHeader.SalesOrderId], T1.[Sales_SalesOrderHeader.RevisionNumber], T1.[Sales_SalesOrderHeader.OrderDate], T1.[Sales_SalesOrderHeader.DueDate], T1.[Sales_SalesOrderHeader.ShipDate], T1.[Sales_SalesOrderHeader.Status], T1.[Sales_SalesOrderHeader.OnlineOrderFlag], T1.[Sales_SalesOrderHeader.SalesOrderNumber], T1.[Sales_SalesOrderHeader.PurchaseOrderNumber], T1.[Sales_SalesOrderHeader.AccountNumber], T1.[Sales_SalesOrderHeader.CustomerId], T1.[Sales_SalesOrderHeader.SalesPersonId], T1.[Sales_SalesOrderHeader.TerritoryId], T1.[Sales_SalesOrderHeader.BillToAddressId], T1.[Sales_SalesOrderHeader.ShipToAddressId], T1.[Sales_SalesOrderHeader.ShipMethodId], T1.[Sales_SalesOrderHeader.CreditCardId], T1.[Sales_SalesOrderHeader.CreditCardApprovalCode], T1.[Sales_SalesOrderHeader.CurrencyRateId], T1.[Sales_SalesOrderHeader.SubTotal], T1.[Sales_SalesOrderHeader.TaxAmt], T1.[Sales_SalesOrderHeader.Freight], T1.[Sales_SalesOrderHeader.TotalDue], T1.[Sales_SalesOrderHeader.Comment], T1.[Sales_SalesOrderHeader.Rowguid], T1.[Sales_SalesOrderHeader.ModifiedDate])
    FROM (
        SELECT 
            T.SalesOrderID AS [Sales_SalesOrderHeader.SalesOrderId], 
            T.RevisionNumber AS [Sales_SalesOrderHeader.RevisionNumber], 
            T.OrderDate AS [Sales_SalesOrderHeader.OrderDate], 
            T.DueDate AS [Sales_SalesOrderHeader.DueDate], 
            T.ShipDate AS [Sales_SalesOrderHeader.ShipDate], 
            T.Status AS [Sales_SalesOrderHeader.Status], 
            T.OnlineOrderFlag AS [Sales_SalesOrderHeader.OnlineOrderFlag], 
            T.SalesOrderNumber AS [Sales_SalesOrderHeader.SalesOrderNumber], 
            T.PurchaseOrderNumber AS [Sales_SalesOrderHeader.PurchaseOrderNumber], 
            T.AccountNumber AS [Sales_SalesOrderHeader.AccountNumber], 
            T.CustomerID AS [Sales_SalesOrderHeader.CustomerId], 
            T.SalesPersonID AS [Sales_SalesOrderHeader.SalesPersonId], 
            T.TerritoryID AS [Sales_SalesOrderHeader.TerritoryId], 
            T.BillToAddressID AS [Sales_SalesOrderHeader.BillToAddressId], 
            T.ShipToAddressID AS [Sales_SalesOrderHeader.ShipToAddressId], 
            T.ShipMethodID AS [Sales_SalesOrderHeader.ShipMethodId], 
            T.CreditCardID AS [Sales_SalesOrderHeader.CreditCardId], 
            T.CreditCardApprovalCode AS [Sales_SalesOrderHeader.CreditCardApprovalCode], 
            T.CurrencyRateID AS [Sales_SalesOrderHeader.CurrencyRateId], 
            T.SubTotal AS [Sales_SalesOrderHeader.SubTotal], 
            T.TaxAmt AS [Sales_SalesOrderHeader.TaxAmt], 
            T.Freight AS [Sales_SalesOrderHeader.Freight], 
            T.TotalDue AS [Sales_SalesOrderHeader.TotalDue], 
            T.Comment AS [Sales_SalesOrderHeader.Comment], 
            T.rowguid AS [Sales_SalesOrderHeader.Rowguid], 
            T.ModifiedDate AS [Sales_SalesOrderHeader.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesOrderHeader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Purchasing_ShipMethods.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView81()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_ShipMethods
        [Tutorial.LinqToEntities.FullWithViews.Purchasing_ShipMethod](T1.[Purchasing_ShipMethod.ShipMethodId], T1.[Purchasing_ShipMethod.Name], T1.[Purchasing_ShipMethod.ShipBase], T1.[Purchasing_ShipMethod.ShipRate], T1.[Purchasing_ShipMethod.Rowguid], T1.[Purchasing_ShipMethod.ModifiedDate])
    FROM (
        SELECT 
            T.ShipMethodID AS [Purchasing_ShipMethod.ShipMethodId], 
            T.Name AS [Purchasing_ShipMethod.Name], 
            T.ShipBase AS [Purchasing_ShipMethod.ShipBase], 
            T.ShipRate AS [Purchasing_ShipMethod.ShipRate], 
            T.rowguid AS [Purchasing_ShipMethod.Rowguid], 
            T.ModifiedDate AS [Purchasing_ShipMethod.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Purchasing_ShipMethod AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Purchasing_PurchaseOrderHeaders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView82()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_PurchaseOrderHeaders
        [Tutorial.LinqToEntities.FullWithViews.Purchasing_PurchaseOrderHeader](T1.[Purchasing_PurchaseOrderHeader.PurchaseOrderId], T1.[Purchasing_PurchaseOrderHeader.RevisionNumber], T1.[Purchasing_PurchaseOrderHeader.Status], T1.[Purchasing_PurchaseOrderHeader.EmployeeId], T1.[Purchasing_PurchaseOrderHeader.VendorId], T1.[Purchasing_PurchaseOrderHeader.ShipMethodId], T1.[Purchasing_PurchaseOrderHeader.OrderDate], T1.[Purchasing_PurchaseOrderHeader.ShipDate], T1.[Purchasing_PurchaseOrderHeader.SubTotal], T1.[Purchasing_PurchaseOrderHeader.TaxAmt], T1.[Purchasing_PurchaseOrderHeader.Freight], T1.[Purchasing_PurchaseOrderHeader.TotalDue], T1.[Purchasing_PurchaseOrderHeader.ModifiedDate])
    FROM (
        SELECT 
            T.PurchaseOrderID AS [Purchasing_PurchaseOrderHeader.PurchaseOrderId], 
            T.RevisionNumber AS [Purchasing_PurchaseOrderHeader.RevisionNumber], 
            T.Status AS [Purchasing_PurchaseOrderHeader.Status], 
            T.EmployeeID AS [Purchasing_PurchaseOrderHeader.EmployeeId], 
            T.VendorID AS [Purchasing_PurchaseOrderHeader.VendorId], 
            T.ShipMethodID AS [Purchasing_PurchaseOrderHeader.ShipMethodId], 
            T.OrderDate AS [Purchasing_PurchaseOrderHeader.OrderDate], 
            T.ShipDate AS [Purchasing_PurchaseOrderHeader.ShipDate], 
            T.SubTotal AS [Purchasing_PurchaseOrderHeader.SubTotal], 
            T.TaxAmt AS [Purchasing_PurchaseOrderHeader.TaxAmt], 
            T.Freight AS [Purchasing_PurchaseOrderHeader.Freight], 
            T.TotalDue AS [Purchasing_PurchaseOrderHeader.TotalDue], 
            T.ModifiedDate AS [Purchasing_PurchaseOrderHeader.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Purchasing_PurchaseOrderHeader AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Purchasing_PurchaseOrderDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView83()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_PurchaseOrderDetails
        [Tutorial.LinqToEntities.FullWithViews.Purchasing_PurchaseOrderDetail](T1.[Purchasing_PurchaseOrderDetail.PurchaseOrderId], T1.[Purchasing_PurchaseOrderDetail.PurchaseOrderDetailId], T1.[Purchasing_PurchaseOrderDetail.DueDate], T1.[Purchasing_PurchaseOrderDetail.OrderQty], T1.[Purchasing_PurchaseOrderDetail.ProductId], T1.[Purchasing_PurchaseOrderDetail.UnitPrice], T1.[Purchasing_PurchaseOrderDetail.LineTotal], T1.[Purchasing_PurchaseOrderDetail.ReceivedQty], T1.[Purchasing_PurchaseOrderDetail.RejectedQty], T1.[Purchasing_PurchaseOrderDetail.StockedQty], T1.[Purchasing_PurchaseOrderDetail.ModifiedDate])
    FROM (
        SELECT 
            T.PurchaseOrderID AS [Purchasing_PurchaseOrderDetail.PurchaseOrderId], 
            T.PurchaseOrderDetailID AS [Purchasing_PurchaseOrderDetail.PurchaseOrderDetailId], 
            T.DueDate AS [Purchasing_PurchaseOrderDetail.DueDate], 
            T.OrderQty AS [Purchasing_PurchaseOrderDetail.OrderQty], 
            T.ProductID AS [Purchasing_PurchaseOrderDetail.ProductId], 
            T.UnitPrice AS [Purchasing_PurchaseOrderDetail.UnitPrice], 
            T.LineTotal AS [Purchasing_PurchaseOrderDetail.LineTotal], 
            T.ReceivedQty AS [Purchasing_PurchaseOrderDetail.ReceivedQty], 
            T.RejectedQty AS [Purchasing_PurchaseOrderDetail.RejectedQty], 
            T.StockedQty AS [Purchasing_PurchaseOrderDetail.StockedQty], 
            T.ModifiedDate AS [Purchasing_PurchaseOrderDetail.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Purchasing_PurchaseOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_Products.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView84()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Products
        [Tutorial.LinqToEntities.FullWithViews.Production_Product](T1.[Production_Product.ProductId], T1.[Production_Product.Name], T1.[Production_Product.ProductNumber], T1.[Production_Product.MakeFlag], T1.[Production_Product.FinishedGoodsFlag], T1.[Production_Product.Color], T1.[Production_Product.SafetyStockLevel], T1.[Production_Product.ReorderPoint], T1.[Production_Product.StandardCost], T1.[Production_Product.ListPrice], T1.[Production_Product.Size], T1.[Production_Product.SizeUnitMeasureCode], T1.[Production_Product.WeightUnitMeasureCode], T1.[Production_Product.Weight], T1.[Production_Product.DaysToManufacture], T1.[Production_Product.ProductLine], T1.[Production_Product.Class], T1.[Production_Product.Style], T1.[Production_Product.ProductSubcategoryId], T1.[Production_Product.ProductModelId], T1.[Production_Product.SellStartDate], T1.[Production_Product.SellEndDate], T1.[Production_Product.DiscontinuedDate], T1.[Production_Product.Rowguid], T1.[Production_Product.ModifiedDate], T1.[Production_Product.RowVersion])
    FROM (
        SELECT 
            T.ProductID AS [Production_Product.ProductId], 
            T.Name AS [Production_Product.Name], 
            T.ProductNumber AS [Production_Product.ProductNumber], 
            T.MakeFlag AS [Production_Product.MakeFlag], 
            T.FinishedGoodsFlag AS [Production_Product.FinishedGoodsFlag], 
            T.Color AS [Production_Product.Color], 
            T.SafetyStockLevel AS [Production_Product.SafetyStockLevel], 
            T.ReorderPoint AS [Production_Product.ReorderPoint], 
            T.StandardCost AS [Production_Product.StandardCost], 
            T.ListPrice AS [Production_Product.ListPrice], 
            T.Size AS [Production_Product.Size], 
            T.SizeUnitMeasureCode AS [Production_Product.SizeUnitMeasureCode], 
            T.WeightUnitMeasureCode AS [Production_Product.WeightUnitMeasureCode], 
            T.Weight AS [Production_Product.Weight], 
            T.DaysToManufacture AS [Production_Product.DaysToManufacture], 
            T.ProductLine AS [Production_Product.ProductLine], 
            T.Class AS [Production_Product.Class], 
            T.Style AS [Production_Product.Style], 
            T.ProductSubcategoryID AS [Production_Product.ProductSubcategoryId], 
            T.ProductModelID AS [Production_Product.ProductModelId], 
            T.SellStartDate AS [Production_Product.SellStartDate], 
            T.SellEndDate AS [Production_Product.SellEndDate], 
            T.DiscontinuedDate AS [Production_Product.DiscontinuedDate], 
            T.rowguid AS [Production_Product.Rowguid], 
            T.ModifiedDate AS [Production_Product.ModifiedDate], 
            T.RowVersion AS [Production_Product.RowVersion], 
            True AS _from0
        FROM CodeFirstDatabase.Production_Product AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_BillOfMaterials.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView85()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_BillOfMaterials
        [Tutorial.LinqToEntities.FullWithViews.Production_BillOfMaterial](T1.[Production_BillOfMaterial.BillOfMaterialsId], T1.[Production_BillOfMaterial.ProductAssemblyId], T1.[Production_BillOfMaterial.ComponentId], T1.[Production_BillOfMaterial.StartDate], T1.[Production_BillOfMaterial.EndDate], T1.[Production_BillOfMaterial.UnitMeasureCode], T1.[Production_BillOfMaterial.BomLevel], T1.[Production_BillOfMaterial.PerAssemblyQty], T1.[Production_BillOfMaterial.ModifiedDate])
    FROM (
        SELECT 
            T.BillOfMaterialsID AS [Production_BillOfMaterial.BillOfMaterialsId], 
            T.ProductAssemblyID AS [Production_BillOfMaterial.ProductAssemblyId], 
            T.ComponentID AS [Production_BillOfMaterial.ComponentId], 
            T.StartDate AS [Production_BillOfMaterial.StartDate], 
            T.EndDate AS [Production_BillOfMaterial.EndDate], 
            T.UnitMeasureCode AS [Production_BillOfMaterial.UnitMeasureCode], 
            T.BOMLevel AS [Production_BillOfMaterial.BomLevel], 
            T.PerAssemblyQty AS [Production_BillOfMaterial.PerAssemblyQty], 
            T.ModifiedDate AS [Production_BillOfMaterial.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_BillOfMaterial AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_UnitMeasures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView86()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_UnitMeasures
        [Tutorial.LinqToEntities.FullWithViews.Production_UnitMeasure](T1.[Production_UnitMeasure.UnitMeasureCode], T1.[Production_UnitMeasure.Name], T1.[Production_UnitMeasure.ModifiedDate])
    FROM (
        SELECT 
            T.UnitMeasureCode AS [Production_UnitMeasure.UnitMeasureCode], 
            T.Name AS [Production_UnitMeasure.Name], 
            T.ModifiedDate AS [Production_UnitMeasure.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_UnitMeasure AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Purchasing_ProductVendors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView87()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_ProductVendors
        [Tutorial.LinqToEntities.FullWithViews.Purchasing_ProductVendor](T1.[Purchasing_ProductVendor.ProductId], T1.[Purchasing_ProductVendor.BusinessEntityId], T1.[Purchasing_ProductVendor.AverageLeadTime], T1.[Purchasing_ProductVendor.StandardPrice], T1.[Purchasing_ProductVendor.LastReceiptCost], T1.[Purchasing_ProductVendor.LastReceiptDate], T1.[Purchasing_ProductVendor.MinOrderQty], T1.[Purchasing_ProductVendor.MaxOrderQty], T1.[Purchasing_ProductVendor.OnOrderQty], T1.[Purchasing_ProductVendor.UnitMeasureCode], T1.[Purchasing_ProductVendor.ModifiedDate])
    FROM (
        SELECT 
            T.ProductID AS [Purchasing_ProductVendor.ProductId], 
            T.BusinessEntityID AS [Purchasing_ProductVendor.BusinessEntityId], 
            T.AverageLeadTime AS [Purchasing_ProductVendor.AverageLeadTime], 
            T.StandardPrice AS [Purchasing_ProductVendor.StandardPrice], 
            T.LastReceiptCost AS [Purchasing_ProductVendor.LastReceiptCost], 
            T.LastReceiptDate AS [Purchasing_ProductVendor.LastReceiptDate], 
            T.MinOrderQty AS [Purchasing_ProductVendor.MinOrderQty], 
            T.MaxOrderQty AS [Purchasing_ProductVendor.MaxOrderQty], 
            T.OnOrderQty AS [Purchasing_ProductVendor.OnOrderQty], 
            T.UnitMeasureCode AS [Purchasing_ProductVendor.UnitMeasureCode], 
            T.ModifiedDate AS [Purchasing_ProductVendor.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Purchasing_ProductVendor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Purchasing_Vendors.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView88()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_Vendors
        [Tutorial.LinqToEntities.FullWithViews.Purchasing_Vendor](T1.[Purchasing_Vendor.BusinessEntityId], T1.[Purchasing_Vendor.AccountNumber], T1.[Purchasing_Vendor.Name], T1.[Purchasing_Vendor.CreditRating], T1.[Purchasing_Vendor.PreferredVendorStatus], T1.[Purchasing_Vendor.ActiveFlag], T1.[Purchasing_Vendor.PurchasingWebServiceUrl], T1.[Purchasing_Vendor.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Purchasing_Vendor.BusinessEntityId], 
            T.AccountNumber AS [Purchasing_Vendor.AccountNumber], 
            T.Name AS [Purchasing_Vendor.Name], 
            T.CreditRating AS [Purchasing_Vendor.CreditRating], 
            T.PreferredVendorStatus AS [Purchasing_Vendor.PreferredVendorStatus], 
            T.ActiveFlag AS [Purchasing_Vendor.ActiveFlag], 
            T.PurchasingWebServiceURL AS [Purchasing_Vendor.PurchasingWebServiceUrl], 
            T.ModifiedDate AS [Purchasing_Vendor.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Purchasing_Vendor AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductCostHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView89()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductCostHistories
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductCostHistory](T1.[Production_ProductCostHistory.ProductId], T1.[Production_ProductCostHistory.StartDate], T1.[Production_ProductCostHistory.EndDate], T1.[Production_ProductCostHistory.StandardCost], T1.[Production_ProductCostHistory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductID AS [Production_ProductCostHistory.ProductId], 
            T.StartDate AS [Production_ProductCostHistory.StartDate], 
            T.EndDate AS [Production_ProductCostHistory.EndDate], 
            T.StandardCost AS [Production_ProductCostHistory.StandardCost], 
            T.ModifiedDate AS [Production_ProductCostHistory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductCostHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductInventories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView90()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductInventories
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductInventory](T1.[Production_ProductInventory.ProductId], T1.[Production_ProductInventory.LocationId], T1.[Production_ProductInventory.Shelf], T1.[Production_ProductInventory.Bin], T1.[Production_ProductInventory.Quantity], T1.[Production_ProductInventory.Rowguid], T1.[Production_ProductInventory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductID AS [Production_ProductInventory.ProductId], 
            T.LocationID AS [Production_ProductInventory.LocationId], 
            T.Shelf AS [Production_ProductInventory.Shelf], 
            T.Bin AS [Production_ProductInventory.Bin], 
            T.Quantity AS [Production_ProductInventory.Quantity], 
            T.rowguid AS [Production_ProductInventory.Rowguid], 
            T.ModifiedDate AS [Production_ProductInventory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductInventory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_Locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView91()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Locations
        [Tutorial.LinqToEntities.FullWithViews.Production_Location](T1.[Production_Location.LocationId], T1.[Production_Location.Name], T1.[Production_Location.CostRate], T1.[Production_Location.Availability], T1.[Production_Location.ModifiedDate])
    FROM (
        SELECT 
            T.LocationID AS [Production_Location.LocationId], 
            T.Name AS [Production_Location.Name], 
            T.CostRate AS [Production_Location.CostRate], 
            T.Availability AS [Production_Location.Availability], 
            T.ModifiedDate AS [Production_Location.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_WorkOrderRoutings.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView92()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_WorkOrderRoutings
        [Tutorial.LinqToEntities.FullWithViews.Production_WorkOrderRouting](T1.[Production_WorkOrderRouting.WorkOrderId], T1.[Production_WorkOrderRouting.ProductId], T1.[Production_WorkOrderRouting.OperationSequence], T1.[Production_WorkOrderRouting.LocationId], T1.[Production_WorkOrderRouting.ScheduledStartDate], T1.[Production_WorkOrderRouting.ScheduledEndDate], T1.[Production_WorkOrderRouting.ActualStartDate], T1.[Production_WorkOrderRouting.ActualEndDate], T1.[Production_WorkOrderRouting.ActualResourceHrs], T1.[Production_WorkOrderRouting.PlannedCost], T1.[Production_WorkOrderRouting.ActualCost], T1.[Production_WorkOrderRouting.ModifiedDate])
    FROM (
        SELECT 
            T.WorkOrderID AS [Production_WorkOrderRouting.WorkOrderId], 
            T.ProductID AS [Production_WorkOrderRouting.ProductId], 
            T.OperationSequence AS [Production_WorkOrderRouting.OperationSequence], 
            T.LocationID AS [Production_WorkOrderRouting.LocationId], 
            T.ScheduledStartDate AS [Production_WorkOrderRouting.ScheduledStartDate], 
            T.ScheduledEndDate AS [Production_WorkOrderRouting.ScheduledEndDate], 
            T.ActualStartDate AS [Production_WorkOrderRouting.ActualStartDate], 
            T.ActualEndDate AS [Production_WorkOrderRouting.ActualEndDate], 
            T.ActualResourceHrs AS [Production_WorkOrderRouting.ActualResourceHrs], 
            T.PlannedCost AS [Production_WorkOrderRouting.PlannedCost], 
            T.ActualCost AS [Production_WorkOrderRouting.ActualCost], 
            T.ModifiedDate AS [Production_WorkOrderRouting.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_WorkOrderRouting AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_WorkOrders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView93()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_WorkOrders
        [Tutorial.LinqToEntities.FullWithViews.Production_WorkOrder](T1.[Production_WorkOrder.WorkOrderId], T1.[Production_WorkOrder.ProductId], T1.[Production_WorkOrder.OrderQty], T1.[Production_WorkOrder.StockedQty], T1.[Production_WorkOrder.ScrappedQty], T1.[Production_WorkOrder.StartDate], T1.[Production_WorkOrder.EndDate], T1.[Production_WorkOrder.DueDate], T1.[Production_WorkOrder.ScrapReasonId], T1.[Production_WorkOrder.ModifiedDate])
    FROM (
        SELECT 
            T.WorkOrderID AS [Production_WorkOrder.WorkOrderId], 
            T.ProductID AS [Production_WorkOrder.ProductId], 
            T.OrderQty AS [Production_WorkOrder.OrderQty], 
            T.StockedQty AS [Production_WorkOrder.StockedQty], 
            T.ScrappedQty AS [Production_WorkOrder.ScrappedQty], 
            T.StartDate AS [Production_WorkOrder.StartDate], 
            T.EndDate AS [Production_WorkOrder.EndDate], 
            T.DueDate AS [Production_WorkOrder.DueDate], 
            T.ScrapReasonID AS [Production_WorkOrder.ScrapReasonId], 
            T.ModifiedDate AS [Production_WorkOrder.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_WorkOrder AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ScrapReasons.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView94()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ScrapReasons
        [Tutorial.LinqToEntities.FullWithViews.Production_ScrapReason](T1.[Production_ScrapReason.ScrapReasonId], T1.[Production_ScrapReason.Name], T1.[Production_ScrapReason.ModifiedDate])
    FROM (
        SELECT 
            T.ScrapReasonID AS [Production_ScrapReason.ScrapReasonId], 
            T.Name AS [Production_ScrapReason.Name], 
            T.ModifiedDate AS [Production_ScrapReason.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ScrapReason AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductListPriceHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView95()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductListPriceHistories
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductListPriceHistory](T1.[Production_ProductListPriceHistory.ProductId], T1.[Production_ProductListPriceHistory.StartDate], T1.[Production_ProductListPriceHistory.EndDate], T1.[Production_ProductListPriceHistory.ListPrice], T1.[Production_ProductListPriceHistory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductID AS [Production_ProductListPriceHistory.ProductId], 
            T.StartDate AS [Production_ProductListPriceHistory.StartDate], 
            T.EndDate AS [Production_ProductListPriceHistory.EndDate], 
            T.ListPrice AS [Production_ProductListPriceHistory.ListPrice], 
            T.ModifiedDate AS [Production_ProductListPriceHistory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductListPriceHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductModels.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView96()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductModels
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductModel](T1.[Production_ProductModel.ProductModelId], T1.[Production_ProductModel.Name], T1.[Production_ProductModel.CatalogDescription], T1.[Production_ProductModel.Instructions], T1.[Production_ProductModel.Rowguid], T1.[Production_ProductModel.ModifiedDate])
    FROM (
        SELECT 
            T.ProductModelID AS [Production_ProductModel.ProductModelId], 
            T.Name AS [Production_ProductModel.Name], 
            T.CatalogDescription AS [Production_ProductModel.CatalogDescription], 
            T.Instructions AS [Production_ProductModel.Instructions], 
            T.rowguid AS [Production_ProductModel.Rowguid], 
            T.ModifiedDate AS [Production_ProductModel.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductModel AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductModelIllustrations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView97()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductModelIllustrations
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductModelIllustration](T1.[Production_ProductModelIllustration.ProductModelId], T1.[Production_ProductModelIllustration.IllustrationId], T1.[Production_ProductModelIllustration.ModifiedDate])
    FROM (
        SELECT 
            T.ProductModelID AS [Production_ProductModelIllustration.ProductModelId], 
            T.IllustrationID AS [Production_ProductModelIllustration.IllustrationId], 
            T.ModifiedDate AS [Production_ProductModelIllustration.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductModelIllustration AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_Illustrations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView98()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Illustrations
        [Tutorial.LinqToEntities.FullWithViews.Production_Illustration](T1.[Production_Illustration.IllustrationId], T1.[Production_Illustration.Diagram], T1.[Production_Illustration.ModifiedDate])
    FROM (
        SELECT 
            T.IllustrationID AS [Production_Illustration.IllustrationId], 
            T.Diagram AS [Production_Illustration.Diagram], 
            T.ModifiedDate AS [Production_Illustration.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_Illustration AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductModelProductDescriptionCultures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView99()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductModelProductDescriptionCultures
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductModelProductDescriptionCulture](T1.[Production_ProductModelProductDescriptionCulture.ProductModelId], T1.[Production_ProductModelProductDescriptionCulture.ProductDescriptionId], T1.[Production_ProductModelProductDescriptionCulture.CultureId], T1.[Production_ProductModelProductDescriptionCulture.ModifiedDate])
    FROM (
        SELECT 
            T.ProductModelID AS [Production_ProductModelProductDescriptionCulture.ProductModelId], 
            T.ProductDescriptionID AS [Production_ProductModelProductDescriptionCulture.ProductDescriptionId], 
            T.CultureID AS [Production_ProductModelProductDescriptionCulture.CultureId], 
            T.ModifiedDate AS [Production_ProductModelProductDescriptionCulture.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductModelProductDescriptionCulture AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_Cultures.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView100()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_Cultures
        [Tutorial.LinqToEntities.FullWithViews.Production_Culture](T1.[Production_Culture.CultureId], T1.[Production_Culture.Name], T1.[Production_Culture.ModifiedDate])
    FROM (
        SELECT 
            T.CultureID AS [Production_Culture.CultureId], 
            T.Name AS [Production_Culture.Name], 
            T.ModifiedDate AS [Production_Culture.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_Culture AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView101()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductDescriptions
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductDescription](T1.[Production_ProductDescription.ProductDescriptionId], T1.[Production_ProductDescription.Description], T1.[Production_ProductDescription.Rowguid], T1.[Production_ProductDescription.ModifiedDate])
    FROM (
        SELECT 
            T.ProductDescriptionID AS [Production_ProductDescription.ProductDescriptionId], 
            T.Description AS [Production_ProductDescription.Description], 
            T.rowguid AS [Production_ProductDescription.Rowguid], 
            T.ModifiedDate AS [Production_ProductDescription.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductDescription AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductProductPhotoes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView102()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductProductPhotoes
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductProductPhoto](T1.[Production_ProductProductPhoto.ProductId], T1.[Production_ProductProductPhoto.ProductPhotoId], T1.[Production_ProductProductPhoto.Primary], T1.[Production_ProductProductPhoto.ModifiedDate])
    FROM (
        SELECT 
            T.ProductID AS [Production_ProductProductPhoto.ProductId], 
            T.ProductPhotoID AS [Production_ProductProductPhoto.ProductPhotoId], 
            T.Primary AS [Production_ProductProductPhoto.Primary], 
            T.ModifiedDate AS [Production_ProductProductPhoto.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductProductPhoto AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductPhotoes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView103()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductPhotoes
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductPhoto](T1.[Production_ProductPhoto.ProductPhotoId], T1.[Production_ProductPhoto.ThumbNailPhoto], T1.[Production_ProductPhoto.ThumbnailPhotoFileName], T1.[Production_ProductPhoto.LargePhoto], T1.[Production_ProductPhoto.LargePhotoFileName], T1.[Production_ProductPhoto.ModifiedDate])
    FROM (
        SELECT 
            T.ProductPhotoID AS [Production_ProductPhoto.ProductPhotoId], 
            T.ThumbNailPhoto AS [Production_ProductPhoto.ThumbNailPhoto], 
            T.ThumbnailPhotoFileName AS [Production_ProductPhoto.ThumbnailPhotoFileName], 
            T.LargePhoto AS [Production_ProductPhoto.LargePhoto], 
            T.LargePhotoFileName AS [Production_ProductPhoto.LargePhotoFileName], 
            T.ModifiedDate AS [Production_ProductPhoto.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductPhoto AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductReviews.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView104()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductReviews
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductReview](T1.[Production_ProductReview.ProductReviewId], T1.[Production_ProductReview.ProductId], T1.[Production_ProductReview.ReviewerName], T1.[Production_ProductReview.ReviewDate], T1.[Production_ProductReview.EmailAddress], T1.[Production_ProductReview.Rating], T1.[Production_ProductReview.Comments], T1.[Production_ProductReview.ModifiedDate])
    FROM (
        SELECT 
            T.ProductReviewID AS [Production_ProductReview.ProductReviewId], 
            T.ProductID AS [Production_ProductReview.ProductId], 
            T.ReviewerName AS [Production_ProductReview.ReviewerName], 
            T.ReviewDate AS [Production_ProductReview.ReviewDate], 
            T.EmailAddress AS [Production_ProductReview.EmailAddress], 
            T.Rating AS [Production_ProductReview.Rating], 
            T.Comments AS [Production_ProductReview.Comments], 
            T.ModifiedDate AS [Production_ProductReview.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductReview AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductSubcategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView105()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductSubcategories
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductSubcategory](T1.[Production_ProductSubcategory.ProductSubcategoryId], T1.[Production_ProductSubcategory.ProductCategoryId], T1.[Production_ProductSubcategory.Name], T1.[Production_ProductSubcategory.Rowguid], T1.[Production_ProductSubcategory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductSubcategoryID AS [Production_ProductSubcategory.ProductSubcategoryId], 
            T.ProductCategoryID AS [Production_ProductSubcategory.ProductCategoryId], 
            T.Name AS [Production_ProductSubcategory.Name], 
            T.rowguid AS [Production_ProductSubcategory.Rowguid], 
            T.ModifiedDate AS [Production_ProductSubcategory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductSubcategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_ProductCategories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView106()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_ProductCategories
        [Tutorial.LinqToEntities.FullWithViews.Production_ProductCategory](T1.[Production_ProductCategory.ProductCategoryId], T1.[Production_ProductCategory.Name], T1.[Production_ProductCategory.Rowguid], T1.[Production_ProductCategory.ModifiedDate])
    FROM (
        SELECT 
            T.ProductCategoryID AS [Production_ProductCategory.ProductCategoryId], 
            T.Name AS [Production_ProductCategory.Name], 
            T.rowguid AS [Production_ProductCategory.Rowguid], 
            T.ModifiedDate AS [Production_ProductCategory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_ProductCategory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_TransactionHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView107()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_TransactionHistories
        [Tutorial.LinqToEntities.FullWithViews.Production_TransactionHistory](T1.[Production_TransactionHistory.TransactionId], T1.[Production_TransactionHistory.ProductId], T1.[Production_TransactionHistory.ReferenceOrderId], T1.[Production_TransactionHistory.ReferenceOrderLineId], T1.[Production_TransactionHistory.TransactionDate], T1.[Production_TransactionHistory.TransactionType], T1.[Production_TransactionHistory.Quantity], T1.[Production_TransactionHistory.ActualCost], T1.[Production_TransactionHistory.ModifiedDate])
    FROM (
        SELECT 
            T.TransactionID AS [Production_TransactionHistory.TransactionId], 
            T.ProductID AS [Production_TransactionHistory.ProductId], 
            T.ReferenceOrderID AS [Production_TransactionHistory.ReferenceOrderId], 
            T.ReferenceOrderLineID AS [Production_TransactionHistory.ReferenceOrderLineId], 
            T.TransactionDate AS [Production_TransactionHistory.TransactionDate], 
            T.TransactionType AS [Production_TransactionHistory.TransactionType], 
            T.Quantity AS [Production_TransactionHistory.Quantity], 
            T.ActualCost AS [Production_TransactionHistory.ActualCost], 
            T.ModifiedDate AS [Production_TransactionHistory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_TransactionHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_ShoppingCartItems.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView108()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_ShoppingCartItems
        [Tutorial.LinqToEntities.FullWithViews.Sales_ShoppingCartItem](T1.[Sales_ShoppingCartItem.ShoppingCartItemId], T1.[Sales_ShoppingCartItem.ShoppingCartId], T1.[Sales_ShoppingCartItem.Quantity], T1.[Sales_ShoppingCartItem.ProductId], T1.[Sales_ShoppingCartItem.DateCreated], T1.[Sales_ShoppingCartItem.ModifiedDate])
    FROM (
        SELECT 
            T.ShoppingCartItemID AS [Sales_ShoppingCartItem.ShoppingCartItemId], 
            T.ShoppingCartID AS [Sales_ShoppingCartItem.ShoppingCartId], 
            T.Quantity AS [Sales_ShoppingCartItem.Quantity], 
            T.ProductID AS [Sales_ShoppingCartItem.ProductId], 
            T.DateCreated AS [Sales_ShoppingCartItem.DateCreated], 
            T.ModifiedDate AS [Sales_ShoppingCartItem.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_ShoppingCartItem AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SpecialOfferProducts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView109()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SpecialOfferProducts
        [Tutorial.LinqToEntities.FullWithViews.Sales_SpecialOfferProduct](T1.[Sales_SpecialOfferProduct.SpecialOfferId], T1.[Sales_SpecialOfferProduct.ProductId], T1.[Sales_SpecialOfferProduct.Rowguid], T1.[Sales_SpecialOfferProduct.ModifiedDate])
    FROM (
        SELECT 
            T.SpecialOfferID AS [Sales_SpecialOfferProduct.SpecialOfferId], 
            T.ProductID AS [Sales_SpecialOfferProduct.ProductId], 
            T.rowguid AS [Sales_SpecialOfferProduct.Rowguid], 
            T.ModifiedDate AS [Sales_SpecialOfferProduct.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SpecialOfferProduct AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesOrderDetails.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView110()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesOrderDetails
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesOrderDetail](T1.[Sales_SalesOrderDetail.SalesOrderId], T1.[Sales_SalesOrderDetail.SalesOrderDetailId], T1.[Sales_SalesOrderDetail.CarrierTrackingNumber], T1.[Sales_SalesOrderDetail.OrderQty], T1.[Sales_SalesOrderDetail.ProductId], T1.[Sales_SalesOrderDetail.SpecialOfferId], T1.[Sales_SalesOrderDetail.UnitPrice], T1.[Sales_SalesOrderDetail.UnitPriceDiscount], T1.[Sales_SalesOrderDetail.LineTotal], T1.[Sales_SalesOrderDetail.Rowguid], T1.[Sales_SalesOrderDetail.ModifiedDate])
    FROM (
        SELECT 
            T.SalesOrderID AS [Sales_SalesOrderDetail.SalesOrderId], 
            T.SalesOrderDetailID AS [Sales_SalesOrderDetail.SalesOrderDetailId], 
            T.CarrierTrackingNumber AS [Sales_SalesOrderDetail.CarrierTrackingNumber], 
            T.OrderQty AS [Sales_SalesOrderDetail.OrderQty], 
            T.ProductID AS [Sales_SalesOrderDetail.ProductId], 
            T.SpecialOfferID AS [Sales_SalesOrderDetail.SpecialOfferId], 
            T.UnitPrice AS [Sales_SalesOrderDetail.UnitPrice], 
            T.UnitPriceDiscount AS [Sales_SalesOrderDetail.UnitPriceDiscount], 
            T.LineTotal AS [Sales_SalesOrderDetail.LineTotal], 
            T.rowguid AS [Sales_SalesOrderDetail.Rowguid], 
            T.ModifiedDate AS [Sales_SalesOrderDetail.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesOrderDetail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SpecialOffers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView111()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SpecialOffers
        [Tutorial.LinqToEntities.FullWithViews.Sales_SpecialOffer](T1.[Sales_SpecialOffer.SpecialOfferId], T1.[Sales_SpecialOffer.Description], T1.[Sales_SpecialOffer.DiscountPct], T1.[Sales_SpecialOffer.Type], T1.[Sales_SpecialOffer.Category], T1.[Sales_SpecialOffer.StartDate], T1.[Sales_SpecialOffer.EndDate], T1.[Sales_SpecialOffer.MinQty], T1.[Sales_SpecialOffer.MaxQty], T1.[Sales_SpecialOffer.Rowguid], T1.[Sales_SpecialOffer.ModifiedDate])
    FROM (
        SELECT 
            T.SpecialOfferID AS [Sales_SpecialOffer.SpecialOfferId], 
            T.Description AS [Sales_SpecialOffer.Description], 
            T.DiscountPct AS [Sales_SpecialOffer.DiscountPct], 
            T.Type AS [Sales_SpecialOffer.Type], 
            T.Category AS [Sales_SpecialOffer.Category], 
            T.StartDate AS [Sales_SpecialOffer.StartDate], 
            T.EndDate AS [Sales_SpecialOffer.EndDate], 
            T.MinQty AS [Sales_SpecialOffer.MinQty], 
            T.MaxQty AS [Sales_SpecialOffer.MaxQty], 
            T.rowguid AS [Sales_SpecialOffer.Rowguid], 
            T.ModifiedDate AS [Sales_SpecialOffer.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SpecialOffer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_CreditCards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView112()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_CreditCards
        [Tutorial.LinqToEntities.FullWithViews.Sales_CreditCard](T1.[Sales_CreditCard.CreditCardId], T1.[Sales_CreditCard.CardType], T1.[Sales_CreditCard.CardNumber], T1.[Sales_CreditCard.ExpMonth], T1.[Sales_CreditCard.ExpYear], T1.[Sales_CreditCard.ModifiedDate])
    FROM (
        SELECT 
            T.CreditCardID AS [Sales_CreditCard.CreditCardId], 
            T.CardType AS [Sales_CreditCard.CardType], 
            T.CardNumber AS [Sales_CreditCard.CardNumber], 
            T.ExpMonth AS [Sales_CreditCard.ExpMonth], 
            T.ExpYear AS [Sales_CreditCard.ExpYear], 
            T.ModifiedDate AS [Sales_CreditCard.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_CreditCard AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_PersonCreditCards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView113()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_PersonCreditCards
        [Tutorial.LinqToEntities.FullWithViews.Sales_PersonCreditCard](T1.[Sales_PersonCreditCard.BusinessEntityId], T1.[Sales_PersonCreditCard.CreditCardId], T1.[Sales_PersonCreditCard.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_PersonCreditCard.BusinessEntityId], 
            T.CreditCardID AS [Sales_PersonCreditCard.CreditCardId], 
            T.ModifiedDate AS [Sales_PersonCreditCard.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_PersonCreditCard AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_CurrencyRates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView114()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_CurrencyRates
        [Tutorial.LinqToEntities.FullWithViews.Sales_CurrencyRate](T1.[Sales_CurrencyRate.CurrencyRateId], T1.[Sales_CurrencyRate.CurrencyRateDate], T1.[Sales_CurrencyRate.FromCurrencyCode], T1.[Sales_CurrencyRate.ToCurrencyCode], T1.[Sales_CurrencyRate.AverageRate], T1.[Sales_CurrencyRate.EndOfDayRate], T1.[Sales_CurrencyRate.ModifiedDate])
    FROM (
        SELECT 
            T.CurrencyRateID AS [Sales_CurrencyRate.CurrencyRateId], 
            T.CurrencyRateDate AS [Sales_CurrencyRate.CurrencyRateDate], 
            T.FromCurrencyCode AS [Sales_CurrencyRate.FromCurrencyCode], 
            T.ToCurrencyCode AS [Sales_CurrencyRate.ToCurrencyCode], 
            T.AverageRate AS [Sales_CurrencyRate.AverageRate], 
            T.EndOfDayRate AS [Sales_CurrencyRate.EndOfDayRate], 
            T.ModifiedDate AS [Sales_CurrencyRate.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_CurrencyRate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_Currencies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView115()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_Currencies
        [Tutorial.LinqToEntities.FullWithViews.Sales_Currency](T1.[Sales_Currency.CurrencyCode], T1.[Sales_Currency.Name], T1.[Sales_Currency.ModifiedDate])
    FROM (
        SELECT 
            T.CurrencyCode AS [Sales_Currency.CurrencyCode], 
            T.Name AS [Sales_Currency.Name], 
            T.ModifiedDate AS [Sales_Currency.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_Currency AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_CountryRegionCurrencies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView116()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_CountryRegionCurrencies
        [Tutorial.LinqToEntities.FullWithViews.Sales_CountryRegionCurrency](T1.[Sales_CountryRegionCurrency.CountryRegionCode], T1.[Sales_CountryRegionCurrency.CurrencyCode], T1.[Sales_CountryRegionCurrency.ModifiedDate])
    FROM (
        SELECT 
            T.CountryRegionCode AS [Sales_CountryRegionCurrency.CountryRegionCode], 
            T.CurrencyCode AS [Sales_CountryRegionCurrency.CurrencyCode], 
            T.ModifiedDate AS [Sales_CountryRegionCurrency.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_CountryRegionCurrency AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_CountryRegions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView117()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_CountryRegions
        [Tutorial.LinqToEntities.FullWithViews.Person_CountryRegion](T1.[Person_CountryRegion.CountryRegionCode], T1.[Person_CountryRegion.Name], T1.[Person_CountryRegion.ModifiedDate])
    FROM (
        SELECT 
            T.CountryRegionCode AS [Person_CountryRegion.CountryRegionCode], 
            T.Name AS [Person_CountryRegion.Name], 
            T.ModifiedDate AS [Person_CountryRegion.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_CountryRegion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_StateProvinces.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView118()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_StateProvinces
        [Tutorial.LinqToEntities.FullWithViews.Person_StateProvince](T1.[Person_StateProvince.StateProvinceId], T1.[Person_StateProvince.StateProvinceCode], T1.[Person_StateProvince.CountryRegionCode], T1.[Person_StateProvince.IsOnlyStateProvinceFlag], T1.[Person_StateProvince.Name], T1.[Person_StateProvince.TerritoryId], T1.[Person_StateProvince.Rowguid], T1.[Person_StateProvince.ModifiedDate])
    FROM (
        SELECT 
            T.StateProvinceID AS [Person_StateProvince.StateProvinceId], 
            T.StateProvinceCode AS [Person_StateProvince.StateProvinceCode], 
            T.CountryRegionCode AS [Person_StateProvince.CountryRegionCode], 
            T.IsOnlyStateProvinceFlag AS [Person_StateProvince.IsOnlyStateProvinceFlag], 
            T.Name AS [Person_StateProvince.Name], 
            T.TerritoryID AS [Person_StateProvince.TerritoryId], 
            T.rowguid AS [Person_StateProvince.Rowguid], 
            T.ModifiedDate AS [Person_StateProvince.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_StateProvince AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesTaxRates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView119()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesTaxRates
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesTaxRate](T1.[Sales_SalesTaxRate.SalesTaxRateId], T1.[Sales_SalesTaxRate.StateProvinceId], T1.[Sales_SalesTaxRate.TaxType], T1.[Sales_SalesTaxRate.TaxRate], T1.[Sales_SalesTaxRate.Name], T1.[Sales_SalesTaxRate.Rowguid], T1.[Sales_SalesTaxRate.ModifiedDate])
    FROM (
        SELECT 
            T.SalesTaxRateID AS [Sales_SalesTaxRate.SalesTaxRateId], 
            T.StateProvinceID AS [Sales_SalesTaxRate.StateProvinceId], 
            T.TaxType AS [Sales_SalesTaxRate.TaxType], 
            T.TaxRate AS [Sales_SalesTaxRate.TaxRate], 
            T.Name AS [Sales_SalesTaxRate.Name], 
            T.rowguid AS [Sales_SalesTaxRate.Rowguid], 
            T.ModifiedDate AS [Sales_SalesTaxRate.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesTaxRate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesTerritories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView120()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesTerritories
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesTerritory](T1.[Sales_SalesTerritory.TerritoryId], T1.[Sales_SalesTerritory.Name], T1.[Sales_SalesTerritory.CountryRegionCode], T1.[Sales_SalesTerritory.Group], T1.[Sales_SalesTerritory.SalesYtd], T1.[Sales_SalesTerritory.SalesLastYear], T1.[Sales_SalesTerritory.CostYtd], T1.[Sales_SalesTerritory.CostLastYear], T1.[Sales_SalesTerritory.Rowguid], T1.[Sales_SalesTerritory.ModifiedDate])
    FROM (
        SELECT 
            T.TerritoryID AS [Sales_SalesTerritory.TerritoryId], 
            T.Name AS [Sales_SalesTerritory.Name], 
            T.CountryRegionCode AS [Sales_SalesTerritory.CountryRegionCode], 
            T.[Group] AS [Sales_SalesTerritory.Group], 
            T.SalesYTD AS [Sales_SalesTerritory.SalesYtd], 
            T.SalesLastYear AS [Sales_SalesTerritory.SalesLastYear], 
            T.CostYTD AS [Sales_SalesTerritory.CostYtd], 
            T.CostLastYear AS [Sales_SalesTerritory.CostLastYear], 
            T.rowguid AS [Sales_SalesTerritory.Rowguid], 
            T.ModifiedDate AS [Sales_SalesTerritory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesTerritory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView121()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_Customers
        [Tutorial.LinqToEntities.FullWithViews.Sales_Customer](T1.[Sales_Customer.CustomerId], T1.[Sales_Customer.PersonId], T1.[Sales_Customer.StoreId], T1.[Sales_Customer.TerritoryId], T1.[Sales_Customer.AccountNumber], T1.[Sales_Customer.Rowguid], T1.[Sales_Customer.ModifiedDate])
    FROM (
        SELECT 
            T.CustomerID AS [Sales_Customer.CustomerId], 
            T.PersonID AS [Sales_Customer.PersonId], 
            T.StoreID AS [Sales_Customer.StoreId], 
            T.TerritoryID AS [Sales_Customer.TerritoryId], 
            T.AccountNumber AS [Sales_Customer.AccountNumber], 
            T.rowguid AS [Sales_Customer.Rowguid], 
            T.ModifiedDate AS [Sales_Customer.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_Customer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_Stores.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView122()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_Stores
        [Tutorial.LinqToEntities.FullWithViews.Sales_Store](T1.[Sales_Store.BusinessEntityId], T1.[Sales_Store.Name], T1.[Sales_Store.SalesPersonId], T1.[Sales_Store.Demographics], T1.[Sales_Store.Rowguid], T1.[Sales_Store.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_Store.BusinessEntityId], 
            T.Name AS [Sales_Store.Name], 
            T.SalesPersonID AS [Sales_Store.SalesPersonId], 
            T.Demographics AS [Sales_Store.Demographics], 
            T.rowguid AS [Sales_Store.Rowguid], 
            T.ModifiedDate AS [Sales_Store.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_Store AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesPersons.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView123()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesPersons
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesPerson](T1.[Sales_SalesPerson.BusinessEntityId], T1.[Sales_SalesPerson.TerritoryId], T1.[Sales_SalesPerson.SalesQuota], T1.[Sales_SalesPerson.Bonus], T1.[Sales_SalesPerson.CommissionPct], T1.[Sales_SalesPerson.SalesYtd], T1.[Sales_SalesPerson.SalesLastYear], T1.[Sales_SalesPerson.Rowguid], T1.[Sales_SalesPerson.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_SalesPerson.BusinessEntityId], 
            T.TerritoryID AS [Sales_SalesPerson.TerritoryId], 
            T.SalesQuota AS [Sales_SalesPerson.SalesQuota], 
            T.Bonus AS [Sales_SalesPerson.Bonus], 
            T.CommissionPct AS [Sales_SalesPerson.CommissionPct], 
            T.SalesYTD AS [Sales_SalesPerson.SalesYtd], 
            T.SalesLastYear AS [Sales_SalesPerson.SalesLastYear], 
            T.rowguid AS [Sales_SalesPerson.Rowguid], 
            T.ModifiedDate AS [Sales_SalesPerson.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesPerson AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesPersonQuotaHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView124()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesPersonQuotaHistories
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesPersonQuotaHistory](T1.[Sales_SalesPersonQuotaHistory.BusinessEntityId], T1.[Sales_SalesPersonQuotaHistory.QuotaDate], T1.[Sales_SalesPersonQuotaHistory.SalesQuota], T1.[Sales_SalesPersonQuotaHistory.Rowguid], T1.[Sales_SalesPersonQuotaHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_SalesPersonQuotaHistory.BusinessEntityId], 
            T.QuotaDate AS [Sales_SalesPersonQuotaHistory.QuotaDate], 
            T.SalesQuota AS [Sales_SalesPersonQuotaHistory.SalesQuota], 
            T.rowguid AS [Sales_SalesPersonQuotaHistory.Rowguid], 
            T.ModifiedDate AS [Sales_SalesPersonQuotaHistory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesPersonQuotaHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesTerritoryHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView125()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesTerritoryHistories
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesTerritoryHistory](T1.[Sales_SalesTerritoryHistory.BusinessEntityId], T1.[Sales_SalesTerritoryHistory.StartDate], T1.[Sales_SalesTerritoryHistory.TerritoryId], T1.[Sales_SalesTerritoryHistory.EndDate], T1.[Sales_SalesTerritoryHistory.Rowguid], T1.[Sales_SalesTerritoryHistory.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_SalesTerritoryHistory.BusinessEntityId], 
            T.StartDate AS [Sales_SalesTerritoryHistory.StartDate], 
            T.TerritoryID AS [Sales_SalesTerritoryHistory.TerritoryId], 
            T.EndDate AS [Sales_SalesTerritoryHistory.EndDate], 
            T.rowguid AS [Sales_SalesTerritoryHistory.Rowguid], 
            T.ModifiedDate AS [Sales_SalesTerritoryHistory.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesTerritoryHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesOrderHeaderSalesReasons.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView126()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesOrderHeaderSalesReasons
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesOrderHeaderSalesReason](T1.[Sales_SalesOrderHeaderSalesReason.SalesOrderId], T1.[Sales_SalesOrderHeaderSalesReason.SalesReasonId], T1.[Sales_SalesOrderHeaderSalesReason.ModifiedDate])
    FROM (
        SELECT 
            T.SalesOrderID AS [Sales_SalesOrderHeaderSalesReason.SalesOrderId], 
            T.SalesReasonID AS [Sales_SalesOrderHeaderSalesReason.SalesReasonId], 
            T.ModifiedDate AS [Sales_SalesOrderHeaderSalesReason.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesOrderHeaderSalesReason AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_SalesReasons.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView127()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_SalesReasons
        [Tutorial.LinqToEntities.FullWithViews.Sales_SalesReason](T1.[Sales_SalesReason.SalesReasonId], T1.[Sales_SalesReason.Name], T1.[Sales_SalesReason.ReasonType], T1.[Sales_SalesReason.ModifiedDate])
    FROM (
        SELECT 
            T.SalesReasonID AS [Sales_SalesReason.SalesReasonId], 
            T.Name AS [Sales_SalesReason.Name], 
            T.ReasonType AS [Sales_SalesReason.ReasonType], 
            T.ModifiedDate AS [Sales_SalesReason.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_SalesReason AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_AddressTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView128()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_AddressTypes
        [Tutorial.LinqToEntities.FullWithViews.Person_AddressType](T1.[Person_AddressType.AddressTypeId], T1.[Person_AddressType.Name], T1.[Person_AddressType.Rowguid], T1.[Person_AddressType.ModifiedDate])
    FROM (
        SELECT 
            T.AddressTypeID AS [Person_AddressType.AddressTypeId], 
            T.Name AS [Person_AddressType.Name], 
            T.rowguid AS [Person_AddressType.Rowguid], 
            T.ModifiedDate AS [Person_AddressType.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_AddressType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_BusinessEntityContacts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView129()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_BusinessEntityContacts
        [Tutorial.LinqToEntities.FullWithViews.Person_BusinessEntityContact](T1.[Person_BusinessEntityContact.BusinessEntityId], T1.[Person_BusinessEntityContact.PersonId], T1.[Person_BusinessEntityContact.ContactTypeId], T1.[Person_BusinessEntityContact.Rowguid], T1.[Person_BusinessEntityContact.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_BusinessEntityContact.BusinessEntityId], 
            T.PersonID AS [Person_BusinessEntityContact.PersonId], 
            T.ContactTypeID AS [Person_BusinessEntityContact.ContactTypeId], 
            T.rowguid AS [Person_BusinessEntityContact.Rowguid], 
            T.ModifiedDate AS [Person_BusinessEntityContact.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_BusinessEntityContact AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_ContactTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView130()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_ContactTypes
        [Tutorial.LinqToEntities.FullWithViews.Person_ContactType](T1.[Person_ContactType.ContactTypeId], T1.[Person_ContactType.Name], T1.[Person_ContactType.ModifiedDate])
    FROM (
        SELECT 
            T.ContactTypeID AS [Person_ContactType.ContactTypeId], 
            T.Name AS [Person_ContactType.Name], 
            T.ModifiedDate AS [Person_ContactType.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_ContactType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_EmailAddresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView131()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_EmailAddresses
        [Tutorial.LinqToEntities.FullWithViews.Person_EmailAddress](T1.[Person_EmailAddress.BusinessEntityId], T1.[Person_EmailAddress.EmailAddressId], T1.[Person_EmailAddress.EmailAddress], T1.[Person_EmailAddress.Rowguid], T1.[Person_EmailAddress.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_EmailAddress.BusinessEntityId], 
            T.EmailAddressID AS [Person_EmailAddress.EmailAddressId], 
            T.EmailAddress AS [Person_EmailAddress.EmailAddress], 
            T.rowguid AS [Person_EmailAddress.Rowguid], 
            T.ModifiedDate AS [Person_EmailAddress.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_EmailAddress AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_Passwords.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView132()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_Passwords
        [Tutorial.LinqToEntities.FullWithViews.Person_Password](T1.[Person_Password.BusinessEntityId], T1.[Person_Password.PasswordHash], T1.[Person_Password.PasswordSalt], T1.[Person_Password.Rowguid], T1.[Person_Password.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_Password.BusinessEntityId], 
            T.PasswordHash AS [Person_Password.PasswordHash], 
            T.PasswordSalt AS [Person_Password.PasswordSalt], 
            T.rowguid AS [Person_Password.Rowguid], 
            T.ModifiedDate AS [Person_Password.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_Password AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_PersonPhones.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView133()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_PersonPhones
        [Tutorial.LinqToEntities.FullWithViews.Person_PersonPhone](T1.[Person_PersonPhone.BusinessEntityId], T1.[Person_PersonPhone.PhoneNumber], T1.[Person_PersonPhone.PhoneNumberTypeId], T1.[Person_PersonPhone.ModifiedDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_PersonPhone.BusinessEntityId], 
            T.PhoneNumber AS [Person_PersonPhone.PhoneNumber], 
            T.PhoneNumberTypeID AS [Person_PersonPhone.PhoneNumberTypeId], 
            T.ModifiedDate AS [Person_PersonPhone.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_PersonPhone AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_PhoneNumberTypes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView134()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_PhoneNumberTypes
        [Tutorial.LinqToEntities.FullWithViews.Person_PhoneNumberType](T1.[Person_PhoneNumberType.PhoneNumberTypeId], T1.[Person_PhoneNumberType.Name], T1.[Person_PhoneNumberType.ModifiedDate])
    FROM (
        SELECT 
            T.PhoneNumberTypeID AS [Person_PhoneNumberType.PhoneNumberTypeId], 
            T.Name AS [Person_PhoneNumberType.Name], 
            T.ModifiedDate AS [Person_PhoneNumberType.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Person_PhoneNumberType AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_Shifts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView135()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_Shifts
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_Shift](T1.[HumanResources_Shift.ShiftId], T1.[HumanResources_Shift.Name], T1.[HumanResources_Shift.StartTime], T1.[HumanResources_Shift.EndTime], T1.[HumanResources_Shift.ModifiedDate])
    FROM (
        SELECT 
            T.ShiftID AS [HumanResources_Shift.ShiftId], 
            T.Name AS [HumanResources_Shift.Name], 
            T.StartTime AS [HumanResources_Shift.StartTime], 
            T.EndTime AS [HumanResources_Shift.EndTime], 
            T.ModifiedDate AS [HumanResources_Shift.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_Shift AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_VEmployeeDepartmentHistory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView136()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VEmployeeDepartmentHistory
        [CodeFirstDatabaseSchema.HumanResources_VEmployeeDepartmentHistory](T1.[HumanResources_VEmployeeDepartmentHistory.BusinessEntityID], T1.[HumanResources_VEmployeeDepartmentHistory.FirstName], T1.[HumanResources_VEmployeeDepartmentHistory.LastName], T1.[HumanResources_VEmployeeDepartmentHistory.Shift], T1.[HumanResources_VEmployeeDepartmentHistory.Department], T1.[HumanResources_VEmployeeDepartmentHistory.GroupName], T1.[HumanResources_VEmployeeDepartmentHistory.StartDate], T1.[HumanResources_VEmployeeDepartmentHistory.Title], T1.[HumanResources_VEmployeeDepartmentHistory.MiddleName], T1.[HumanResources_VEmployeeDepartmentHistory.Suffix], T1.[HumanResources_VEmployeeDepartmentHistory.EndDate])
    FROM (
        SELECT 
            T.BusinessEntityId AS [HumanResources_VEmployeeDepartmentHistory.BusinessEntityID], 
            T.FirstName AS [HumanResources_VEmployeeDepartmentHistory.FirstName], 
            T.LastName AS [HumanResources_VEmployeeDepartmentHistory.LastName], 
            T.Shift AS [HumanResources_VEmployeeDepartmentHistory.Shift], 
            T.Department AS [HumanResources_VEmployeeDepartmentHistory.Department], 
            T.GroupName AS [HumanResources_VEmployeeDepartmentHistory.GroupName], 
            T.StartDate AS [HumanResources_VEmployeeDepartmentHistory.StartDate], 
            T.Title AS [HumanResources_VEmployeeDepartmentHistory.Title], 
            T.MiddleName AS [HumanResources_VEmployeeDepartmentHistory.MiddleName], 
            T.Suffix AS [HumanResources_VEmployeeDepartmentHistory.Suffix], 
            T.EndDate AS [HumanResources_VEmployeeDepartmentHistory.EndDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_VEmployeeDepartmentHistories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_VEmployeeDepartmentHistories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView137()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VEmployeeDepartmentHistories
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_VEmployeeDepartmentHistory](T1.[HumanResources_VEmployeeDepartmentHistory.BusinessEntityId], T1.[HumanResources_VEmployeeDepartmentHistory.FirstName], T1.[HumanResources_VEmployeeDepartmentHistory.LastName], T1.[HumanResources_VEmployeeDepartmentHistory.Shift], T1.[HumanResources_VEmployeeDepartmentHistory.Department], T1.[HumanResources_VEmployeeDepartmentHistory.GroupName], T1.[HumanResources_VEmployeeDepartmentHistory.StartDate], T1.[HumanResources_VEmployeeDepartmentHistory.Title], T1.[HumanResources_VEmployeeDepartmentHistory.MiddleName], T1.[HumanResources_VEmployeeDepartmentHistory.Suffix], T1.[HumanResources_VEmployeeDepartmentHistory.EndDate])
    FROM (
        SELECT 
            T.BusinessEntityID AS [HumanResources_VEmployeeDepartmentHistory.BusinessEntityId], 
            T.FirstName AS [HumanResources_VEmployeeDepartmentHistory.FirstName], 
            T.LastName AS [HumanResources_VEmployeeDepartmentHistory.LastName], 
            T.Shift AS [HumanResources_VEmployeeDepartmentHistory.Shift], 
            T.Department AS [HumanResources_VEmployeeDepartmentHistory.Department], 
            T.GroupName AS [HumanResources_VEmployeeDepartmentHistory.GroupName], 
            T.StartDate AS [HumanResources_VEmployeeDepartmentHistory.StartDate], 
            T.Title AS [HumanResources_VEmployeeDepartmentHistory.Title], 
            T.MiddleName AS [HumanResources_VEmployeeDepartmentHistory.MiddleName], 
            T.Suffix AS [HumanResources_VEmployeeDepartmentHistory.Suffix], 
            T.EndDate AS [HumanResources_VEmployeeDepartmentHistory.EndDate], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_VEmployeeDepartmentHistory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_VEmployeeDepartment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView138()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VEmployeeDepartment
        [CodeFirstDatabaseSchema.HumanResources_VEmployeeDepartment](T1.[HumanResources_VEmployeeDepartment.BusinessEntityID], T1.[HumanResources_VEmployeeDepartment.FirstName], T1.[HumanResources_VEmployeeDepartment.LastName], T1.[HumanResources_VEmployeeDepartment.JobTitle], T1.[HumanResources_VEmployeeDepartment.Department], T1.[HumanResources_VEmployeeDepartment.GroupName], T1.[HumanResources_VEmployeeDepartment.StartDate], T1.[HumanResources_VEmployeeDepartment.Title], T1.[HumanResources_VEmployeeDepartment.MiddleName], T1.[HumanResources_VEmployeeDepartment.Suffix])
    FROM (
        SELECT 
            T.BusinessEntityId AS [HumanResources_VEmployeeDepartment.BusinessEntityID], 
            T.FirstName AS [HumanResources_VEmployeeDepartment.FirstName], 
            T.LastName AS [HumanResources_VEmployeeDepartment.LastName], 
            T.JobTitle AS [HumanResources_VEmployeeDepartment.JobTitle], 
            T.Department AS [HumanResources_VEmployeeDepartment.Department], 
            T.GroupName AS [HumanResources_VEmployeeDepartment.GroupName], 
            T.StartDate AS [HumanResources_VEmployeeDepartment.StartDate], 
            T.Title AS [HumanResources_VEmployeeDepartment.Title], 
            T.MiddleName AS [HumanResources_VEmployeeDepartment.MiddleName], 
            T.Suffix AS [HumanResources_VEmployeeDepartment.Suffix], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_VEmployeeDepartments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_VEmployeeDepartments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView139()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VEmployeeDepartments
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_VEmployeeDepartment](T1.[HumanResources_VEmployeeDepartment.BusinessEntityId], T1.[HumanResources_VEmployeeDepartment.FirstName], T1.[HumanResources_VEmployeeDepartment.LastName], T1.[HumanResources_VEmployeeDepartment.JobTitle], T1.[HumanResources_VEmployeeDepartment.Department], T1.[HumanResources_VEmployeeDepartment.GroupName], T1.[HumanResources_VEmployeeDepartment.StartDate], T1.[HumanResources_VEmployeeDepartment.Title], T1.[HumanResources_VEmployeeDepartment.MiddleName], T1.[HumanResources_VEmployeeDepartment.Suffix])
    FROM (
        SELECT 
            T.BusinessEntityID AS [HumanResources_VEmployeeDepartment.BusinessEntityId], 
            T.FirstName AS [HumanResources_VEmployeeDepartment.FirstName], 
            T.LastName AS [HumanResources_VEmployeeDepartment.LastName], 
            T.JobTitle AS [HumanResources_VEmployeeDepartment.JobTitle], 
            T.Department AS [HumanResources_VEmployeeDepartment.Department], 
            T.GroupName AS [HumanResources_VEmployeeDepartment.GroupName], 
            T.StartDate AS [HumanResources_VEmployeeDepartment.StartDate], 
            T.Title AS [HumanResources_VEmployeeDepartment.Title], 
            T.MiddleName AS [HumanResources_VEmployeeDepartment.MiddleName], 
            T.Suffix AS [HumanResources_VEmployeeDepartment.Suffix], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_VEmployeeDepartment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_VEmployee.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView140()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VEmployee
        [CodeFirstDatabaseSchema.HumanResources_VEmployee](T1.[HumanResources_VEmployee.BusinessEntityID], T1.[HumanResources_VEmployee.FirstName], T1.[HumanResources_VEmployee.LastName], T1.[HumanResources_VEmployee.JobTitle], T1.[HumanResources_VEmployee.EmailPromotion], T1.[HumanResources_VEmployee.AddressLine1], T1.[HumanResources_VEmployee.City], T1.[HumanResources_VEmployee.StateProvinceName], T1.[HumanResources_VEmployee.PostalCode], T1.[HumanResources_VEmployee.CountryRegionName], T1.[HumanResources_VEmployee.Title], T1.[HumanResources_VEmployee.MiddleName], T1.[HumanResources_VEmployee.Suffix], T1.[HumanResources_VEmployee.PhoneNumber], T1.[HumanResources_VEmployee.PhoneNumberType], T1.[HumanResources_VEmployee.EmailAddress], T1.[HumanResources_VEmployee.AddressLine2], T1.[HumanResources_VEmployee.AdditionalContactInfo])
    FROM (
        SELECT 
            T.BusinessEntityId AS [HumanResources_VEmployee.BusinessEntityID], 
            T.FirstName AS [HumanResources_VEmployee.FirstName], 
            T.LastName AS [HumanResources_VEmployee.LastName], 
            T.JobTitle AS [HumanResources_VEmployee.JobTitle], 
            T.EmailPromotion AS [HumanResources_VEmployee.EmailPromotion], 
            T.AddressLine1 AS [HumanResources_VEmployee.AddressLine1], 
            T.City AS [HumanResources_VEmployee.City], 
            T.StateProvinceName AS [HumanResources_VEmployee.StateProvinceName], 
            T.PostalCode AS [HumanResources_VEmployee.PostalCode], 
            T.CountryRegionName AS [HumanResources_VEmployee.CountryRegionName], 
            T.Title AS [HumanResources_VEmployee.Title], 
            T.MiddleName AS [HumanResources_VEmployee.MiddleName], 
            T.Suffix AS [HumanResources_VEmployee.Suffix], 
            T.PhoneNumber AS [HumanResources_VEmployee.PhoneNumber], 
            T.PhoneNumberType AS [HumanResources_VEmployee.PhoneNumberType], 
            T.EmailAddress AS [HumanResources_VEmployee.EmailAddress], 
            T.AddressLine2 AS [HumanResources_VEmployee.AddressLine2], 
            T.AdditionalContactInfo AS [HumanResources_VEmployee.AdditionalContactInfo], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_VEmployees AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_VEmployees.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView141()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VEmployees
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_VEmployee](T1.[HumanResources_VEmployee.BusinessEntityId], T1.[HumanResources_VEmployee.FirstName], T1.[HumanResources_VEmployee.LastName], T1.[HumanResources_VEmployee.JobTitle], T1.[HumanResources_VEmployee.EmailPromotion], T1.[HumanResources_VEmployee.AddressLine1], T1.[HumanResources_VEmployee.City], T1.[HumanResources_VEmployee.StateProvinceName], T1.[HumanResources_VEmployee.PostalCode], T1.[HumanResources_VEmployee.CountryRegionName], T1.[HumanResources_VEmployee.Title], T1.[HumanResources_VEmployee.MiddleName], T1.[HumanResources_VEmployee.Suffix], T1.[HumanResources_VEmployee.PhoneNumber], T1.[HumanResources_VEmployee.PhoneNumberType], T1.[HumanResources_VEmployee.EmailAddress], T1.[HumanResources_VEmployee.AddressLine2], T1.[HumanResources_VEmployee.AdditionalContactInfo])
    FROM (
        SELECT 
            T.BusinessEntityID AS [HumanResources_VEmployee.BusinessEntityId], 
            T.FirstName AS [HumanResources_VEmployee.FirstName], 
            T.LastName AS [HumanResources_VEmployee.LastName], 
            T.JobTitle AS [HumanResources_VEmployee.JobTitle], 
            T.EmailPromotion AS [HumanResources_VEmployee.EmailPromotion], 
            T.AddressLine1 AS [HumanResources_VEmployee.AddressLine1], 
            T.City AS [HumanResources_VEmployee.City], 
            T.StateProvinceName AS [HumanResources_VEmployee.StateProvinceName], 
            T.PostalCode AS [HumanResources_VEmployee.PostalCode], 
            T.CountryRegionName AS [HumanResources_VEmployee.CountryRegionName], 
            T.Title AS [HumanResources_VEmployee.Title], 
            T.MiddleName AS [HumanResources_VEmployee.MiddleName], 
            T.Suffix AS [HumanResources_VEmployee.Suffix], 
            T.PhoneNumber AS [HumanResources_VEmployee.PhoneNumber], 
            T.PhoneNumberType AS [HumanResources_VEmployee.PhoneNumberType], 
            T.EmailAddress AS [HumanResources_VEmployee.EmailAddress], 
            T.AddressLine2 AS [HumanResources_VEmployee.AddressLine2], 
            T.AdditionalContactInfo AS [HumanResources_VEmployee.AdditionalContactInfo], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_VEmployee AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_VJobCandidateEducation.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView142()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VJobCandidateEducation
        [CodeFirstDatabaseSchema.HumanResources_VJobCandidateEducation](T1.[HumanResources_VJobCandidateEducation.JobCandidateID], T1.[HumanResources_VJobCandidateEducation.Edu.Level], T1.[HumanResources_VJobCandidateEducation.Edu.StartDate], T1.[HumanResources_VJobCandidateEducation.Edu.EndDate], T1.[HumanResources_VJobCandidateEducation.Edu.Degree], T1.[HumanResources_VJobCandidateEducation.Edu.Major], T1.[HumanResources_VJobCandidateEducation.Edu.Minor], T1.[HumanResources_VJobCandidateEducation.Edu.GPA], T1.[HumanResources_VJobCandidateEducation.Edu.GPAScale], T1.[HumanResources_VJobCandidateEducation.Edu.School], T1.[HumanResources_VJobCandidateEducation.Edu.Loc.CountryRegion], T1.[HumanResources_VJobCandidateEducation.Edu.Loc.State], T1.[HumanResources_VJobCandidateEducation.Edu.Loc.City])
    FROM (
        SELECT 
            T.JobCandidateId AS [HumanResources_VJobCandidateEducation.JobCandidateID], 
            T.Edu46Level AS [HumanResources_VJobCandidateEducation.Edu.Level], 
            T.Edu46StartDate AS [HumanResources_VJobCandidateEducation.Edu.StartDate], 
            T.Edu46EndDate AS [HumanResources_VJobCandidateEducation.Edu.EndDate], 
            T.Edu46Degree AS [HumanResources_VJobCandidateEducation.Edu.Degree], 
            T.Edu46Major AS [HumanResources_VJobCandidateEducation.Edu.Major], 
            T.Edu46Minor AS [HumanResources_VJobCandidateEducation.Edu.Minor], 
            T.Edu46Gpa AS [HumanResources_VJobCandidateEducation.Edu.GPA], 
            T.Edu46GpaScale AS [HumanResources_VJobCandidateEducation.Edu.GPAScale], 
            T.Edu46School AS [HumanResources_VJobCandidateEducation.Edu.School], 
            T.Edu46Loc46CountryRegion AS [HumanResources_VJobCandidateEducation.Edu.Loc.CountryRegion], 
            T.Edu46Loc46State AS [HumanResources_VJobCandidateEducation.Edu.Loc.State], 
            T.Edu46Loc46City AS [HumanResources_VJobCandidateEducation.Edu.Loc.City], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_VJobCandidateEducations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_VJobCandidateEducations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView143()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VJobCandidateEducations
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_VJobCandidateEducation](T1.[HumanResources_VJobCandidateEducation.JobCandidateId], T1.[HumanResources_VJobCandidateEducation.Edu46Level], T1.[HumanResources_VJobCandidateEducation.Edu46StartDate], T1.[HumanResources_VJobCandidateEducation.Edu46EndDate], T1.[HumanResources_VJobCandidateEducation.Edu46Degree], T1.[HumanResources_VJobCandidateEducation.Edu46Major], T1.[HumanResources_VJobCandidateEducation.Edu46Minor], T1.[HumanResources_VJobCandidateEducation.Edu46Gpa], T1.[HumanResources_VJobCandidateEducation.Edu46GpaScale], T1.[HumanResources_VJobCandidateEducation.Edu46School], T1.[HumanResources_VJobCandidateEducation.Edu46Loc46CountryRegion], T1.[HumanResources_VJobCandidateEducation.Edu46Loc46State], T1.[HumanResources_VJobCandidateEducation.Edu46Loc46City])
    FROM (
        SELECT 
            T.JobCandidateID AS [HumanResources_VJobCandidateEducation.JobCandidateId], 
            T.[Edu.Level] AS [HumanResources_VJobCandidateEducation.Edu46Level], 
            T.[Edu.StartDate] AS [HumanResources_VJobCandidateEducation.Edu46StartDate], 
            T.[Edu.EndDate] AS [HumanResources_VJobCandidateEducation.Edu46EndDate], 
            T.[Edu.Degree] AS [HumanResources_VJobCandidateEducation.Edu46Degree], 
            T.[Edu.Major] AS [HumanResources_VJobCandidateEducation.Edu46Major], 
            T.[Edu.Minor] AS [HumanResources_VJobCandidateEducation.Edu46Minor], 
            T.[Edu.GPA] AS [HumanResources_VJobCandidateEducation.Edu46Gpa], 
            T.[Edu.GPAScale] AS [HumanResources_VJobCandidateEducation.Edu46GpaScale], 
            T.[Edu.School] AS [HumanResources_VJobCandidateEducation.Edu46School], 
            T.[Edu.Loc.CountryRegion] AS [HumanResources_VJobCandidateEducation.Edu46Loc46CountryRegion], 
            T.[Edu.Loc.State] AS [HumanResources_VJobCandidateEducation.Edu46Loc46State], 
            T.[Edu.Loc.City] AS [HumanResources_VJobCandidateEducation.Edu46Loc46City], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_VJobCandidateEducation AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_VJobCandidateEmployment.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView144()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VJobCandidateEmployment
        [CodeFirstDatabaseSchema.HumanResources_VJobCandidateEmployment](T1.[HumanResources_VJobCandidateEmployment.JobCandidateID], T1.[HumanResources_VJobCandidateEmployment.Emp.StartDate], T1.[HumanResources_VJobCandidateEmployment.Emp.EndDate], T1.[HumanResources_VJobCandidateEmployment.Emp.OrgName], T1.[HumanResources_VJobCandidateEmployment.Emp.JobTitle], T1.[HumanResources_VJobCandidateEmployment.Emp.Responsibility], T1.[HumanResources_VJobCandidateEmployment.Emp.FunctionCategory], T1.[HumanResources_VJobCandidateEmployment.Emp.IndustryCategory], T1.[HumanResources_VJobCandidateEmployment.Emp.Loc.CountryRegion], T1.[HumanResources_VJobCandidateEmployment.Emp.Loc.State], T1.[HumanResources_VJobCandidateEmployment.Emp.Loc.City])
    FROM (
        SELECT 
            T.JobCandidateId AS [HumanResources_VJobCandidateEmployment.JobCandidateID], 
            T.Emp46StartDate AS [HumanResources_VJobCandidateEmployment.Emp.StartDate], 
            T.Emp46EndDate AS [HumanResources_VJobCandidateEmployment.Emp.EndDate], 
            T.Emp46OrgName AS [HumanResources_VJobCandidateEmployment.Emp.OrgName], 
            T.Emp46JobTitle AS [HumanResources_VJobCandidateEmployment.Emp.JobTitle], 
            T.Emp46Responsibility AS [HumanResources_VJobCandidateEmployment.Emp.Responsibility], 
            T.Emp46FunctionCategory AS [HumanResources_VJobCandidateEmployment.Emp.FunctionCategory], 
            T.Emp46IndustryCategory AS [HumanResources_VJobCandidateEmployment.Emp.IndustryCategory], 
            T.Emp46Loc46CountryRegion AS [HumanResources_VJobCandidateEmployment.Emp.Loc.CountryRegion], 
            T.Emp46Loc46State AS [HumanResources_VJobCandidateEmployment.Emp.Loc.State], 
            T.Emp46Loc46City AS [HumanResources_VJobCandidateEmployment.Emp.Loc.City], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_VJobCandidateEmployments AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_VJobCandidateEmployments.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView145()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VJobCandidateEmployments
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_VJobCandidateEmployment](T1.[HumanResources_VJobCandidateEmployment.JobCandidateId], T1.[HumanResources_VJobCandidateEmployment.Emp46StartDate], T1.[HumanResources_VJobCandidateEmployment.Emp46EndDate], T1.[HumanResources_VJobCandidateEmployment.Emp46OrgName], T1.[HumanResources_VJobCandidateEmployment.Emp46JobTitle], T1.[HumanResources_VJobCandidateEmployment.Emp46Responsibility], T1.[HumanResources_VJobCandidateEmployment.Emp46FunctionCategory], T1.[HumanResources_VJobCandidateEmployment.Emp46IndustryCategory], T1.[HumanResources_VJobCandidateEmployment.Emp46Loc46CountryRegion], T1.[HumanResources_VJobCandidateEmployment.Emp46Loc46State], T1.[HumanResources_VJobCandidateEmployment.Emp46Loc46City])
    FROM (
        SELECT 
            T.JobCandidateID AS [HumanResources_VJobCandidateEmployment.JobCandidateId], 
            T.[Emp.StartDate] AS [HumanResources_VJobCandidateEmployment.Emp46StartDate], 
            T.[Emp.EndDate] AS [HumanResources_VJobCandidateEmployment.Emp46EndDate], 
            T.[Emp.OrgName] AS [HumanResources_VJobCandidateEmployment.Emp46OrgName], 
            T.[Emp.JobTitle] AS [HumanResources_VJobCandidateEmployment.Emp46JobTitle], 
            T.[Emp.Responsibility] AS [HumanResources_VJobCandidateEmployment.Emp46Responsibility], 
            T.[Emp.FunctionCategory] AS [HumanResources_VJobCandidateEmployment.Emp46FunctionCategory], 
            T.[Emp.IndustryCategory] AS [HumanResources_VJobCandidateEmployment.Emp46IndustryCategory], 
            T.[Emp.Loc.CountryRegion] AS [HumanResources_VJobCandidateEmployment.Emp46Loc46CountryRegion], 
            T.[Emp.Loc.State] AS [HumanResources_VJobCandidateEmployment.Emp46Loc46State], 
            T.[Emp.Loc.City] AS [HumanResources_VJobCandidateEmployment.Emp46Loc46City], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_VJobCandidateEmployment AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.HumanResources_VJobCandidate.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView146()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VJobCandidate
        [CodeFirstDatabaseSchema.HumanResources_VJobCandidate](T1.[HumanResources_VJobCandidate.JobCandidateID], T1.[HumanResources_VJobCandidate.ModifiedDate], T1.[HumanResources_VJobCandidate.BusinessEntityID], T1.[HumanResources_VJobCandidate.Name.Prefix], T1.[HumanResources_VJobCandidate.Name.First], T1.[HumanResources_VJobCandidate.Name.Middle], T1.[HumanResources_VJobCandidate.Name.Last], T1.[HumanResources_VJobCandidate.Name.Suffix], T1.[HumanResources_VJobCandidate.Skills], T1.[HumanResources_VJobCandidate.Addr.Type], T1.[HumanResources_VJobCandidate.Addr.Loc.CountryRegion], T1.[HumanResources_VJobCandidate.Addr.Loc.State], T1.[HumanResources_VJobCandidate.Addr.Loc.City], T1.[HumanResources_VJobCandidate.Addr.PostalCode], T1.[HumanResources_VJobCandidate.EMail], T1.[HumanResources_VJobCandidate.WebSite])
    FROM (
        SELECT 
            T.JobCandidateId AS [HumanResources_VJobCandidate.JobCandidateID], 
            T.ModifiedDate AS [HumanResources_VJobCandidate.ModifiedDate], 
            T.BusinessEntityId AS [HumanResources_VJobCandidate.BusinessEntityID], 
            T.Name46Prefix AS [HumanResources_VJobCandidate.Name.Prefix], 
            T.Name46First AS [HumanResources_VJobCandidate.Name.First], 
            T.Name46Middle AS [HumanResources_VJobCandidate.Name.Middle], 
            T.Name46Last AS [HumanResources_VJobCandidate.Name.Last], 
            T.Name46Suffix AS [HumanResources_VJobCandidate.Name.Suffix], 
            T.Skills AS [HumanResources_VJobCandidate.Skills], 
            T.Addr46Type AS [HumanResources_VJobCandidate.Addr.Type], 
            T.Addr46Loc46CountryRegion AS [HumanResources_VJobCandidate.Addr.Loc.CountryRegion], 
            T.Addr46Loc46State AS [HumanResources_VJobCandidate.Addr.Loc.State], 
            T.Addr46Loc46City AS [HumanResources_VJobCandidate.Addr.Loc.City], 
            T.Addr46PostalCode AS [HumanResources_VJobCandidate.Addr.PostalCode], 
            T.EMail AS [HumanResources_VJobCandidate.EMail], 
            T.WebSite AS [HumanResources_VJobCandidate.WebSite], 
            True AS _from0
        FROM FullAdventureWorksWithViews.HumanResources_VJobCandidates AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.HumanResources_VJobCandidates.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView147()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HumanResources_VJobCandidates
        [Tutorial.LinqToEntities.FullWithViews.HumanResources_VJobCandidate](T1.[HumanResources_VJobCandidate.JobCandidateId], T1.[HumanResources_VJobCandidate.ModifiedDate], T1.[HumanResources_VJobCandidate.BusinessEntityId], T1.[HumanResources_VJobCandidate.Name46Prefix], T1.[HumanResources_VJobCandidate.Name46First], T1.[HumanResources_VJobCandidate.Name46Middle], T1.[HumanResources_VJobCandidate.Name46Last], T1.[HumanResources_VJobCandidate.Name46Suffix], T1.[HumanResources_VJobCandidate.Skills], T1.[HumanResources_VJobCandidate.Addr46Type], T1.[HumanResources_VJobCandidate.Addr46Loc46CountryRegion], T1.[HumanResources_VJobCandidate.Addr46Loc46State], T1.[HumanResources_VJobCandidate.Addr46Loc46City], T1.[HumanResources_VJobCandidate.Addr46PostalCode], T1.[HumanResources_VJobCandidate.EMail], T1.[HumanResources_VJobCandidate.WebSite])
    FROM (
        SELECT 
            T.JobCandidateID AS [HumanResources_VJobCandidate.JobCandidateId], 
            T.ModifiedDate AS [HumanResources_VJobCandidate.ModifiedDate], 
            T.BusinessEntityID AS [HumanResources_VJobCandidate.BusinessEntityId], 
            T.[Name.Prefix] AS [HumanResources_VJobCandidate.Name46Prefix], 
            T.[Name.First] AS [HumanResources_VJobCandidate.Name46First], 
            T.[Name.Middle] AS [HumanResources_VJobCandidate.Name46Middle], 
            T.[Name.Last] AS [HumanResources_VJobCandidate.Name46Last], 
            T.[Name.Suffix] AS [HumanResources_VJobCandidate.Name46Suffix], 
            T.Skills AS [HumanResources_VJobCandidate.Skills], 
            T.[Addr.Type] AS [HumanResources_VJobCandidate.Addr46Type], 
            T.[Addr.Loc.CountryRegion] AS [HumanResources_VJobCandidate.Addr46Loc46CountryRegion], 
            T.[Addr.Loc.State] AS [HumanResources_VJobCandidate.Addr46Loc46State], 
            T.[Addr.Loc.City] AS [HumanResources_VJobCandidate.Addr46Loc46City], 
            T.[Addr.PostalCode] AS [HumanResources_VJobCandidate.Addr46PostalCode], 
            T.EMail AS [HumanResources_VJobCandidate.EMail], 
            T.WebSite AS [HumanResources_VJobCandidate.WebSite], 
            True AS _from0
        FROM CodeFirstDatabase.HumanResources_VJobCandidate AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_VAdditionalContactInfo.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView148()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_VAdditionalContactInfo
        [CodeFirstDatabaseSchema.Person_VAdditionalContactInfo](T1.[Person_VAdditionalContactInfo.BusinessEntityID], T1.[Person_VAdditionalContactInfo.FirstName], T1.[Person_VAdditionalContactInfo.LastName], T1.[Person_VAdditionalContactInfo.rowguid], T1.[Person_VAdditionalContactInfo.ModifiedDate], T1.[Person_VAdditionalContactInfo.MiddleName], T1.[Person_VAdditionalContactInfo.TelephoneNumber], T1.[Person_VAdditionalContactInfo.TelephoneSpecialInstructions], T1.[Person_VAdditionalContactInfo.Street], T1.[Person_VAdditionalContactInfo.City], T1.[Person_VAdditionalContactInfo.StateProvince], T1.[Person_VAdditionalContactInfo.PostalCode], T1.[Person_VAdditionalContactInfo.CountryRegion], T1.[Person_VAdditionalContactInfo.HomeAddressSpecialInstructions], T1.[Person_VAdditionalContactInfo.EMailAddress], T1.[Person_VAdditionalContactInfo.EMailSpecialInstructions], T1.[Person_VAdditionalContactInfo.EMailTelephoneNumber])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Person_VAdditionalContactInfo.BusinessEntityID], 
            T.FirstName AS [Person_VAdditionalContactInfo.FirstName], 
            T.LastName AS [Person_VAdditionalContactInfo.LastName], 
            T.Rowguid AS [Person_VAdditionalContactInfo.rowguid], 
            T.ModifiedDate AS [Person_VAdditionalContactInfo.ModifiedDate], 
            T.MiddleName AS [Person_VAdditionalContactInfo.MiddleName], 
            T.TelephoneNumber AS [Person_VAdditionalContactInfo.TelephoneNumber], 
            T.TelephoneSpecialInstructions AS [Person_VAdditionalContactInfo.TelephoneSpecialInstructions], 
            T.Street AS [Person_VAdditionalContactInfo.Street], 
            T.City AS [Person_VAdditionalContactInfo.City], 
            T.StateProvince AS [Person_VAdditionalContactInfo.StateProvince], 
            T.PostalCode AS [Person_VAdditionalContactInfo.PostalCode], 
            T.CountryRegion AS [Person_VAdditionalContactInfo.CountryRegion], 
            T.HomeAddressSpecialInstructions AS [Person_VAdditionalContactInfo.HomeAddressSpecialInstructions], 
            T.EMailAddress AS [Person_VAdditionalContactInfo.EMailAddress], 
            T.EMailSpecialInstructions AS [Person_VAdditionalContactInfo.EMailSpecialInstructions], 
            T.EMailTelephoneNumber AS [Person_VAdditionalContactInfo.EMailTelephoneNumber], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_VAdditionalContactInfoes AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_VAdditionalContactInfoes.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView149()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_VAdditionalContactInfoes
        [Tutorial.LinqToEntities.FullWithViews.Person_VAdditionalContactInfo](T1.[Person_VAdditionalContactInfo.BusinessEntityId], T1.[Person_VAdditionalContactInfo.FirstName], T1.[Person_VAdditionalContactInfo.LastName], T1.[Person_VAdditionalContactInfo.Rowguid], T1.[Person_VAdditionalContactInfo.ModifiedDate], T1.[Person_VAdditionalContactInfo.MiddleName], T1.[Person_VAdditionalContactInfo.TelephoneNumber], T1.[Person_VAdditionalContactInfo.TelephoneSpecialInstructions], T1.[Person_VAdditionalContactInfo.Street], T1.[Person_VAdditionalContactInfo.City], T1.[Person_VAdditionalContactInfo.StateProvince], T1.[Person_VAdditionalContactInfo.PostalCode], T1.[Person_VAdditionalContactInfo.CountryRegion], T1.[Person_VAdditionalContactInfo.HomeAddressSpecialInstructions], T1.[Person_VAdditionalContactInfo.EMailAddress], T1.[Person_VAdditionalContactInfo.EMailSpecialInstructions], T1.[Person_VAdditionalContactInfo.EMailTelephoneNumber])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Person_VAdditionalContactInfo.BusinessEntityId], 
            T.FirstName AS [Person_VAdditionalContactInfo.FirstName], 
            T.LastName AS [Person_VAdditionalContactInfo.LastName], 
            T.rowguid AS [Person_VAdditionalContactInfo.Rowguid], 
            T.ModifiedDate AS [Person_VAdditionalContactInfo.ModifiedDate], 
            T.MiddleName AS [Person_VAdditionalContactInfo.MiddleName], 
            T.TelephoneNumber AS [Person_VAdditionalContactInfo.TelephoneNumber], 
            T.TelephoneSpecialInstructions AS [Person_VAdditionalContactInfo.TelephoneSpecialInstructions], 
            T.Street AS [Person_VAdditionalContactInfo.Street], 
            T.City AS [Person_VAdditionalContactInfo.City], 
            T.StateProvince AS [Person_VAdditionalContactInfo.StateProvince], 
            T.PostalCode AS [Person_VAdditionalContactInfo.PostalCode], 
            T.CountryRegion AS [Person_VAdditionalContactInfo.CountryRegion], 
            T.HomeAddressSpecialInstructions AS [Person_VAdditionalContactInfo.HomeAddressSpecialInstructions], 
            T.EMailAddress AS [Person_VAdditionalContactInfo.EMailAddress], 
            T.EMailSpecialInstructions AS [Person_VAdditionalContactInfo.EMailSpecialInstructions], 
            T.EMailTelephoneNumber AS [Person_VAdditionalContactInfo.EMailTelephoneNumber], 
            True AS _from0
        FROM CodeFirstDatabase.Person_VAdditionalContactInfo AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Person_VStateProvinceCountryRegion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView150()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_VStateProvinceCountryRegion
        [CodeFirstDatabaseSchema.Person_VStateProvinceCountryRegion](T1.[Person_VStateProvinceCountryRegion.StateProvinceID], T1.[Person_VStateProvinceCountryRegion.StateProvinceCode], T1.[Person_VStateProvinceCountryRegion.IsOnlyStateProvinceFlag], T1.[Person_VStateProvinceCountryRegion.StateProvinceName], T1.[Person_VStateProvinceCountryRegion.TerritoryID], T1.[Person_VStateProvinceCountryRegion.CountryRegionCode], T1.[Person_VStateProvinceCountryRegion.CountryRegionName])
    FROM (
        SELECT 
            T.StateProvinceId AS [Person_VStateProvinceCountryRegion.StateProvinceID], 
            T.StateProvinceCode AS [Person_VStateProvinceCountryRegion.StateProvinceCode], 
            T.IsOnlyStateProvinceFlag AS [Person_VStateProvinceCountryRegion.IsOnlyStateProvinceFlag], 
            T.StateProvinceName AS [Person_VStateProvinceCountryRegion.StateProvinceName], 
            T.TerritoryId AS [Person_VStateProvinceCountryRegion.TerritoryID], 
            T.CountryRegionCode AS [Person_VStateProvinceCountryRegion.CountryRegionCode], 
            T.CountryRegionName AS [Person_VStateProvinceCountryRegion.CountryRegionName], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Person_VStateProvinceCountryRegions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Person_VStateProvinceCountryRegions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView151()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Person_VStateProvinceCountryRegions
        [Tutorial.LinqToEntities.FullWithViews.Person_VStateProvinceCountryRegion](T1.[Person_VStateProvinceCountryRegion.StateProvinceId], T1.[Person_VStateProvinceCountryRegion.StateProvinceCode], T1.[Person_VStateProvinceCountryRegion.IsOnlyStateProvinceFlag], T1.[Person_VStateProvinceCountryRegion.StateProvinceName], T1.[Person_VStateProvinceCountryRegion.TerritoryId], T1.[Person_VStateProvinceCountryRegion.CountryRegionCode], T1.[Person_VStateProvinceCountryRegion.CountryRegionName])
    FROM (
        SELECT 
            T.StateProvinceID AS [Person_VStateProvinceCountryRegion.StateProvinceId], 
            T.StateProvinceCode AS [Person_VStateProvinceCountryRegion.StateProvinceCode], 
            T.IsOnlyStateProvinceFlag AS [Person_VStateProvinceCountryRegion.IsOnlyStateProvinceFlag], 
            T.StateProvinceName AS [Person_VStateProvinceCountryRegion.StateProvinceName], 
            T.TerritoryID AS [Person_VStateProvinceCountryRegion.TerritoryId], 
            T.CountryRegionCode AS [Person_VStateProvinceCountryRegion.CountryRegionCode], 
            T.CountryRegionName AS [Person_VStateProvinceCountryRegion.CountryRegionName], 
            True AS _from0
        FROM CodeFirstDatabase.Person_VStateProvinceCountryRegion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_TransactionHistoryArchive.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView152()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_TransactionHistoryArchive
        [CodeFirstDatabaseSchema.Production_TransactionHistoryArchive](T1.[Production_TransactionHistoryArchive.TransactionID], T1.[Production_TransactionHistoryArchive.ProductID], T1.[Production_TransactionHistoryArchive.ReferenceOrderID], T1.[Production_TransactionHistoryArchive.ReferenceOrderLineID], T1.[Production_TransactionHistoryArchive.TransactionDate], T1.[Production_TransactionHistoryArchive.TransactionType], T1.[Production_TransactionHistoryArchive.Quantity], T1.[Production_TransactionHistoryArchive.ActualCost], T1.[Production_TransactionHistoryArchive.ModifiedDate])
    FROM (
        SELECT 
            T.TransactionId AS [Production_TransactionHistoryArchive.TransactionID], 
            T.ProductId AS [Production_TransactionHistoryArchive.ProductID], 
            T.ReferenceOrderId AS [Production_TransactionHistoryArchive.ReferenceOrderID], 
            T.ReferenceOrderLineId AS [Production_TransactionHistoryArchive.ReferenceOrderLineID], 
            T.TransactionDate AS [Production_TransactionHistoryArchive.TransactionDate], 
            T.TransactionType AS [Production_TransactionHistoryArchive.TransactionType], 
            T.Quantity AS [Production_TransactionHistoryArchive.Quantity], 
            T.ActualCost AS [Production_TransactionHistoryArchive.ActualCost], 
            T.ModifiedDate AS [Production_TransactionHistoryArchive.ModifiedDate], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_TransactionHistoryArchives AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_TransactionHistoryArchives.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView153()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_TransactionHistoryArchives
        [Tutorial.LinqToEntities.FullWithViews.Production_TransactionHistoryArchive](T1.[Production_TransactionHistoryArchive.TransactionId], T1.[Production_TransactionHistoryArchive.ProductId], T1.[Production_TransactionHistoryArchive.ReferenceOrderId], T1.[Production_TransactionHistoryArchive.ReferenceOrderLineId], T1.[Production_TransactionHistoryArchive.TransactionDate], T1.[Production_TransactionHistoryArchive.TransactionType], T1.[Production_TransactionHistoryArchive.Quantity], T1.[Production_TransactionHistoryArchive.ActualCost], T1.[Production_TransactionHistoryArchive.ModifiedDate])
    FROM (
        SELECT 
            T.TransactionID AS [Production_TransactionHistoryArchive.TransactionId], 
            T.ProductID AS [Production_TransactionHistoryArchive.ProductId], 
            T.ReferenceOrderID AS [Production_TransactionHistoryArchive.ReferenceOrderId], 
            T.ReferenceOrderLineID AS [Production_TransactionHistoryArchive.ReferenceOrderLineId], 
            T.TransactionDate AS [Production_TransactionHistoryArchive.TransactionDate], 
            T.TransactionType AS [Production_TransactionHistoryArchive.TransactionType], 
            T.Quantity AS [Production_TransactionHistoryArchive.Quantity], 
            T.ActualCost AS [Production_TransactionHistoryArchive.ActualCost], 
            T.ModifiedDate AS [Production_TransactionHistoryArchive.ModifiedDate], 
            True AS _from0
        FROM CodeFirstDatabase.Production_TransactionHistoryArchive AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_VProductAndDescription.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView154()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_VProductAndDescription
        [CodeFirstDatabaseSchema.Production_VProductAndDescription](T1.[Production_VProductAndDescription.ProductID], T1.[Production_VProductAndDescription.Name], T1.[Production_VProductAndDescription.ProductModel], T1.[Production_VProductAndDescription.CultureID], T1.[Production_VProductAndDescription.Description])
    FROM (
        SELECT 
            T.ProductId AS [Production_VProductAndDescription.ProductID], 
            T.Name AS [Production_VProductAndDescription.Name], 
            T.ProductModel AS [Production_VProductAndDescription.ProductModel], 
            T.CultureId AS [Production_VProductAndDescription.CultureID], 
            T.Description AS [Production_VProductAndDescription.Description], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_VProductAndDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_VProductAndDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView155()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_VProductAndDescriptions
        [Tutorial.LinqToEntities.FullWithViews.Production_VProductAndDescription](T1.[Production_VProductAndDescription.ProductId], T1.[Production_VProductAndDescription.Name], T1.[Production_VProductAndDescription.ProductModel], T1.[Production_VProductAndDescription.CultureId], T1.[Production_VProductAndDescription.Description])
    FROM (
        SELECT 
            T.ProductID AS [Production_VProductAndDescription.ProductId], 
            T.Name AS [Production_VProductAndDescription.Name], 
            T.ProductModel AS [Production_VProductAndDescription.ProductModel], 
            T.CultureID AS [Production_VProductAndDescription.CultureId], 
            T.Description AS [Production_VProductAndDescription.Description], 
            True AS _from0
        FROM CodeFirstDatabase.Production_VProductAndDescription AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_VProductModelCatalogDescription.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView156()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_VProductModelCatalogDescription
        [CodeFirstDatabaseSchema.Production_VProductModelCatalogDescription](T1.[Production_VProductModelCatalogDescription.ProductModelID], T1.[Production_VProductModelCatalogDescription.Name], T1.[Production_VProductModelCatalogDescription.rowguid], T1.[Production_VProductModelCatalogDescription.ModifiedDate], T1.[Production_VProductModelCatalogDescription.Summary], T1.[Production_VProductModelCatalogDescription.Manufacturer], T1.[Production_VProductModelCatalogDescription.Copyright], T1.[Production_VProductModelCatalogDescription.ProductURL], T1.[Production_VProductModelCatalogDescription.WarrantyPeriod], T1.[Production_VProductModelCatalogDescription.WarrantyDescription], T1.[Production_VProductModelCatalogDescription.NoOfYears], T1.[Production_VProductModelCatalogDescription.MaintenanceDescription], T1.[Production_VProductModelCatalogDescription.Wheel], T1.[Production_VProductModelCatalogDescription.Saddle], T1.[Production_VProductModelCatalogDescription.Pedal], T1.[Production_VProductModelCatalogDescription.BikeFrame], T1.[Production_VProductModelCatalogDescription.Crankset], T1.[Production_VProductModelCatalogDescription.PictureAngle], T1.[Production_VProductModelCatalogDescription.PictureSize], T1.[Production_VProductModelCatalogDescription.ProductPhotoID], T1.[Production_VProductModelCatalogDescription.Material], T1.[Production_VProductModelCatalogDescription.Color], T1.[Production_VProductModelCatalogDescription.ProductLine], T1.[Production_VProductModelCatalogDescription.Style], T1.[Production_VProductModelCatalogDescription.RiderExperience])
    FROM (
        SELECT 
            T.ProductModelId AS [Production_VProductModelCatalogDescription.ProductModelID], 
            T.Name AS [Production_VProductModelCatalogDescription.Name], 
            T.Rowguid AS [Production_VProductModelCatalogDescription.rowguid], 
            T.ModifiedDate AS [Production_VProductModelCatalogDescription.ModifiedDate], 
            T.Summary AS [Production_VProductModelCatalogDescription.Summary], 
            T.Manufacturer AS [Production_VProductModelCatalogDescription.Manufacturer], 
            T.Copyright AS [Production_VProductModelCatalogDescription.Copyright], 
            T.ProductUrl AS [Production_VProductModelCatalogDescription.ProductURL], 
            T.WarrantyPeriod AS [Production_VProductModelCatalogDescription.WarrantyPeriod], 
            T.WarrantyDescription AS [Production_VProductModelCatalogDescription.WarrantyDescription], 
            T.NoOfYears AS [Production_VProductModelCatalogDescription.NoOfYears], 
            T.MaintenanceDescription AS [Production_VProductModelCatalogDescription.MaintenanceDescription], 
            T.Wheel AS [Production_VProductModelCatalogDescription.Wheel], 
            T.Saddle AS [Production_VProductModelCatalogDescription.Saddle], 
            T.Pedal AS [Production_VProductModelCatalogDescription.Pedal], 
            T.BikeFrame AS [Production_VProductModelCatalogDescription.BikeFrame], 
            T.Crankset AS [Production_VProductModelCatalogDescription.Crankset], 
            T.PictureAngle AS [Production_VProductModelCatalogDescription.PictureAngle], 
            T.PictureSize AS [Production_VProductModelCatalogDescription.PictureSize], 
            T.ProductPhotoId AS [Production_VProductModelCatalogDescription.ProductPhotoID], 
            T.Material AS [Production_VProductModelCatalogDescription.Material], 
            T.Color AS [Production_VProductModelCatalogDescription.Color], 
            T.ProductLine AS [Production_VProductModelCatalogDescription.ProductLine], 
            T.Style AS [Production_VProductModelCatalogDescription.Style], 
            T.RiderExperience AS [Production_VProductModelCatalogDescription.RiderExperience], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_VProductModelCatalogDescriptions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_VProductModelCatalogDescriptions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView157()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_VProductModelCatalogDescriptions
        [Tutorial.LinqToEntities.FullWithViews.Production_VProductModelCatalogDescription](T1.[Production_VProductModelCatalogDescription.ProductModelId], T1.[Production_VProductModelCatalogDescription.Name], T1.[Production_VProductModelCatalogDescription.Rowguid], T1.[Production_VProductModelCatalogDescription.ModifiedDate], T1.[Production_VProductModelCatalogDescription.Summary], T1.[Production_VProductModelCatalogDescription.Manufacturer], T1.[Production_VProductModelCatalogDescription.Copyright], T1.[Production_VProductModelCatalogDescription.ProductUrl], T1.[Production_VProductModelCatalogDescription.WarrantyPeriod], T1.[Production_VProductModelCatalogDescription.WarrantyDescription], T1.[Production_VProductModelCatalogDescription.NoOfYears], T1.[Production_VProductModelCatalogDescription.MaintenanceDescription], T1.[Production_VProductModelCatalogDescription.Wheel], T1.[Production_VProductModelCatalogDescription.Saddle], T1.[Production_VProductModelCatalogDescription.Pedal], T1.[Production_VProductModelCatalogDescription.BikeFrame], T1.[Production_VProductModelCatalogDescription.Crankset], T1.[Production_VProductModelCatalogDescription.PictureAngle], T1.[Production_VProductModelCatalogDescription.PictureSize], T1.[Production_VProductModelCatalogDescription.ProductPhotoId], T1.[Production_VProductModelCatalogDescription.Material], T1.[Production_VProductModelCatalogDescription.Color], T1.[Production_VProductModelCatalogDescription.ProductLine], T1.[Production_VProductModelCatalogDescription.Style], T1.[Production_VProductModelCatalogDescription.RiderExperience])
    FROM (
        SELECT 
            T.ProductModelID AS [Production_VProductModelCatalogDescription.ProductModelId], 
            T.Name AS [Production_VProductModelCatalogDescription.Name], 
            T.rowguid AS [Production_VProductModelCatalogDescription.Rowguid], 
            T.ModifiedDate AS [Production_VProductModelCatalogDescription.ModifiedDate], 
            T.Summary AS [Production_VProductModelCatalogDescription.Summary], 
            T.Manufacturer AS [Production_VProductModelCatalogDescription.Manufacturer], 
            T.Copyright AS [Production_VProductModelCatalogDescription.Copyright], 
            T.ProductURL AS [Production_VProductModelCatalogDescription.ProductUrl], 
            T.WarrantyPeriod AS [Production_VProductModelCatalogDescription.WarrantyPeriod], 
            T.WarrantyDescription AS [Production_VProductModelCatalogDescription.WarrantyDescription], 
            T.NoOfYears AS [Production_VProductModelCatalogDescription.NoOfYears], 
            T.MaintenanceDescription AS [Production_VProductModelCatalogDescription.MaintenanceDescription], 
            T.Wheel AS [Production_VProductModelCatalogDescription.Wheel], 
            T.Saddle AS [Production_VProductModelCatalogDescription.Saddle], 
            T.Pedal AS [Production_VProductModelCatalogDescription.Pedal], 
            T.BikeFrame AS [Production_VProductModelCatalogDescription.BikeFrame], 
            T.Crankset AS [Production_VProductModelCatalogDescription.Crankset], 
            T.PictureAngle AS [Production_VProductModelCatalogDescription.PictureAngle], 
            T.PictureSize AS [Production_VProductModelCatalogDescription.PictureSize], 
            T.ProductPhotoID AS [Production_VProductModelCatalogDescription.ProductPhotoId], 
            T.Material AS [Production_VProductModelCatalogDescription.Material], 
            T.Color AS [Production_VProductModelCatalogDescription.Color], 
            T.ProductLine AS [Production_VProductModelCatalogDescription.ProductLine], 
            T.Style AS [Production_VProductModelCatalogDescription.Style], 
            T.RiderExperience AS [Production_VProductModelCatalogDescription.RiderExperience], 
            True AS _from0
        FROM CodeFirstDatabase.Production_VProductModelCatalogDescription AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Production_VProductModelInstruction.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView158()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_VProductModelInstruction
        [CodeFirstDatabaseSchema.Production_VProductModelInstruction](T1.[Production_VProductModelInstruction.ProductModelID], T1.[Production_VProductModelInstruction.Name], T1.[Production_VProductModelInstruction.rowguid], T1.[Production_VProductModelInstruction.ModifiedDate], T1.[Production_VProductModelInstruction.Instructions], T1.[Production_VProductModelInstruction.LocationID], T1.[Production_VProductModelInstruction.SetupHours], T1.[Production_VProductModelInstruction.MachineHours], T1.[Production_VProductModelInstruction.LaborHours], T1.[Production_VProductModelInstruction.LotSize], T1.[Production_VProductModelInstruction.Step])
    FROM (
        SELECT 
            T.ProductModelId AS [Production_VProductModelInstruction.ProductModelID], 
            T.Name AS [Production_VProductModelInstruction.Name], 
            T.Rowguid AS [Production_VProductModelInstruction.rowguid], 
            T.ModifiedDate AS [Production_VProductModelInstruction.ModifiedDate], 
            T.Instructions AS [Production_VProductModelInstruction.Instructions], 
            T.LocationId AS [Production_VProductModelInstruction.LocationID], 
            T.SetupHours AS [Production_VProductModelInstruction.SetupHours], 
            T.MachineHours AS [Production_VProductModelInstruction.MachineHours], 
            T.LaborHours AS [Production_VProductModelInstruction.LaborHours], 
            T.LotSize AS [Production_VProductModelInstruction.LotSize], 
            T.Step AS [Production_VProductModelInstruction.Step], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Production_VProductModelInstructions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Production_VProductModelInstructions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView159()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Production_VProductModelInstructions
        [Tutorial.LinqToEntities.FullWithViews.Production_VProductModelInstruction](T1.[Production_VProductModelInstruction.ProductModelId], T1.[Production_VProductModelInstruction.Name], T1.[Production_VProductModelInstruction.Rowguid], T1.[Production_VProductModelInstruction.ModifiedDate], T1.[Production_VProductModelInstruction.Instructions], T1.[Production_VProductModelInstruction.LocationId], T1.[Production_VProductModelInstruction.SetupHours], T1.[Production_VProductModelInstruction.MachineHours], T1.[Production_VProductModelInstruction.LaborHours], T1.[Production_VProductModelInstruction.LotSize], T1.[Production_VProductModelInstruction.Step])
    FROM (
        SELECT 
            T.ProductModelID AS [Production_VProductModelInstruction.ProductModelId], 
            T.Name AS [Production_VProductModelInstruction.Name], 
            T.rowguid AS [Production_VProductModelInstruction.Rowguid], 
            T.ModifiedDate AS [Production_VProductModelInstruction.ModifiedDate], 
            T.Instructions AS [Production_VProductModelInstruction.Instructions], 
            T.LocationID AS [Production_VProductModelInstruction.LocationId], 
            T.SetupHours AS [Production_VProductModelInstruction.SetupHours], 
            T.MachineHours AS [Production_VProductModelInstruction.MachineHours], 
            T.LaborHours AS [Production_VProductModelInstruction.LaborHours], 
            T.LotSize AS [Production_VProductModelInstruction.LotSize], 
            T.Step AS [Production_VProductModelInstruction.Step], 
            True AS _from0
        FROM CodeFirstDatabase.Production_VProductModelInstruction AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Purchasing_VVendorWithAddress.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView160()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_VVendorWithAddress
        [CodeFirstDatabaseSchema.Purchasing_VVendorWithAddress](T1.[Purchasing_VVendorWithAddress.BusinessEntityID], T1.[Purchasing_VVendorWithAddress.Name], T1.[Purchasing_VVendorWithAddress.AddressType], T1.[Purchasing_VVendorWithAddress.AddressLine1], T1.[Purchasing_VVendorWithAddress.City], T1.[Purchasing_VVendorWithAddress.StateProvinceName], T1.[Purchasing_VVendorWithAddress.PostalCode], T1.[Purchasing_VVendorWithAddress.CountryRegionName], T1.[Purchasing_VVendorWithAddress.AddressLine2])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Purchasing_VVendorWithAddress.BusinessEntityID], 
            T.Name AS [Purchasing_VVendorWithAddress.Name], 
            T.AddressType AS [Purchasing_VVendorWithAddress.AddressType], 
            T.AddressLine1 AS [Purchasing_VVendorWithAddress.AddressLine1], 
            T.City AS [Purchasing_VVendorWithAddress.City], 
            T.StateProvinceName AS [Purchasing_VVendorWithAddress.StateProvinceName], 
            T.PostalCode AS [Purchasing_VVendorWithAddress.PostalCode], 
            T.CountryRegionName AS [Purchasing_VVendorWithAddress.CountryRegionName], 
            T.AddressLine2 AS [Purchasing_VVendorWithAddress.AddressLine2], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Purchasing_VVendorWithAddresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Purchasing_VVendorWithAddresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView161()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_VVendorWithAddresses
        [Tutorial.LinqToEntities.FullWithViews.Purchasing_VVendorWithAddress](T1.[Purchasing_VVendorWithAddress.BusinessEntityId], T1.[Purchasing_VVendorWithAddress.Name], T1.[Purchasing_VVendorWithAddress.AddressType], T1.[Purchasing_VVendorWithAddress.AddressLine1], T1.[Purchasing_VVendorWithAddress.City], T1.[Purchasing_VVendorWithAddress.StateProvinceName], T1.[Purchasing_VVendorWithAddress.PostalCode], T1.[Purchasing_VVendorWithAddress.CountryRegionName], T1.[Purchasing_VVendorWithAddress.AddressLine2])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Purchasing_VVendorWithAddress.BusinessEntityId], 
            T.Name AS [Purchasing_VVendorWithAddress.Name], 
            T.AddressType AS [Purchasing_VVendorWithAddress.AddressType], 
            T.AddressLine1 AS [Purchasing_VVendorWithAddress.AddressLine1], 
            T.City AS [Purchasing_VVendorWithAddress.City], 
            T.StateProvinceName AS [Purchasing_VVendorWithAddress.StateProvinceName], 
            T.PostalCode AS [Purchasing_VVendorWithAddress.PostalCode], 
            T.CountryRegionName AS [Purchasing_VVendorWithAddress.CountryRegionName], 
            T.AddressLine2 AS [Purchasing_VVendorWithAddress.AddressLine2], 
            True AS _from0
        FROM CodeFirstDatabase.Purchasing_VVendorWithAddress AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Purchasing_VVendorWithContact.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView162()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_VVendorWithContact
        [CodeFirstDatabaseSchema.Purchasing_VVendorWithContact](T1.[Purchasing_VVendorWithContact.BusinessEntityID], T1.[Purchasing_VVendorWithContact.Name], T1.[Purchasing_VVendorWithContact.ContactType], T1.[Purchasing_VVendorWithContact.FirstName], T1.[Purchasing_VVendorWithContact.LastName], T1.[Purchasing_VVendorWithContact.EmailPromotion], T1.[Purchasing_VVendorWithContact.Title], T1.[Purchasing_VVendorWithContact.MiddleName], T1.[Purchasing_VVendorWithContact.Suffix], T1.[Purchasing_VVendorWithContact.PhoneNumber], T1.[Purchasing_VVendorWithContact.PhoneNumberType], T1.[Purchasing_VVendorWithContact.EmailAddress])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Purchasing_VVendorWithContact.BusinessEntityID], 
            T.Name AS [Purchasing_VVendorWithContact.Name], 
            T.ContactType AS [Purchasing_VVendorWithContact.ContactType], 
            T.FirstName AS [Purchasing_VVendorWithContact.FirstName], 
            T.LastName AS [Purchasing_VVendorWithContact.LastName], 
            T.EmailPromotion AS [Purchasing_VVendorWithContact.EmailPromotion], 
            T.Title AS [Purchasing_VVendorWithContact.Title], 
            T.MiddleName AS [Purchasing_VVendorWithContact.MiddleName], 
            T.Suffix AS [Purchasing_VVendorWithContact.Suffix], 
            T.PhoneNumber AS [Purchasing_VVendorWithContact.PhoneNumber], 
            T.PhoneNumberType AS [Purchasing_VVendorWithContact.PhoneNumberType], 
            T.EmailAddress AS [Purchasing_VVendorWithContact.EmailAddress], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Purchasing_VVendorWithContacts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Purchasing_VVendorWithContacts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView163()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Purchasing_VVendorWithContacts
        [Tutorial.LinqToEntities.FullWithViews.Purchasing_VVendorWithContact](T1.[Purchasing_VVendorWithContact.BusinessEntityId], T1.[Purchasing_VVendorWithContact.Name], T1.[Purchasing_VVendorWithContact.ContactType], T1.[Purchasing_VVendorWithContact.FirstName], T1.[Purchasing_VVendorWithContact.LastName], T1.[Purchasing_VVendorWithContact.EmailPromotion], T1.[Purchasing_VVendorWithContact.Title], T1.[Purchasing_VVendorWithContact.MiddleName], T1.[Purchasing_VVendorWithContact.Suffix], T1.[Purchasing_VVendorWithContact.PhoneNumber], T1.[Purchasing_VVendorWithContact.PhoneNumberType], T1.[Purchasing_VVendorWithContact.EmailAddress])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Purchasing_VVendorWithContact.BusinessEntityId], 
            T.Name AS [Purchasing_VVendorWithContact.Name], 
            T.ContactType AS [Purchasing_VVendorWithContact.ContactType], 
            T.FirstName AS [Purchasing_VVendorWithContact.FirstName], 
            T.LastName AS [Purchasing_VVendorWithContact.LastName], 
            T.EmailPromotion AS [Purchasing_VVendorWithContact.EmailPromotion], 
            T.Title AS [Purchasing_VVendorWithContact.Title], 
            T.MiddleName AS [Purchasing_VVendorWithContact.MiddleName], 
            T.Suffix AS [Purchasing_VVendorWithContact.Suffix], 
            T.PhoneNumber AS [Purchasing_VVendorWithContact.PhoneNumber], 
            T.PhoneNumberType AS [Purchasing_VVendorWithContact.PhoneNumberType], 
            T.EmailAddress AS [Purchasing_VVendorWithContact.EmailAddress], 
            True AS _from0
        FROM CodeFirstDatabase.Purchasing_VVendorWithContact AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_VIndividualCustomer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView164()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VIndividualCustomer
        [CodeFirstDatabaseSchema.Sales_VIndividualCustomer](T1.[Sales_VIndividualCustomer.BusinessEntityID], T1.[Sales_VIndividualCustomer.FirstName], T1.[Sales_VIndividualCustomer.LastName], T1.[Sales_VIndividualCustomer.EmailPromotion], T1.[Sales_VIndividualCustomer.AddressType], T1.[Sales_VIndividualCustomer.AddressLine1], T1.[Sales_VIndividualCustomer.City], T1.[Sales_VIndividualCustomer.StateProvinceName], T1.[Sales_VIndividualCustomer.PostalCode], T1.[Sales_VIndividualCustomer.CountryRegionName], T1.[Sales_VIndividualCustomer.Title], T1.[Sales_VIndividualCustomer.MiddleName], T1.[Sales_VIndividualCustomer.Suffix], T1.[Sales_VIndividualCustomer.PhoneNumber], T1.[Sales_VIndividualCustomer.PhoneNumberType], T1.[Sales_VIndividualCustomer.EmailAddress], T1.[Sales_VIndividualCustomer.AddressLine2], T1.[Sales_VIndividualCustomer.Demographics])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_VIndividualCustomer.BusinessEntityID], 
            T.FirstName AS [Sales_VIndividualCustomer.FirstName], 
            T.LastName AS [Sales_VIndividualCustomer.LastName], 
            T.EmailPromotion AS [Sales_VIndividualCustomer.EmailPromotion], 
            T.AddressType AS [Sales_VIndividualCustomer.AddressType], 
            T.AddressLine1 AS [Sales_VIndividualCustomer.AddressLine1], 
            T.City AS [Sales_VIndividualCustomer.City], 
            T.StateProvinceName AS [Sales_VIndividualCustomer.StateProvinceName], 
            T.PostalCode AS [Sales_VIndividualCustomer.PostalCode], 
            T.CountryRegionName AS [Sales_VIndividualCustomer.CountryRegionName], 
            T.Title AS [Sales_VIndividualCustomer.Title], 
            T.MiddleName AS [Sales_VIndividualCustomer.MiddleName], 
            T.Suffix AS [Sales_VIndividualCustomer.Suffix], 
            T.PhoneNumber AS [Sales_VIndividualCustomer.PhoneNumber], 
            T.PhoneNumberType AS [Sales_VIndividualCustomer.PhoneNumberType], 
            T.EmailAddress AS [Sales_VIndividualCustomer.EmailAddress], 
            T.AddressLine2 AS [Sales_VIndividualCustomer.AddressLine2], 
            T.Demographics AS [Sales_VIndividualCustomer.Demographics], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_VIndividualCustomers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_VIndividualCustomers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView165()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VIndividualCustomers
        [Tutorial.LinqToEntities.FullWithViews.Sales_VIndividualCustomer](T1.[Sales_VIndividualCustomer.BusinessEntityId], T1.[Sales_VIndividualCustomer.FirstName], T1.[Sales_VIndividualCustomer.LastName], T1.[Sales_VIndividualCustomer.EmailPromotion], T1.[Sales_VIndividualCustomer.AddressType], T1.[Sales_VIndividualCustomer.AddressLine1], T1.[Sales_VIndividualCustomer.City], T1.[Sales_VIndividualCustomer.StateProvinceName], T1.[Sales_VIndividualCustomer.PostalCode], T1.[Sales_VIndividualCustomer.CountryRegionName], T1.[Sales_VIndividualCustomer.Title], T1.[Sales_VIndividualCustomer.MiddleName], T1.[Sales_VIndividualCustomer.Suffix], T1.[Sales_VIndividualCustomer.PhoneNumber], T1.[Sales_VIndividualCustomer.PhoneNumberType], T1.[Sales_VIndividualCustomer.EmailAddress], T1.[Sales_VIndividualCustomer.AddressLine2], T1.[Sales_VIndividualCustomer.Demographics])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_VIndividualCustomer.BusinessEntityId], 
            T.FirstName AS [Sales_VIndividualCustomer.FirstName], 
            T.LastName AS [Sales_VIndividualCustomer.LastName], 
            T.EmailPromotion AS [Sales_VIndividualCustomer.EmailPromotion], 
            T.AddressType AS [Sales_VIndividualCustomer.AddressType], 
            T.AddressLine1 AS [Sales_VIndividualCustomer.AddressLine1], 
            T.City AS [Sales_VIndividualCustomer.City], 
            T.StateProvinceName AS [Sales_VIndividualCustomer.StateProvinceName], 
            T.PostalCode AS [Sales_VIndividualCustomer.PostalCode], 
            T.CountryRegionName AS [Sales_VIndividualCustomer.CountryRegionName], 
            T.Title AS [Sales_VIndividualCustomer.Title], 
            T.MiddleName AS [Sales_VIndividualCustomer.MiddleName], 
            T.Suffix AS [Sales_VIndividualCustomer.Suffix], 
            T.PhoneNumber AS [Sales_VIndividualCustomer.PhoneNumber], 
            T.PhoneNumberType AS [Sales_VIndividualCustomer.PhoneNumberType], 
            T.EmailAddress AS [Sales_VIndividualCustomer.EmailAddress], 
            T.AddressLine2 AS [Sales_VIndividualCustomer.AddressLine2], 
            T.Demographics AS [Sales_VIndividualCustomer.Demographics], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_VIndividualCustomer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_VPersonDemographic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView166()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VPersonDemographic
        [CodeFirstDatabaseSchema.Sales_VPersonDemographic](T1.[Sales_VPersonDemographic.BusinessEntityID], T1.[Sales_VPersonDemographic.TotalPurchaseYTD], T1.[Sales_VPersonDemographic.DateFirstPurchase], T1.[Sales_VPersonDemographic.BirthDate], T1.[Sales_VPersonDemographic.MaritalStatus], T1.[Sales_VPersonDemographic.YearlyIncome], T1.[Sales_VPersonDemographic.Gender], T1.[Sales_VPersonDemographic.TotalChildren], T1.[Sales_VPersonDemographic.NumberChildrenAtHome], T1.[Sales_VPersonDemographic.Education], T1.[Sales_VPersonDemographic.Occupation], T1.[Sales_VPersonDemographic.HomeOwnerFlag], T1.[Sales_VPersonDemographic.NumberCarsOwned])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_VPersonDemographic.BusinessEntityID], 
            T.TotalPurchaseYtd AS [Sales_VPersonDemographic.TotalPurchaseYTD], 
            T.DateFirstPurchase AS [Sales_VPersonDemographic.DateFirstPurchase], 
            T.BirthDate AS [Sales_VPersonDemographic.BirthDate], 
            T.MaritalStatus AS [Sales_VPersonDemographic.MaritalStatus], 
            T.YearlyIncome AS [Sales_VPersonDemographic.YearlyIncome], 
            T.Gender AS [Sales_VPersonDemographic.Gender], 
            T.TotalChildren AS [Sales_VPersonDemographic.TotalChildren], 
            T.NumberChildrenAtHome AS [Sales_VPersonDemographic.NumberChildrenAtHome], 
            T.Education AS [Sales_VPersonDemographic.Education], 
            T.Occupation AS [Sales_VPersonDemographic.Occupation], 
            T.HomeOwnerFlag AS [Sales_VPersonDemographic.HomeOwnerFlag], 
            T.NumberCarsOwned AS [Sales_VPersonDemographic.NumberCarsOwned], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_VPersonDemographics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_VPersonDemographics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView167()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VPersonDemographics
        [Tutorial.LinqToEntities.FullWithViews.Sales_VPersonDemographic](T1.[Sales_VPersonDemographic.BusinessEntityId], T1.[Sales_VPersonDemographic.TotalPurchaseYtd], T1.[Sales_VPersonDemographic.DateFirstPurchase], T1.[Sales_VPersonDemographic.BirthDate], T1.[Sales_VPersonDemographic.MaritalStatus], T1.[Sales_VPersonDemographic.YearlyIncome], T1.[Sales_VPersonDemographic.Gender], T1.[Sales_VPersonDemographic.TotalChildren], T1.[Sales_VPersonDemographic.NumberChildrenAtHome], T1.[Sales_VPersonDemographic.Education], T1.[Sales_VPersonDemographic.Occupation], T1.[Sales_VPersonDemographic.HomeOwnerFlag], T1.[Sales_VPersonDemographic.NumberCarsOwned])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_VPersonDemographic.BusinessEntityId], 
            T.TotalPurchaseYTD AS [Sales_VPersonDemographic.TotalPurchaseYtd], 
            T.DateFirstPurchase AS [Sales_VPersonDemographic.DateFirstPurchase], 
            T.BirthDate AS [Sales_VPersonDemographic.BirthDate], 
            T.MaritalStatus AS [Sales_VPersonDemographic.MaritalStatus], 
            T.YearlyIncome AS [Sales_VPersonDemographic.YearlyIncome], 
            T.Gender AS [Sales_VPersonDemographic.Gender], 
            T.TotalChildren AS [Sales_VPersonDemographic.TotalChildren], 
            T.NumberChildrenAtHome AS [Sales_VPersonDemographic.NumberChildrenAtHome], 
            T.Education AS [Sales_VPersonDemographic.Education], 
            T.Occupation AS [Sales_VPersonDemographic.Occupation], 
            T.HomeOwnerFlag AS [Sales_VPersonDemographic.HomeOwnerFlag], 
            T.NumberCarsOwned AS [Sales_VPersonDemographic.NumberCarsOwned], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_VPersonDemographic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_VSalesPerson.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView168()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VSalesPerson
        [CodeFirstDatabaseSchema.Sales_VSalesPerson](T1.[Sales_VSalesPerson.BusinessEntityID], T1.[Sales_VSalesPerson.FirstName], T1.[Sales_VSalesPerson.LastName], T1.[Sales_VSalesPerson.JobTitle], T1.[Sales_VSalesPerson.EmailPromotion], T1.[Sales_VSalesPerson.AddressLine1], T1.[Sales_VSalesPerson.City], T1.[Sales_VSalesPerson.StateProvinceName], T1.[Sales_VSalesPerson.PostalCode], T1.[Sales_VSalesPerson.CountryRegionName], T1.[Sales_VSalesPerson.SalesYTD], T1.[Sales_VSalesPerson.SalesLastYear], T1.[Sales_VSalesPerson.Title], T1.[Sales_VSalesPerson.MiddleName], T1.[Sales_VSalesPerson.Suffix], T1.[Sales_VSalesPerson.PhoneNumber], T1.[Sales_VSalesPerson.PhoneNumberType], T1.[Sales_VSalesPerson.EmailAddress], T1.[Sales_VSalesPerson.AddressLine2], T1.[Sales_VSalesPerson.TerritoryName], T1.[Sales_VSalesPerson.TerritoryGroup], T1.[Sales_VSalesPerson.SalesQuota])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_VSalesPerson.BusinessEntityID], 
            T.FirstName AS [Sales_VSalesPerson.FirstName], 
            T.LastName AS [Sales_VSalesPerson.LastName], 
            T.JobTitle AS [Sales_VSalesPerson.JobTitle], 
            T.EmailPromotion AS [Sales_VSalesPerson.EmailPromotion], 
            T.AddressLine1 AS [Sales_VSalesPerson.AddressLine1], 
            T.City AS [Sales_VSalesPerson.City], 
            T.StateProvinceName AS [Sales_VSalesPerson.StateProvinceName], 
            T.PostalCode AS [Sales_VSalesPerson.PostalCode], 
            T.CountryRegionName AS [Sales_VSalesPerson.CountryRegionName], 
            T.SalesYtd AS [Sales_VSalesPerson.SalesYTD], 
            T.SalesLastYear AS [Sales_VSalesPerson.SalesLastYear], 
            T.Title AS [Sales_VSalesPerson.Title], 
            T.MiddleName AS [Sales_VSalesPerson.MiddleName], 
            T.Suffix AS [Sales_VSalesPerson.Suffix], 
            T.PhoneNumber AS [Sales_VSalesPerson.PhoneNumber], 
            T.PhoneNumberType AS [Sales_VSalesPerson.PhoneNumberType], 
            T.EmailAddress AS [Sales_VSalesPerson.EmailAddress], 
            T.AddressLine2 AS [Sales_VSalesPerson.AddressLine2], 
            T.TerritoryName AS [Sales_VSalesPerson.TerritoryName], 
            T.TerritoryGroup AS [Sales_VSalesPerson.TerritoryGroup], 
            T.SalesQuota AS [Sales_VSalesPerson.SalesQuota], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_VSalesPersons AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_VSalesPersons.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView169()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VSalesPersons
        [Tutorial.LinqToEntities.FullWithViews.Sales_VSalesPerson](T1.[Sales_VSalesPerson.BusinessEntityId], T1.[Sales_VSalesPerson.FirstName], T1.[Sales_VSalesPerson.LastName], T1.[Sales_VSalesPerson.JobTitle], T1.[Sales_VSalesPerson.EmailPromotion], T1.[Sales_VSalesPerson.AddressLine1], T1.[Sales_VSalesPerson.City], T1.[Sales_VSalesPerson.StateProvinceName], T1.[Sales_VSalesPerson.PostalCode], T1.[Sales_VSalesPerson.CountryRegionName], T1.[Sales_VSalesPerson.SalesYtd], T1.[Sales_VSalesPerson.SalesLastYear], T1.[Sales_VSalesPerson.Title], T1.[Sales_VSalesPerson.MiddleName], T1.[Sales_VSalesPerson.Suffix], T1.[Sales_VSalesPerson.PhoneNumber], T1.[Sales_VSalesPerson.PhoneNumberType], T1.[Sales_VSalesPerson.EmailAddress], T1.[Sales_VSalesPerson.AddressLine2], T1.[Sales_VSalesPerson.TerritoryName], T1.[Sales_VSalesPerson.TerritoryGroup], T1.[Sales_VSalesPerson.SalesQuota])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_VSalesPerson.BusinessEntityId], 
            T.FirstName AS [Sales_VSalesPerson.FirstName], 
            T.LastName AS [Sales_VSalesPerson.LastName], 
            T.JobTitle AS [Sales_VSalesPerson.JobTitle], 
            T.EmailPromotion AS [Sales_VSalesPerson.EmailPromotion], 
            T.AddressLine1 AS [Sales_VSalesPerson.AddressLine1], 
            T.City AS [Sales_VSalesPerson.City], 
            T.StateProvinceName AS [Sales_VSalesPerson.StateProvinceName], 
            T.PostalCode AS [Sales_VSalesPerson.PostalCode], 
            T.CountryRegionName AS [Sales_VSalesPerson.CountryRegionName], 
            T.SalesYTD AS [Sales_VSalesPerson.SalesYtd], 
            T.SalesLastYear AS [Sales_VSalesPerson.SalesLastYear], 
            T.Title AS [Sales_VSalesPerson.Title], 
            T.MiddleName AS [Sales_VSalesPerson.MiddleName], 
            T.Suffix AS [Sales_VSalesPerson.Suffix], 
            T.PhoneNumber AS [Sales_VSalesPerson.PhoneNumber], 
            T.PhoneNumberType AS [Sales_VSalesPerson.PhoneNumberType], 
            T.EmailAddress AS [Sales_VSalesPerson.EmailAddress], 
            T.AddressLine2 AS [Sales_VSalesPerson.AddressLine2], 
            T.TerritoryName AS [Sales_VSalesPerson.TerritoryName], 
            T.TerritoryGroup AS [Sales_VSalesPerson.TerritoryGroup], 
            T.SalesQuota AS [Sales_VSalesPerson.SalesQuota], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_VSalesPerson AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_VSalesPersonSalesByFiscalYear.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView170()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VSalesPersonSalesByFiscalYear
        [CodeFirstDatabaseSchema.Sales_VSalesPersonSalesByFiscalYear](T1.[Sales_VSalesPersonSalesByFiscalYear.JobTitle], T1.[Sales_VSalesPersonSalesByFiscalYear.SalesTerritory], T1.[Sales_VSalesPersonSalesByFiscalYear.SalesPersonID], T1.[Sales_VSalesPersonSalesByFiscalYear.FullName], T1.[Sales_VSalesPersonSalesByFiscalYear.2002], T1.[Sales_VSalesPersonSalesByFiscalYear.2003], T1.[Sales_VSalesPersonSalesByFiscalYear.2004])
    FROM (
        SELECT 
            T.JobTitle AS [Sales_VSalesPersonSalesByFiscalYear.JobTitle], 
            T.SalesTerritory AS [Sales_VSalesPersonSalesByFiscalYear.SalesTerritory], 
            T.SalesPersonId AS [Sales_VSalesPersonSalesByFiscalYear.SalesPersonID], 
            T.FullName AS [Sales_VSalesPersonSalesByFiscalYear.FullName], 
            T.C2002 AS [Sales_VSalesPersonSalesByFiscalYear.2002], 
            T.C2003 AS [Sales_VSalesPersonSalesByFiscalYear.2003], 
            T.C2004 AS [Sales_VSalesPersonSalesByFiscalYear.2004], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_VSalesPersonSalesByFiscalYears AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_VSalesPersonSalesByFiscalYears.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView171()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VSalesPersonSalesByFiscalYears
        [Tutorial.LinqToEntities.FullWithViews.Sales_VSalesPersonSalesByFiscalYear](T1.[Sales_VSalesPersonSalesByFiscalYear.JobTitle], T1.[Sales_VSalesPersonSalesByFiscalYear.SalesTerritory], T1.[Sales_VSalesPersonSalesByFiscalYear.SalesPersonId], T1.[Sales_VSalesPersonSalesByFiscalYear.FullName], T1.[Sales_VSalesPersonSalesByFiscalYear.C2002], T1.[Sales_VSalesPersonSalesByFiscalYear.C2003], T1.[Sales_VSalesPersonSalesByFiscalYear.C2004])
    FROM (
        SELECT 
            T.JobTitle AS [Sales_VSalesPersonSalesByFiscalYear.JobTitle], 
            T.SalesTerritory AS [Sales_VSalesPersonSalesByFiscalYear.SalesTerritory], 
            T.SalesPersonID AS [Sales_VSalesPersonSalesByFiscalYear.SalesPersonId], 
            T.FullName AS [Sales_VSalesPersonSalesByFiscalYear.FullName], 
            T.[2002] AS [Sales_VSalesPersonSalesByFiscalYear.C2002], 
            T.[2003] AS [Sales_VSalesPersonSalesByFiscalYear.C2003], 
            T.[2004] AS [Sales_VSalesPersonSalesByFiscalYear.C2004], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_VSalesPersonSalesByFiscalYear AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_VStoreWithAddress.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView172()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VStoreWithAddress
        [CodeFirstDatabaseSchema.Sales_VStoreWithAddress](T1.[Sales_VStoreWithAddress.BusinessEntityID], T1.[Sales_VStoreWithAddress.Name], T1.[Sales_VStoreWithAddress.AddressType], T1.[Sales_VStoreWithAddress.AddressLine1], T1.[Sales_VStoreWithAddress.City], T1.[Sales_VStoreWithAddress.StateProvinceName], T1.[Sales_VStoreWithAddress.PostalCode], T1.[Sales_VStoreWithAddress.CountryRegionName], T1.[Sales_VStoreWithAddress.AddressLine2])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_VStoreWithAddress.BusinessEntityID], 
            T.Name AS [Sales_VStoreWithAddress.Name], 
            T.AddressType AS [Sales_VStoreWithAddress.AddressType], 
            T.AddressLine1 AS [Sales_VStoreWithAddress.AddressLine1], 
            T.City AS [Sales_VStoreWithAddress.City], 
            T.StateProvinceName AS [Sales_VStoreWithAddress.StateProvinceName], 
            T.PostalCode AS [Sales_VStoreWithAddress.PostalCode], 
            T.CountryRegionName AS [Sales_VStoreWithAddress.CountryRegionName], 
            T.AddressLine2 AS [Sales_VStoreWithAddress.AddressLine2], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_VStoreWithAddresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_VStoreWithAddresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView173()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VStoreWithAddresses
        [Tutorial.LinqToEntities.FullWithViews.Sales_VStoreWithAddress](T1.[Sales_VStoreWithAddress.BusinessEntityId], T1.[Sales_VStoreWithAddress.Name], T1.[Sales_VStoreWithAddress.AddressType], T1.[Sales_VStoreWithAddress.AddressLine1], T1.[Sales_VStoreWithAddress.City], T1.[Sales_VStoreWithAddress.StateProvinceName], T1.[Sales_VStoreWithAddress.PostalCode], T1.[Sales_VStoreWithAddress.CountryRegionName], T1.[Sales_VStoreWithAddress.AddressLine2])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_VStoreWithAddress.BusinessEntityId], 
            T.Name AS [Sales_VStoreWithAddress.Name], 
            T.AddressType AS [Sales_VStoreWithAddress.AddressType], 
            T.AddressLine1 AS [Sales_VStoreWithAddress.AddressLine1], 
            T.City AS [Sales_VStoreWithAddress.City], 
            T.StateProvinceName AS [Sales_VStoreWithAddress.StateProvinceName], 
            T.PostalCode AS [Sales_VStoreWithAddress.PostalCode], 
            T.CountryRegionName AS [Sales_VStoreWithAddress.CountryRegionName], 
            T.AddressLine2 AS [Sales_VStoreWithAddress.AddressLine2], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_VStoreWithAddress AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_VStoreWithContact.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView174()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VStoreWithContact
        [CodeFirstDatabaseSchema.Sales_VStoreWithContact](T1.[Sales_VStoreWithContact.BusinessEntityID], T1.[Sales_VStoreWithContact.Name], T1.[Sales_VStoreWithContact.ContactType], T1.[Sales_VStoreWithContact.FirstName], T1.[Sales_VStoreWithContact.LastName], T1.[Sales_VStoreWithContact.EmailPromotion], T1.[Sales_VStoreWithContact.Title], T1.[Sales_VStoreWithContact.MiddleName], T1.[Sales_VStoreWithContact.Suffix], T1.[Sales_VStoreWithContact.PhoneNumber], T1.[Sales_VStoreWithContact.PhoneNumberType], T1.[Sales_VStoreWithContact.EmailAddress])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_VStoreWithContact.BusinessEntityID], 
            T.Name AS [Sales_VStoreWithContact.Name], 
            T.ContactType AS [Sales_VStoreWithContact.ContactType], 
            T.FirstName AS [Sales_VStoreWithContact.FirstName], 
            T.LastName AS [Sales_VStoreWithContact.LastName], 
            T.EmailPromotion AS [Sales_VStoreWithContact.EmailPromotion], 
            T.Title AS [Sales_VStoreWithContact.Title], 
            T.MiddleName AS [Sales_VStoreWithContact.MiddleName], 
            T.Suffix AS [Sales_VStoreWithContact.Suffix], 
            T.PhoneNumber AS [Sales_VStoreWithContact.PhoneNumber], 
            T.PhoneNumberType AS [Sales_VStoreWithContact.PhoneNumberType], 
            T.EmailAddress AS [Sales_VStoreWithContact.EmailAddress], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_VStoreWithContacts AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_VStoreWithContacts.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView175()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VStoreWithContacts
        [Tutorial.LinqToEntities.FullWithViews.Sales_VStoreWithContact](T1.[Sales_VStoreWithContact.BusinessEntityId], T1.[Sales_VStoreWithContact.Name], T1.[Sales_VStoreWithContact.ContactType], T1.[Sales_VStoreWithContact.FirstName], T1.[Sales_VStoreWithContact.LastName], T1.[Sales_VStoreWithContact.EmailPromotion], T1.[Sales_VStoreWithContact.Title], T1.[Sales_VStoreWithContact.MiddleName], T1.[Sales_VStoreWithContact.Suffix], T1.[Sales_VStoreWithContact.PhoneNumber], T1.[Sales_VStoreWithContact.PhoneNumberType], T1.[Sales_VStoreWithContact.EmailAddress])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_VStoreWithContact.BusinessEntityId], 
            T.Name AS [Sales_VStoreWithContact.Name], 
            T.ContactType AS [Sales_VStoreWithContact.ContactType], 
            T.FirstName AS [Sales_VStoreWithContact.FirstName], 
            T.LastName AS [Sales_VStoreWithContact.LastName], 
            T.EmailPromotion AS [Sales_VStoreWithContact.EmailPromotion], 
            T.Title AS [Sales_VStoreWithContact.Title], 
            T.MiddleName AS [Sales_VStoreWithContact.MiddleName], 
            T.Suffix AS [Sales_VStoreWithContact.Suffix], 
            T.PhoneNumber AS [Sales_VStoreWithContact.PhoneNumber], 
            T.PhoneNumberType AS [Sales_VStoreWithContact.PhoneNumberType], 
            T.EmailAddress AS [Sales_VStoreWithContact.EmailAddress], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_VStoreWithContact AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Sales_VStoreWithDemographic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView176()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VStoreWithDemographic
        [CodeFirstDatabaseSchema.Sales_VStoreWithDemographic](T1.[Sales_VStoreWithDemographic.BusinessEntityID], T1.[Sales_VStoreWithDemographic.Name], T1.[Sales_VStoreWithDemographic.AnnualSales], T1.[Sales_VStoreWithDemographic.AnnualRevenue], T1.[Sales_VStoreWithDemographic.BankName], T1.[Sales_VStoreWithDemographic.BusinessType], T1.[Sales_VStoreWithDemographic.YearOpened], T1.[Sales_VStoreWithDemographic.Specialty], T1.[Sales_VStoreWithDemographic.SquareFeet], T1.[Sales_VStoreWithDemographic.Brands], T1.[Sales_VStoreWithDemographic.Internet], T1.[Sales_VStoreWithDemographic.NumberEmployees])
    FROM (
        SELECT 
            T.BusinessEntityId AS [Sales_VStoreWithDemographic.BusinessEntityID], 
            T.Name AS [Sales_VStoreWithDemographic.Name], 
            T.AnnualSales AS [Sales_VStoreWithDemographic.AnnualSales], 
            T.AnnualRevenue AS [Sales_VStoreWithDemographic.AnnualRevenue], 
            T.BankName AS [Sales_VStoreWithDemographic.BankName], 
            T.BusinessType AS [Sales_VStoreWithDemographic.BusinessType], 
            T.YearOpened AS [Sales_VStoreWithDemographic.YearOpened], 
            T.Specialty AS [Sales_VStoreWithDemographic.Specialty], 
            T.SquareFeet AS [Sales_VStoreWithDemographic.SquareFeet], 
            T.Brands AS [Sales_VStoreWithDemographic.Brands], 
            T.Internet AS [Sales_VStoreWithDemographic.Internet], 
            T.NumberEmployees AS [Sales_VStoreWithDemographic.NumberEmployees], 
            True AS _from0
        FROM FullAdventureWorksWithViews.Sales_VStoreWithDemographics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for FullAdventureWorksWithViews.Sales_VStoreWithDemographics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView177()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Sales_VStoreWithDemographics
        [Tutorial.LinqToEntities.FullWithViews.Sales_VStoreWithDemographic](T1.[Sales_VStoreWithDemographic.BusinessEntityId], T1.[Sales_VStoreWithDemographic.Name], T1.[Sales_VStoreWithDemographic.AnnualSales], T1.[Sales_VStoreWithDemographic.AnnualRevenue], T1.[Sales_VStoreWithDemographic.BankName], T1.[Sales_VStoreWithDemographic.BusinessType], T1.[Sales_VStoreWithDemographic.YearOpened], T1.[Sales_VStoreWithDemographic.Specialty], T1.[Sales_VStoreWithDemographic.SquareFeet], T1.[Sales_VStoreWithDemographic.Brands], T1.[Sales_VStoreWithDemographic.Internet], T1.[Sales_VStoreWithDemographic.NumberEmployees])
    FROM (
        SELECT 
            T.BusinessEntityID AS [Sales_VStoreWithDemographic.BusinessEntityId], 
            T.Name AS [Sales_VStoreWithDemographic.Name], 
            T.AnnualSales AS [Sales_VStoreWithDemographic.AnnualSales], 
            T.AnnualRevenue AS [Sales_VStoreWithDemographic.AnnualRevenue], 
            T.BankName AS [Sales_VStoreWithDemographic.BankName], 
            T.BusinessType AS [Sales_VStoreWithDemographic.BusinessType], 
            T.YearOpened AS [Sales_VStoreWithDemographic.YearOpened], 
            T.Specialty AS [Sales_VStoreWithDemographic.Specialty], 
            T.SquareFeet AS [Sales_VStoreWithDemographic.SquareFeet], 
            T.Brands AS [Sales_VStoreWithDemographic.Brands], 
            T.Internet AS [Sales_VStoreWithDemographic.Internet], 
            T.NumberEmployees AS [Sales_VStoreWithDemographic.NumberEmployees], 
            True AS _from0
        FROM CodeFirstDatabase.Sales_VStoreWithDemographic AS T
    ) AS T1");
        }
    }
}
